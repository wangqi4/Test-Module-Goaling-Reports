"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:","STHI\STHI.exe"
"EXCEL:","out_28179.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","0"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","0"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Copy:Y@EXEDIR@\SPFCopy.bat <~>\\cdATSHFS.intel.com\CDATAnalysis$\MAOATM\zhengwee\QPS QTG\QTG_WIP.tab,\\AZATSHFS.intel.com\AZATAnalysis$\MAOATM\CDAT_IE\PPV ULPPVM RR\ULSPM_EUPH Calculation.csv,\\cdATSHFS.intel.com\CDATAnalysis$\MAOATM\WangQi4\BP change.csv,D:\User\MI\CDATx Wip Limit file.csv,\\cdATSHFS.intel.com\CDATAnalysis$\MAOATM\WangQi4\BP_ByDLCP.csv,\\AZATSHFS.intel.com\AZATAnalysis$\MAOATM\CDAT_IE\RR Dashboard\RR With Flag.csv,\\cdATSHFS.intel.com\CDATAnalysis$\MAOATM\WangQi4\Finish.csv<~> <~>.\<~> <~>N<~>"
"UTILITIESDESC:","Copy Files/Folders"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Write-File:Ytransferfile.py<SOF><{><}>import pandas as pd<{><}>df=pd.read_csv(r'RR With Flag.csv',names=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','Q','P','R','S','T','U','V','W'])<{><}>df.to_csv('MOR.csv')"
"UTILITIESDESC:","Write Text to a file. Optionally use <EOF> to mark end of file"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Python:Y@EXEDIR@\Run_Python_Script.va <~>transferfile.py<~> <~><~> <~>N<~> <~><<<SPF-APP-SERVER>>><~> <~>Python-v3<~>"
"UTILITIESDESC:","Run Python script"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{Calendar}</@#;>Calendar"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{Cell Info}</@#;>Cell Info"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{Miss Product}</@#;>Miss Product"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>cell_info.tab<~> <~>excludeprod.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_34}</@#;>Wip Row Data By DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_48}</@#;>Wip Row Data By DLCP Sort"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_37}</@#;>7399 Ship By DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_35}</@#;>Wip Row Data By DLCP Sort1"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_45}</@#;>Max HB cell info By DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_44}</@#;>QTG By DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_36}</@#;>QTG By DLCP1"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_52}</@#;>QTG By DLCP For ULPPVM"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_17_0}</@#;>APRT20 Data"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{Pure Test}</@#;>Pure Test"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_39}</@#;>Pure_Test BY DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_47}</@#;>STHI current tested unit on tool"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{TI}</@#;>TI"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{QA MOR}</@#;>MOR Sort"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_32}</@#;>PPVM_IE Mor"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{Last Lot PPVM Rate}</@#;>Last Lot PPVM Rate"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_40}</@#;>Last Lot PPVM Rate By DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{6970Lastlot Sort}</@#;>6970Lastlot Sort"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{Unit PPVM map Mor}</@#;>Unit PPVM map Mor"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_3}</@#;>PPVS PROD"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{EQA}</@#;>LOT Level PPVM"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{EQA QTG}</@#;>LOT Level PPVM1"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_17}</@#;>Map Mor"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{MOR Sort}</@#;>MOR Sort"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_38}</@#;>Mor Sort By DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{SFGI Wip}</@#;>SFGI Wip"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{1_2}</@#;>Fre Final Report"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_41}</@#;>Fre Final Report by DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_14}</@#;>QPS QTG Sort"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_23_0}</@#;>PPVS AND PPVM Mor"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_46}</@#;>ULPPVM Mor By DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{Actual Unit SPM}</@#;>Actual Unit SPM"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{SPM data Sort}</@#;>SPM data Sort"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_21_0}</@#;>SAMs ULPPVM Data"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:N{PrePostQuery_51}</@#;>SAMs ULPPVM Data exclude DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_21}</@#;>Unit PPVM Qtg Exclude DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_49}</@#;>Unit PPVM Qtg By DLCP"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{d}</@#;>final Report"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_20}</@#;>Final Resault"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_24}</@#;>Unit PPVM Detail"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Value-In-File:Y{VALUE-IN-FILE} <~>calendar.tab<~> <~>MyData<~> <~>shift_qty<~>"
"UTILITIESDESC:","Retrieve a column value in a File"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Start-Macro:Y{START-MACRO} <~>calendar.tab<~>"
"UTILITIESDESC:","Start Macro Processing"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->If-Then:Y{IF-THEN} <~>MyData<~> <~>GT<~> <~>0<~> <~>AND<~> <~>MyData<~> <~>LT<~> <~>0.09<~>"
"UTILITIESDESC:","Apply Conditional Logic"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{History}</@#;>History"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>Cellrequest_his.tab<~> <~>history_tr.tab<~> <~>current_time<~> <~>Today - 7 days<~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->End-If:Y{END-IF}"
"UTILITIESDESC:",""
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->End-Macro:Y{END-MACRO}"
"UTILITIESDESC:",""
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:N{TR Table}</@#;>TR Table"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{CDAT_CDATx Wip Summary}</@#;>CDAT_CDATx Wip Summary"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{Final Summary Table}</@#;>Final Summary Table"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{CDAT TO CDATx Lotlist}</@#;>CDAT TO CDATx Lotlist"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{PrePostQuery_29}</@#;>CDAT To CDATx"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{CDATx To CDAT Lotlist}</@#;>CDATx To CDAT Lotlist"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{CDATx To CDAT}</@#;>CDATx To CDAT"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Start-Macro:Y{START-MACRO} <~>CDAT_Tox.tab<~> <~>Y<~>"
"UTILITIESDESC:","Start Macro Processing"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Start-Macro:Y{START-MACRO} <~>CDATx_ Tocd.tab<~> <~>Y<~>"
"UTILITIESDESC:","Start Macro Processing"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y{Report}</@#;>Report"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->End-Macro:Y{END-MACRO}"
"UTILITIESDESC:",""
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->End-Macro:Y{END-MACRO}"
"UTILITIESDESC:",""
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Pre/Post Query:Y"
"UTILITIESDESC:","Pre/Post Query"
"<---- New Query ---->","-99"
"QUERYGRID:"
"JOINGRID:"
"FILTERGRID:"
/START_EMBED_ALL
/EMBED=VG2;Cell Info
"VERSION:","1.0"
"OUTERJOIN:","No"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","cell_info.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","15"
"JOINROWS:","2"
"FILTERROWS:","9"
"COL_ID_COUNTER:","27"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:9:a1"
"TABLEGRID:","1"
"","Antares_Cell",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.ANTARES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","2:9:a0"
"TABLEGRID:","1"
"","Antares_QTG_Current",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.ANTARES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","calendar.tab a2",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a1.product_group_3","product_group_3","Y","Asc","None","Row","c","","productgroup","a1->PG.product_group_3","col11"
"a1.sub_cell","sub_cell","Y","None","None","Row","c","","subcell","a1->SC.[Sub_Cell]","col12"
"a1.sub_cell_desc","sub_cell_desc","Y","None","None","Row","c","","subcell","a1->SC.[Sub_Cell_Desc]","col24"
"a0.factory","factory","Y","None","None","Row","c","","factorycelloperationqpshb","a0->a0.[Factory]","col1"
"a0.cell","cell","Y","None","None","Row","c","MainCell, SubCell or SSPEC see column [Type]","factorycelloperationqpshb","a0->a0.[Cell]","col2"
"a0.operation","operation","Y","None","None","Row","c","","factorycelloperationqpshb","a0->a0.[Operation]","col3"
"a0.qps1","qps1","Y","None","None","Row","f","Quantity Per Shift Current Week","factorycelloperationqpshb","a0->a0.[Qps1]","col4"
"a0.qps2","qps2","Y","None","None","Row","f","Quantity Per Shift Current Week + 1","factorycelloperationqpshb","a0->a0.[Qps2]","col5"
"a0.hb1","hb1","Y","None","None","Row","f","HB/Commit Current Week","factorycelloperationqpshb","a0->a0.[HB1]","col6"
"a0.hb2","hb2","Y","None","None","Row","f","HB/Commit Current Week + 1","factorycelloperationqpshb","a0->a0.[HB2]","col7"
"f(x)->SUM ( {hb1} ) OVER (PARTITION BY  {product_group_3} )","sum_hb1","Y","None","None","Row","N","***","productgroup","All->SUM ( {col6} ) OVER (PARTITION BY  {col11} )","col22"
"f(x)->SUM (  {hb2} ) OVER (PARTITION BY  {product_group_3} )","sum_hb2","Y","None","None","Row","N","***","factorycelloperationqpshb","All->SUM (  {col7} ) OVER (PARTITION BY  {col11} )","col23"
"f(a1)->CASE WHEN  {product_group_3}  in ('BDWU23','BDWU22') THEN 'NULL'!!!!!WHEN  {product_group_3}  in ('ADLP682')  AND {sub_cell_desc} like '%HP%' THEN 'NULL'!!!!! ELSE  !!!!!(CASE WHEN  {sub_cell_desc} like '%HP%'  THEN 'HP'!!!!!WHEN  {sub_cell_desc} like '%UV%'  THEN 'UV'!!!!!WHEN  {sub_cell_desc} like '%UX%'  THEN 'UX'!!!!!ELSE 'NULL'END) END","dlcp","Y","None","None","Row","C","***","productgroup","a1->CASE WHEN  {col11}  in ('BDWU23','BDWU22') THEN 'NULL'!!!!!WHEN  {col11}  in ('ADLP682')  AND {col24} like '%HP%' THEN 'NULL'!!!!! ELSE  !!!!!(CASE WHEN  {col24} like '%HP%'  THEN 'HP'!!!!!WHEN  {col24} like '%UV%'  THEN 'UV'!!!!!WHEN  {col24} like '%UX%'  THEN 'UX'!!!!!ELSE 'NULL'END) END","col25"
"f(a1)->CASE WHEN  {product_group_3}  in ('BDWU23','BDWU22') THEN 'FF'!!!!!WHEN  {product_group_3}  in ('ADLP682','ADLP282')  AND {sub_cell_desc} like '%HP%' THEN 'FF'!!!!! ELSE  !!!!!(CASE WHEN  {sub_cell_desc} like '%UV%'  THEN 'UV'!!!!!WHEN  {sub_cell_desc} like '%UX%'  THEN 'UX'!!!!!WHEN  {sub_cell_desc} like '%HP%'  THEN 'HP'!!!!!ELSE 'FF'END) END","dlcp1","Y","None","None","Row","C","***","@if@1","a1->CASE WHEN  {col11}  in ('BDWU23','BDWU22') THEN 'FF'!!!!!WHEN  {col11}  in ('ADLP682','ADLP282')  AND {col24} like '%HP%' THEN 'FF'!!!!! ELSE  !!!!!(CASE WHEN  {col24} like '%UV%'  THEN 'UV'!!!!!WHEN  {col24} like '%UX%'  THEN 'UX'!!!!!WHEN  {col24} like '%HP%'  THEN 'HP'!!!!!ELSE 'FF'END) END","col26"
"a2.ww_current","ww_current","Y","None","None","Row","c","","csv","SQL->a2.[ww_current]","col27"
"JOINGRID:"
"","","View->a1.sub_cell                                                                                                    : a1->{col12}","=","View->a0.cell                                                                                                    : a0->{col2}",""
"","","View->a1.sub_cell                                                                                                    : a1->{col12}","<>","Sqlite->a2.ww_current                                                                                                    : SQL->{col27}",""
"FILTERGRID:"
"AND","","a0.factory","=","'CD6'","",".","c","factorycelloperationqpshb","a0->a0.[Factory]",""
"AND","","a0.operation","In","'1209'</comma\>'2209'","",".","c","factorycelloperationqpshb","a0->a0.[Operation]",""
"AND","","a1.building","=","'CD6'","","","c","productgroup","a1->PG.[Building]",""
"AND","","a0.cell","In Temp"," {View (a1)} : View->a1.sub_cell","",".","c","factorycelloperationqpshb","a0->a0.[Cell]","a1->{col12}"
"-- AND","(","a0.qps1","!=","0","","","f","factorycelloperationqpshb","a0->a0.[Qps1]",""
"-- OR","","a0.qps2","!=","0","","","f","factorycelloperationqpshb","a0->a0.[Qps2]",""
"-- OR","","a0.hb1","!=","0","","","f","factorycelloperationqpshb","a0->a0.[HB1]",""
"-- OR","","a0.hb2","!=","0",")","","f","factorycelloperationqpshb","a0->a0.[HB2]",""
"AND","","a1.sub_cell","Not Like","'CPU-%'","","","c","subcell","a1->SC.[Sub_Cell]",""









































/END_EMBED
/EMBED=VG2;Report
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","out_21668.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","0"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","0"
"CHART_COUNTER:","8"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->HTML-Report:YYN21668"
"UTILITIESDESC:","Create an HTML Report"
"HTML-BEGIN",""
"HTML-SCRIPT"
"HTML-REPCSS:MYCSS1</@#;>MyCSS1</@#;>"
"

















































Type<\\>Key<\\>COL1<\\>COL2<\\>COL3<\\>COL4<\\>COL5<\\>COL6<\\>COL7<\\>COL8<\\>COL9"
"TYPE<\\>CSS<\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"CSS<\\>sqlpathfinder_style_1.css<\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"FORMAT<\\>Column-Headers<\\>background-color:#0080FF<\\>color:white<\\>font-family:arial<\\>font-size:12<\\>font-style:normal<\\>font-weight:bold<\\>text-align:center<\\>text-decoration:normal<\\>vertical-align:middle"
"FORMAT<\\>Column-Data<\\>background-color:white<\\>color:navy<\\>font-family:arial<\\>font-size:12<\\>font-style:normal<\\>text-align:left<\\>vertical-align:middle<\\><\\>"
"FORMAT<\\>Column-Alt-Row<\\>background-color:white<\\>color:navy<\\>font-family:arial<\\>font-size:12<\\>font-style:normal<\\>text-align:left<\\>vertical-align:middle<\\><\\>"
"FORMAT<\\>At-Top-of-Report<\\>background-color:white<\\>color:navy<\\>font-family:arial<\\>font-size:15<\\>font-style:normal<\\>font-weight:bold<\\>text-align:center<\\>vertical-align:middle<\\>"
"FORMAT<\\>At-Top-of-Col1<\\>background-color:white<\\>color:navy<\\>font-family:arial<\\>font-size:12<\\>font-style:normal<\\>font-weight:bold<\\>text-align:left<\\>vertical-align:middle<\\>"
"FORMAT<\\>At-Top-of-Col2<\\>background-color:white<\\>color:navy<\\>font-family:arial<\\>font-size:12<\\>font-style:normal<\\>font-weight:bold<\\>text-align:left<\\>vertical-align:middle<\\>"
"FORMAT<\\>At-Top-of-Col3<\\>background-color:white<\\>color:navy<\\>font-family:arial<\\>font-size:12<\\>font-style:normal<\\>font-weight:bold<\\>text-align:left<\\>vertical-align:middle<\\>"
"FORMAT<\\>JQX-All-IChart-Text<\\>background-color:white<\\>color:black<\\>font-family:verdana<\\>font-size:11<\\>font-style:normal<\\>font-weight:normal<\\>text-align:left<\\>vertical-align:middle<\\>"
"FORMAT<\\>COLUMN-BORDER<\\>border-color:black<\\>border-collapse:collapse<\\>border-style:solid<\\>border-width:1px<\\>border-spacing:4px<\\><\\><\\><\\>"
"HTML-REPORT-SPEC-END"
"HTML-REPORT:MYREPORT2</@#;>MyReport2</@#;>"
"








Type<\\>Key<\\>COL1<\\>COL2<\\>COL3<\\>COL4<\\>COL5<\\>COL6<\\>COL7<\\>COL8<\\>COL9<\\>COL10<\\>COL11<\\>COL12<\\>COL13<\\>COL14"
"TYPE<\\>HTML<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"INPUT-FILE<\\>final_report.tab<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"OUTPUT-FILE<\\>SQLPathFinder.htm<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"CSS<\\>sqlpathfinder_style_1.css<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLSPAN<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DRILLDOWN<\\>N<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DYNAMICSORT<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DYNAMICFILTER<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"ATTOPDRILLDOWN<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"NOPREPROCESS<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>sep<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>prod_2<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>loading<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>bp<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>prodgroup3<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>wip_sfgi<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"AT-TOP-OF-REPORT<\\><\\>Owner: Wang, Qi4  <TS><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLUMN-DATA<\\><\\>prodgroup3<\\>bp<\\>ppv<\\>dlcp_final<\\>wip_sfgi<\\>wip_avail<\\>wip_hold<\\>total_good_1<\\>mor<\\>loading<\\>friday_cutoff<\\>stg<\\>qps<\\>pure_test"
"COLUMN-HEADERS<\\><\\>Prodgroup3<\\>Bp<\\>PPV Type<\\>DLCP<\\>Wip SFGI<\\>Wip Avail<\\>Wip Hold<\\>Current Test Total<\\>Mor<\\>Loading<\\>Friday Cutoff<\\>Stg<\\>Qps<\\>Pure Test"
"COLUMN-ALIGNMENT<\\><\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left"
"COLUMN-FORMAT<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLUMN-RULE1<\\>loading<\\>loading_1<\\>GT<\\>100<\\>background-color:red<\\>color:white<\\>font-style:normal<\\>font-weight:bold<\\><\\><\\><\\><\\><\\><\\>"
"HTML-REPORT-SPEC-END"
"HTML-REPORT:MYREPORT4</@#;>MyReport4</@#;>"
"


Type<\\>Key<\\>COL1<\\>COL2<\\>COL3<\\>COL4<\\>COL5<\\>COL6<\\>COL7<\\>COL8<\\>COL9<\\>COL10<\\>COL11<\\>COL12"
"TYPE<\\>HTML<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"INPUT-FILE<\\>UnitPPVM_Detail.tab<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"OUTPUT-FILE<\\>SQLPathFinder.htm<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"CSS<\\>sqlpathfinder_style_1.css<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLSPAN<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DRILLDOWN<\\>N<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DYNAMICSORT<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DYNAMICFILTER<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"ATTOPDRILLDOWN<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"NOPREPROCESS<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>product_group<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>qtg_m<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>qtg_s<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>spm_target<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLUMN-DATA<\\><\\>product_group<\\>spm_target<\\>qtg_m<\\>qtg_s<\\>dlcp<\\>current_samplingrate<\\>latest_lot<\\>sampling_target<\\>ppvm_mor<\\>ppvs_mor<\\>mor_delta_currentweek<\\>"
"COLUMN-HEADERS<\\><\\>Product Group<\\>PPVM Target<\\>PPVM QTG<\\>PPVS QTG<\\>DLCP<\\>Weight Average Sampling Rate<\\>Latest Lot Sampling Rate<\\>Sampling Rate Target<\\>PPVM Mor<\\>PPVS Mor<\\>Mor Delta(%)<\\>"
"COLUMN-ALIGNMENT<\\><\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>"
"COLUMN-FORMAT<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"HTML-REPORT-SPEC-END"
"HTML-REPORT:MYREPORT7</@#;>MyReport7</@#;>"
"




















Type<\\>Key<\\>COL1<\\>COL2<\\>COL3<\\>COL4<\\>COL5<\\>COL6<\\>COL7<\\>COL8<\\>COL9<\\>COL10<\\>COL11<\\>COL12"
"TYPE<\\>HTML<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"INPUT-FILE<\\>CDAT_tranferwip_final.tab<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"OUTPUT-FILE<\\>SQLPathFinder.htm<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"CSS<\\>sqlpathfinder_style_1.css<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLSPAN<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DRILLDOWN<\\>N<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DYNAMICSORT<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DYNAMICFILTER<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"ATTOPDRILLDOWN<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"NOPREPROCESS<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>prodgroup3<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"SORT<\\>module<\\>Asc<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"AT-TOP-OF-REPORT<\\><\\>Update Time:<TS><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLUMN-DATA<\\><\\>prodgroup3<\\>module<\\>building<\\>operation<\\>lowest_wip<\\>highest_wip<\\>current_wip<\\>status<\\><\\><\\><\\>"
"COLUMN-HEADERS<\\><\\>Prodgroup3<\\>Module<\\>Building<\\>Operation<\\>Lowest Wip<\\>Highest Wip<\\>Current Wip<\\>Status<\\><\\><\\><\\>"
"COLUMN-ALIGNMENT<\\><\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\><\\><\\><\\>"
"COLUMN-FORMAT<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLUMN-RULE1<\\>status<\\>status<\\>EQS<\\>UnderBuild<\\>background-color:red<\\>color:white<\\>font-style:normal<\\>font-weight:bold<\\><\\><\\><\\><\\>"
"COLUMN-RULE2<\\>status<\\>status<\\>EQS<\\>OverBuild<\\>background-color:red<\\>color:white<\\>font-style:normal<\\>font-weight:bold<\\><\\><\\><\\><\\>"
"COLUMN-RULE3<\\>status<\\>status<\\>EQS<\\>Healthy<\\>background-color:lightgreen<\\>color:white<\\>font-style:normal<\\>font-weight:bold<\\><\\><\\><\\><\\>"
"HTML-REPORT-SPEC-END"
"HTML-REPORT:MYREPORT8</@#;>MyReport8</@#;>"
"














Type<\\>Key<\\>COL1<\\>COL2<\\>COL3<\\>COL4<\\>COL5<\\>COL6<\\>COL7<\\>COL8<\\>COL9<\\>COL10<\\>COL11<\\>COL12"
"TYPE<\\>HTML<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"INPUT-FILE<\\>Finish.csv<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"OUTPUT-FILE<\\>SQLPathFinder.htm<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"CSS<\\>sqlpathfinder_style_1.css<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLSPAN<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DRILLDOWN<\\>N<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DYNAMICSORT<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"DYNAMICFILTER<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"ATTOPDRILLDOWN<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"NOPREPROCESS<\\>Y<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLUMN-DATA<\\><\\>prodgroup3<\\>constrain<\\>future constrain capacity (k/shift)<\\>target<\\>lower limit<\\>actual<\\>test<\\>actual_onhold<\\>comments<\\><\\><\\>"
"COLUMN-HEADERS<\\><\\>PROD<\\>Constrain<\\>Constrain Capacity<\\>UpperLimit<\\>LowerLimit<\\>Available WIP(Exclude HoldLot)<\\>WIP Test<\\>Onhold Qty<\\>Comments<\\><\\><\\>"
"COLUMN-ALIGNMENT<\\><\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\>middle-left<\\><\\><\\>"
"COLUMN-FORMAT<\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\><\\>"
"COLUMN-RULE1<\\>test<\\>test<\\>EQS<\\>Healthy<\\>background-color:Green<\\>color:white<\\>font-style:normal<\\>font-weight:bold<\\><\\><\\><\\><\\>"
"COLUMN-RULE2<\\>test<\\>test<\\>EQS<\\>Underbuild<\\>background-color:#0080FF<\\>color:white<\\>font-style:normal<\\>font-weight:bold<\\><\\><\\><\\><\\>"
"COLUMN-RULE3<\\>test<\\>test<\\>EQS<\\>Overbuild<\\>background-color:Red<\\>color:white<\\>font-style:normal<\\>font-weight:bold<\\><\\><\\><\\><\\>"
"HTML-REPORT-SPEC-END"
"HTML-CREATE WINDOW:WIN6</@#;>0@@@https://content.sp2019.intel.com/sites/CD/CDATwebshare/IonReport/TEST_Goaling_Reports/STHI_Goaling.htm@@@sqlpathfinder_style_1.css@@@E->Y@@@RR->NO@@@B->N@@@EM-A->@@@EM-S->@@@SEC->Y@@@Text:1:white<:>black<:>N<:>N<:>N<:>verdana<:>8<:>Center<:>STHI Goaling Report;Text:1:white<:>black<:>N<:>N<:>N<:>verdana<:>8<:>Left<:>*CDATx To CDAT Lotlist (LotCount:<<<lotcount_tocd>>>, Total Qty:<<<quantity_tocd>>>k) : <a href=<~>https://sharepoint.gar.ith.intel.com/sites/CD/CDATwebshare/IonReport/TEST_Goaling_Reports/CDATx_To_CDAT_lotlist_STHI.csv<~> >Click Here</a><br>*CDAT To CDATx Lotlist (LotCount:<<<lotcount_tox>>>, Total Qty:<<<quantity_tox>>>k): <a href=<~>https://sharepoint.gar.ith.intel.com/sites/CD/CDATwebshare/IonReport/TEST_Goaling_Reports/CDAT_To_CDATx_lotlist_STHI.csv<~> >Click Here</a>|MYREPORT2;MYREPORT7|Text:1:white<:>black<:>N<:>N<:>N<:>Verdana<:>12<:>Center<:>Unit PPVM Detail Info|Text:1:white<:>black<:>N<:>N<:>N<:>verdana<:>8<:>Left<:>*Sampling Rate Actual: Sams system data<br>*Sampling Rate Target: PPVM Qtg/PPVS Qtg<br>|MYREPORT4@@@</@#;>Win6</@#;>Window Title or Email Subject"
"HTML-END"
"<---- New Query ---->","-99"
"QUERYGRID:"
"JOINGRID:"
"FILTERGRID:"












/END_EMBED
/EMBED=VG2;PrePostQuery_3
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","PPVS_PROD.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","9"
"JOINROWS:","0"
"FILTERROWS:","7"
"COL_ID_COUNTER:","35"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:9:a0"
"TABLEGRID:","1"
"","Antares_Area_Section_Operation",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.ANTARES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>sthiprod.tab<~> <~>PPVS_PROD.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Write-File:YSPH.tab<SOF><{><}>prod_2	prodgroup3	PPVType	operation<{><}>SPH	SPH	PPVS	7899<{><}><{><}>"
"UTILITIESDESC:","Write Text to a file. Optionally use <EOF> to mark end of file"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>sthiprod.tab<~> <~>SPH.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"f(a0)->CASE WHEN  {area} like 'AMLY22%' THEN 'AMLY22'!!!!!WHEN  {area} like 'WHLU42%' THEN 'WHLU42'!!!!!ELSE  {area} END","prod_2","Y","None","None","Row","C","***","qps","a0->CASE WHEN  {col24} like 'AMLY22%' THEN 'AMLY22'!!!!!WHEN  {col24} like 'WHLU42%' THEN 'WHLU42'!!!!!ELSE  {col24} END","col30"
"a0.area_type","area_type","N","None","None","Row","c","Area type. Ex: L1 Goaling, L3 Goaling","qps","a0->Qps.Area_Type","col23"
"a0.area","prodgroup3","Y","None","None","Row","c","Area name within Area Type","qps","a0->Qps.Area","col24"
"a0.area_section_type","area_section_type","N","None","None","Row","c","Section Type within Area","qps","a0->Qps.Area_Section_Type","col25"
"a0.area_section","area_section","N","None","None","Row","c","Section name with Area Section Type","qps","a0->Qps.Area_Section","col26"
"a0.commit1","commit1","N","None","None","Row","n","","section","a0->Section.Commit1","col27"
"a0.commit2","commit2","N","None","None","Row","n","","section","a0->Section.Commit2","col28"
"f(a0)->'PPVS'","PPVType","Y","None","None","Row","C","***","@if@1","a0->'PPVS'","col34"
"f(a0)->CASE WHEN  {prodgroup3} ='SPH' THEN '7899' ELSE '7297' END","operation","Y","None","None","Row","C","***","@if@1","a0->CASE WHEN  {col24} ='SPH' THEN '7899' ELSE '7297' END","col35"
"JOINGRID:"
"FILTERGRID:"
"AND","(","a0.commit1",">","0","","","n","section","a0->Section.Commit1",""
"OR","","a0.commit2",">","0",")","","n","section","a0->Section.Commit2",""
"AND","","a0.area_type","Like","'L1%'","",".","c","qps","a0->Qps.Area_Type",""
"AND","","a0.area_section_type","=","'PG'","",".","c","qps","a0->Qps.Area_Section_Type",""
"AND","","f(a0)->{prodgroup31}","In Group(!=)",".\sthiprod.tab:1. prod_2","","","cx","@IF@1","a0->{col30}",""
"AND","","a0.operation","=","'7297'","",".","c","qps","a0->Qps.Operation",""
"AND","","a0.area","Not In","'SPH'</comma\>'TGLUP4'","",".","c","qps","a0->Qps.Area",""
























































/END_EMBED
/EMBED=VG2;EQA
"VERSION:","1.0"
"OUTERJOIN:","No"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","LOTPPVM_Qtg.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","20"
"JOINROWS:","4"
"FILTERROWS:","8"
"COL_ID_COUNTER:","55"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","calendar.tab a1",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:9:a0"
"TABLEGRID:","1"
"","SAMS_Lot_Details",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","ALL.SAMS"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","ALL.SAMS"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:9:a3"
"TABLEGRID:","1"
"","SAMS_Weekly",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","ALL.SAMS"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","ALL.SAMS"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:0:a2"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","ALL.SAMS"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.year_ww","year_ww","P","None","None","Row","n","Year and work week in format YYYYWW","sams_sfgi_lot_details","a0->sams3.year_ww","col25"
"a0.product_family","prodgroup31","Y","None","None","Row","c","Product Family. E.g., IVA","sams_sfgi_lot_details","a0->sams3.product_family","col24"
"a0.psg_name","psg_name","Y","None","None","Row","c","Product Sample Group Name","sams_sfgi_lot_details","a0->sams3.psg_name","col21"
"a0.qm_target","qm_target","Y","None","None","Row","n","Quality Monitor Target","sams_sfgi_lot_details","a0->sams3.qm_target","col52"
"a1.ww","ww","P","None","None","Row","c","","csv","SQL->a1.[ww]","col27"
"f(x)->CASE WHEN  {psg_name} like '%PPVM%' THEN 'PPVM' !!!!! ELSE {psg_name} END","filter","Y","None","None","Row","C","***","sams_sfgi_lot_details","All->CASE WHEN  {col21} like '%PPVM%' THEN 'PPVM' !!!!! ELSE {col21} END","col30"
"f(x)->'Lot_PPVM'","operation_group","Y","None","None","Row","C","***","","SQL->'Lot_PPVM'","col32"
"a1.ww_current","ww_current","Y","None","None","Row","c","","csv","SQL->a1.[ww_current]","col40"
"f(x)->'7899'","module","Y","None","None","Row","C","***","@if@1","All->'7899'","col41"
"a3.year_ww","year_ww_1","Y","None","None","Row","n","Year and work week in format YYYYWW","sams_sfgi_weekly_report","a3->sams2.year_ww","col43"
"a3.psg_name","psg_name_1","Y","None","None","Row","c","Product Sample Group Name","sams_sfgi_weekly_report","a3->sams2.psg_name","col44"
"a3.weekly_bp","weekly_bp","N","None","None","Row","n","Weekly Build Plan","sams_sfgi_weekly_report","a3->sams2.weekly_bp","col45"
"a2.lot","lot","N","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a2->f0.lot","col47"
"a2.operation","operation1","N","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a2->f0.operation","col48"
"a2.newqty1","newqty11","N","None","Sum","Row","n","The number of wafers (or units) in the lot aftrer the last transaction was executed. Ultimately, it will equal the quantity of units in the lot when it is moved out of this operation.","f_lothist","a2->f0.newqty1","col49"
"f(a2)->CASE WHEN  {operation1} in ('7980','7899')  THEN  {newqty11} ELSE 0  END","newqty1","Y","None","Sum","Row","N","***","f_lothist","a2->CASE WHEN  {col48} in ('7980','7899')  THEN  {col49} ELSE 0  END","col55"
"a2.prodgroup3","prodgroup3","Y","None","None","Row","c","Product Classification column.","f_product","a2->p.prodgroup3","col50"
"f(a2)->CASE WHEN  {operation1} in ('7899','7980')  THEN '7899' ELSE  {operation1} END","operation","N","None","None","Row","C","***","f_lothist","a2->CASE WHEN  {col48} in ('7899','7980')  THEN '7899' ELSE  {col48} END","col51"
"f(x)->{qm_target} -  {newqty1}","qtg1","N","None","None","Row","F","***","@if@1","All->{col52} -  {col55}","col53"
"f(x)->CASE WHEN  {qtg1}<0  THEN 0 ELSE  {qtg1} END","qtg","Y","None","None","Row","F","***","@if@2","All->CASE WHEN  {col53}<0  THEN 0 ELSE  {col53} END","col54"
"JOINGRID:"
"","","Sqlite->a1.ww                                                                                                    : SQL->{col27}","=","View->a0.year_ww                                                                                                    : a0->{col25}",""
"","","View->a0.year_ww                                                                                                    : a0->{col25}","=","View->a3.year_ww                                                                                                    : a3->{col43}",""
"","","View->a0.psg_name                                                                                                    : a0->{col21}","=","View->a3.psg_name                                                                                                    : a3->{col44}",""
"","","View->a0.product_family                                                                                                    : a0->{col24}","=","View->a2.prodgroup3                                                                                                    : a2->{col50}",""
"FILTERGRID:"
"AND","","a0.site_code","=","'CD6'","","","c","sams_sfgi_lot_details","a0->sams3.site_code",""
"AND","","a0.year_ww","In Temp"," {Sqlite (all)} : Sqlite->a1.ww","","","n","sams_sfgi_lot_details","a0->sams3.year_ww","SQL->{col27}"
"AND","","f(x)->{filter}","=","'PPVM'","","","cx","@IF@1","All->{col30}",""
"AND","","a3.weekly_bp","!=","0","","","n","sams_sfgi_weekly_report","a3->sams2.weekly_bp",""
"AND","","a2.out_date",">=","SPF_FN$LWW(0,07:00)","",".","d","f_lothist","a2->f0.out_date",""
"AND","","a2.owner","=","'PROD'","","","c","f_lothist","a2->f0.owner",""
"AND","","a2.prodgroup3","In Temp"," {View (a0)} : View->a0.product_family","","","c","f_product","a2->p.prodgroup3","a0->{col24}"
"AND","","a0.product_family","Not In","'CMLU62'</comma\>'CMLU64'</comma\>'TGP'","","","c","sams_sfgi_lot_details","a0->sams3.product_family",""





















































































/END_EMBED
/EMBED=VG2;Calendar
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","calendar.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","36"
"JOINROWS:","1"
"FILTERROWS:","1"
"COL_ID_COUNTER:","53"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Copy:Y@EXEDIR@\SPFCopy.bat <~>\\cdATSHFS.intel.com\CDATAnalysis$\MAOATM\zhengwee\Calendar\calendar_raw.tab<~> <~>.\calendar_raw1.tab<~> <~>N<~>"
"UTILITIESDESC:","Copy Files/Folders"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","calendar_raw1.tab a1",""
"","calendar_raw1.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","CR.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"f(x)->start_date","start_date","Y","None","None","Row","d","start_date","csv","SQL->CASE WHEN a1.[start_date] = '' THEN NULL ELSE CAST (a1.[start_date] AS TEXT) END","col17"
"a1.end_date","end_date","Y","None","None","Row","c","","csv","SQL->a1.[end_date]","col18"
"a1.event_code","event_code","Y","None","None","Row","c","","csv","SQL->a1.[event_code]","col19"
"a1.facility","facility","Y","None","None","Row","c","","csv","SQL->a1.[facility]","col20"
"a1.shift","shift","Y","None","None","Row","c","","csv","SQL->a1.[shift]","col21"
"f(x)->ww","ww","Y","None","None","Row","n","ww","csv","SQL->CASE WHEN a1.[ww] = '' THEN NULL ELSE CAST (a1.[ww] AS INTEGER) END","col22"
"a1.month","month","Y","None","None","Row","c","","csv","SQL->a1.[month]","col23"
"a1.qtr","qtr","Y","None","None","Row","c","","csv","SQL->a1.[qtr]","col24"
"a1.dow","dow","Y","None","None","Row","c","","csv","SQL->a1.[dow]","col25"
"a1.day","day","Y","None","None","Row","c","","csv","SQL->a1.[day]","col26"
"a1.ww_start_date","ww_start_date","Y","None","None","Row","c","","csv","SQL->a1.[ww_start_date]","col27"
"a1.ww_end_date","ww_end_date","Y","None","None","Row","c","","csv","SQL->a1.[ww_end_date]","col28"
"a1.start_date_macro","start_date_macro","Y","None","None","Row","c","","csv","SQL->a1.[start_date_macro]","col29"
"a1.end_date_macro","end_date_macro","Y","None","None","Row","c","","csv","SQL->a1.[end_date_macro]","col30"
"a1.cal_event_description","cal_event_description","Y","None","None","Row","c","","csv","SQL->a1.[cal_event_description]","col31"
"a1.calcudf1","calcudf1","Y","None","None","Row","c","","csv","SQL->a1.[calcudf1]","col32"
"a1.calcudf2","calcudf2","Y","None","None","Row","c","","csv","SQL->a1.[calcudf2]","col33"
"a1.calcudf3","calcudf3","Y","None","None","Row","c","","csv","SQL->a1.[calcudf3]","col34"
"a1.shiftno","shiftno","Y","None","None","Row","c","","csv","SQL->a1.[shiftno]","col35"
"a1.load_date","load_date","Y","None","None","Row","c","","csv","SQL->a1.[load_date]","col36"
"a1.ww_shift","ww_shift","Y","None","None","Row","c","","csv","SQL->a1.[ww_shift]","col37"
"f(x)->SUBSTR( {ww} ,3,2) ||  {ww_shift}","ww_shift1","Y","None","None","Row","C","***","csv","SQL->SUBSTR( {col22} ,3,2) ||  {col37}","col47"
"f(x)->SPF_FN$Date_Diff(  {nowtime} ,   {end_date}   )","sysdate_enddate","Y","None","None","Row","F","***","@if@1","SQL->SPF_FN$Date_Diff(  {col40} ,   {col18}   )","col38"
"f(x)->SPF_FN$Date_Diff(  {nowtime} ,   {start_date}   )","sysdate_startdate","Y","None","None","Row","F","***","@if@1","SQL->SPF_FN$Date_Diff(  {col40} ,   {col17}   )","col39"
"f(x)->Datetime('now','localtime')","nowtime","Y","None","None","Row","H","***","","SQL->Datetime('now','localtime')","col40"
"f(x)->SUBSTR( {nowtime} ,-8,4)","refresh_hour","Y","None","None","Row","C","***","@if@1","SQL->SUBSTR( {col40} ,-8,4)","col41"
"f(x)->24*SPF_FN$Date_Diff( Datetime('now','localtime') , {start_date} ) /12","shift_qty","Y","None","None","Row","F","***","csv","SQL->24*SPF_FN$Date_Diff( Datetime('now','localtime') , {col17} ) /12","col42"
"f(x)->{start_date}","currentshiftstart","Y","None","None","Row","H","***","csv","SQL->{col17}","col43"
"f(x)->CASE WHEN  {start_date} like '%7:00%'  THEN REPLACE( {start_date} ,'7:00','8:00') !!!!!ELSE REPLACE( {start_date} ,'19:00','17:00') END!!!!!","stardate","Y","None","None","Row","H","***","@if@1","SQL->CASE WHEN  {col17} like '%7:00%'  THEN REPLACE( {col17} ,'7:00','8:00') !!!!!ELSE REPLACE( {col17} ,'19:00','17:00') END!!!!!","col44"
"f(x)->REPLACE(  {ww_shift1} ,'ww','WW')","www","Y","None","None","Row","C","***","@if@1","SQL->REPLACE(  {col47} ,'ww','WW')","col45"
"f(x)->'WW' ||  SUBSTR( {ww} ,-2,2)","ww_current","Y","None","None","Row","C","***","csv","SQL->'WW' ||  SUBSTR( {col22} ,-2,2)","col48"
"f(x)->'WW' || SUBSTR({ww} +1,-2,2)","next_ww","Y","None","None","Row","C","***","@if@1","SQL->'WW' || SUBSTR({col22} +1,-2,2)","col49"
"a0.ww","ww_1","Y","None","None","Row","c","","csv","SQL->a0.[ww]","col50"
"f(x)->start_date_1","start_date_1","Y","None","Min","Row","d","start_date_1","csv","SQL->CASE WHEN a0.[start_date] = '' THEN NULL ELSE CAST (a0.[start_date] AS TEXT) END","col51"
"f(x)->SPF_FN$Date_Diff( {start_date_1} , {nowtime} )*2","stg","Y","None","None","Row","F","***","s+1","SQL->SPF_FN$Date_Diff( {col51} , {col40} )*2","col52"
"f(x)->SUBSTR( {ww} ,-2,2)","week","Y","None","None","Row","N","***","@if@1","SQL->SUBSTR( {col22} ,-2,2)","col53"
"JOINGRID:"
"","","Sqlite->f(x)->next_ww                                                                                                    : SQL->{col49}","=","Sqlite->a0.ww                                                                                                    : SQL->{col50}",""
"FILTERGRID:"
"AND","","f(x)->{sysdate_startdate}","Between","0","","","fx","@if@2","SQL->{col39}","0.5"






















/END_EMBED
/EMBED=VG2;1_2
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Final_report1.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","51"
"JOINROWS:","14"
"FILTERROWS:","14"
"COL_ID_COUNTER:","107"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","7"
"","sthiprod.tab a0",""
"","calendar.tab a4",""
"","DMx efficiency.csv a1",""
"","mor_sort.tab a5",""
"","QTG_WIP.tab a6",""
"","QTG_WIP.tab a7",""
"","STHI_Pure_1.tab a8",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:0:a2"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:0:a3"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","Asc","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"f(x)->CASE WHEN  {prodgroup3} like 'WHLU42%' THEN 'WHLU42'!!!!!WHEN  {prodgroup3} like 'AMLY22%' THEN 'AMLY22'!!!!!ELSE  {prodgroup3} END","prod","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col1} like 'WHLU42%' THEN 'WHLU42'!!!!!WHEN  {col1} like 'AMLY22%' THEN 'AMLY22'!!!!!ELSE  {col1} END","col12"
"a0.prod_2","prod_2","Y","None","None","Row","c","","csv","SQL->a0.[prod_2]","col84"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col62"
"f(x)->qtg","qtg","Y","None","None","Row","f","qtg","csv","SQL->CASE WHEN a0.[qtg] = '' THEN NULL ELSE CAST (a0.[qtg] AS REAL) END","col32"
"a4.www","www","Y","None","None","Row","c","","csv","SQL->a4.[www]","col22"
"a0.ppvtype","ppvtype","Y","None","None","Row","c","","csv","SQL->a0.[ppvtype]","col63"
"a2.lot","lot","N","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a2->f0.lot","col8"
"a2.operation","operation_1","N","None","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a2->f0.operation","col9"
"f(a2)->CASE WHEN   {operation_1} in ('7980') THEN '7899' !!!!!WHEN   {operation_1} in ('6452') THEN '6970' !!!!!ELSE   {operation_1} END","operation_3","N","None","None","Row","C","***","f_lot","a2->CASE WHEN   {col9} in ('7980') THEN '7899' !!!!!WHEN   {col9} in ('6452') THEN '6970' !!!!!ELSE   {col9} END","col49"
"a2.product","product","N","None","None","Row","c","The current product associated with the lot","f_lot","a2->f0.product","col64"
"a2.quantity","wip_clean","Y","None","Sum","Row","n","The current number of units or wafers or panels in the lot","f_lot","a2->f0.qty1","col10"
"a2.prodgroup3","prodgroup3_1","N","None","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a2->p.prodgroup3","col11"
"a3.lot","lot_1","N","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a3->f0.lot","col13"
"a3.operation","operation_2","N","None","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a3->f0.operation","col14"
"a3.product","product_1","N","None","None","Row","c","The current product associated with the lot","f_lot","a3->f0.product","col65"
"f(a3)->CASE WHEN   {operation_2} in ('7980') THEN '7899' !!!!!WHEN   {operation_2} in ('6452') THEN '6970' !!!!!ELSE   {operation_2} END","operation_4","N","None","None","Row","C","***","f_lot","a3->CASE WHEN   {col14} in ('7980') THEN '7899' !!!!!WHEN   {col14} in ('6452') THEN '6970' !!!!!ELSE   {col14} END","col50"
"a3.quantity","wip_hold","Y","None","Sum","Row","n","The current number of units or wafers or panels in the lot","f_lot","a3->f0.qty1","col15"
"a3.prodgroup3","prodgroup3_2","N","None","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a3->p.prodgroup3","col16"
"a1.prod","prod_1","N","None","None","Row","c","","csv","SQL->a1.[prod]","col68"
"a1.operation_1","operation_1_1","N","None","None","Row","c","","csv","SQL->a1.[operation_1]","col69"
"f(x)->total_good","total_good","Y","None","None","Row","f","total_good","csv","SQL->CASE WHEN a1.[total_good] = '' THEN NULL ELSE CAST (a1.[total_good] AS REAL) END","col70"
"f(x)->CASE WHEN    {operation_1_1} in ('7980') THEN '7899' !!!!!WHEN    {operation_1_1} in ('6452') THEN '6970' !!!!!ELSE    {operation_1_1} END","a1_operation","N","None","None","Row","C","***","csv","SQL->CASE WHEN    {col69} in ('7980') THEN '7899' !!!!!WHEN    {col69} in ('6452') THEN '6970' !!!!!ELSE    {col69} END","col71"
"f(x)->final_mor","final_mor","Y","None","None","Row","f","final_mor","csv","SQL->CASE WHEN a0.[final_mor] = '' THEN NULL ELSE CAST (a0.[final_mor] AS REAL) END","col72"
"a5.prod1","prod1","N","None","None","Row","c","","csv","SQL->a5.[prod1]","col73"
"f(x)->mor_sort","mor_sort","Y","None","None","Row","f","mor_sort","csv","SQL->CASE WHEN a5.[mor_sort] = '' THEN NULL ELSE CAST (a5.[mor_sort] AS REAL) END","col74"
"a5.operation_group","operation_group","N","None","None","Row","c","","csv","SQL->a5.[operation_group]","col75"
"f(x)->CASE WHEN  {operation_group} ='PPVM' THEN 'Lot_PPVM' ELSE  {operation_group} END","a5_operationgroup","N","None","None","Row","C","***","csv","SQL->CASE WHEN  {col75} ='PPVM' THEN 'Lot_PPVM' ELSE  {col75} END","col76"
"f(x)->IFNULL( {final_mor} , {mor_sort} )","mor","Y","None","None","Row","F","***","@if@1","SQL->IFNULL( {col72} , {col74} )","col78"
"a6.prodname","prodname","N","None","None","Row","c","","csv","SQL->a6.[prodname]","col79"
"f(x)->CASE WHEN   {prodname} like 'WHLU42%' THEN 'WHLU42'!!!!!WHEN   {prodname} like 'AMLY22%' THEN 'AMLY22'!!!!!ELSE   {prodname} END","a6_prod","Y","None","None","Row","C","***","csv","SQL->CASE WHEN   {col79} like 'WHLU42%' THEN 'WHLU42'!!!!!WHEN   {col79} like 'AMLY22%' THEN 'AMLY22'!!!!!ELSE   {col79} END","col83"
"a6.operation","operation_5","N","None","None","Row","c","","csv","SQL->a6.[operation]","col80"
"f(x)->CASE WHEN    {operation_5} in ('7980') THEN '7899' !!!!!WHEN    {operation_5} in ('6452') THEN '6970' !!!!!ELSE    {operation_5} END","a6_operation","N","None","None","Row","C","***","csv","SQL->CASE WHEN    {col80} in ('7980') THEN '7899' !!!!!WHEN    {col80} in ('6452') THEN '6970' !!!!!ELSE    {col80} END","col89"
"f(x)->qps1","qps1","Y","None","Max","Row","f","qps1","csv","SQL->CASE WHEN a6.[qps1] = '' THEN NULL ELSE CAST (a6.[qps1] AS REAL) END","col81"
"f(x)->qps2","qps2","Y","None","Max","Row","f","qps2","csv","SQL->CASE WHEN a6.[qps2] = '' THEN NULL ELSE CAST (a6.[qps2] AS REAL) END","col82"
"f(x)->qtg1","qtg1","Y","None","Max","Row","f","qtg1","csv","SQL->CASE WHEN a6.[qtg1] = '' THEN NULL ELSE CAST (a6.[qtg1] AS REAL) END","col93"
"f(x)->qtg2","qtg2","Y","None","Max","Row","f","qtg2","csv","SQL->CASE WHEN a6.[qtg2] = '' THEN NULL ELSE CAST (a6.[qtg2] AS REAL) END","col94"
"a6.commit1","commit1","Y","None","None","Row","c","","csv","SQL->a6.[commit1]","col85"
"a6.commit2","commit2","Y","None","None","Row","c","","csv","SQL->a6.[commit2]","col86"
"a6.bp1","bp1","Y","None","None","Row","c","","csv","SQL->a6.[bp1]","col87"
"a6.bp2","bp2","Y","None","None","Row","c","","csv","SQL->a6.[bp2]","col88"
"f(x)->stg1","stg1","Y","None","Max","Row","f","stg1","csv","SQL->CASE WHEN a6.[stg1] = '' THEN NULL ELSE CAST (a6.[stg1] AS REAL) END","col90"
"f(x)->stg2","stg2","Y","None","Max","Row","f","stg2","csv","SQL->CASE WHEN a6.[stg2] = '' THEN NULL ELSE CAST (a6.[stg2] AS REAL) END","col91"
"a7.prodname","prodname_1","N","None","None","Row","c","","csv","SQL->a7.[prodname]","col99"
"f(x)->CASE WHEN    {prodname_1} like 'WHLU42%' THEN 'WHLU42'!!!!!WHEN    {prodname_1} like 'AMLY22%' THEN 'AMLY22'!!!!!ELSE    {prodname_1} END","a7_prod","Y","None","None","Row","C","***","csv","SQL->CASE WHEN    {col99} like 'WHLU42%' THEN 'WHLU42'!!!!!WHEN    {col99} like 'AMLY22%' THEN 'AMLY22'!!!!!ELSE    {col99} END","col101"
"a7.usable","usable","Y","None","None","Row","c","","csv","SQL->a7.[usable]","col100"
"a6.friday_cutoff","friday_cutoff","Y","None","None","Row","c","","csv","SQL->a6.[friday_cutoff]","col102"
"a8.prodgroup3","prodgroup3_3","P","None","None","Row","c","","csv","SQL->a8.[prodgroup3]","col103"
"a8.operation_1","operation_1_2","P","None","None","Row","c","","csv","SQL->a8.[operation_1]","col104"
"f(x)->total_good_1","total_good_1","Y","None","Sum","Row","f","total_good_1","csv","SQL->CASE WHEN a8.[total_good] = '' THEN NULL ELSE CAST (a8.[total_good] AS REAL) END","col105"
"f(x)->''","dlcp_final","Y","None","None","Row","C","***","","SQL->''","col107"
"JOINGRID:"
"","","Sqlite->a0.operation                                                                                                    : SQL->{col62}","=","View->f(a2)->operation_3                                                                                                    : a2->{col49}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col62}","=","View->f(a3)->operation_4                                                                                                    : a3->{col50}",""
"","","Sqlite->f(x)->prod                                                                                                    : SQL->{col12}","=","View->a2.prodgroup3                                                                                                    : a2->{col11}",""
"","","Sqlite->f(x)->prod                                                                                                    : SQL->{col12}","=","View->a3.prodgroup3                                                                                                    : a3->{col16}",""
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col1}","<>","Sqlite->a4.www                                                                                                    : SQL->{col22}",""
"","","Sqlite->f(x)->prod                                                                                                    : SQL->{col12}","=","Sqlite->a1.prod                                                                                                    : SQL->{col68}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col62}","=","Sqlite->f(x)->a1_operation                                                                                                    : SQL->{col71}",""
"","","Sqlite->f(x)->prod                                                                                                    : SQL->{col12}","=","Sqlite->a5.prod1                                                                                                    : SQL->{col73}",""
"","","Sqlite->a0.ppvtype                                                                                                    : SQL->{col63}","=","Sqlite->f(x)->a5_operationgroup                                                                                                    : SQL->{col76}",""
"","","Sqlite->a0.prod_2                                                                                                    : SQL->{col84}","=","Sqlite->f(x)->a6_prod                                                                                                    : SQL->{col83}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col62}","=","Sqlite->f(x)->a6_operation                                                                                                    : SQL->{col89}",""
"","","Sqlite->a0.prod_2                                                                                                    : SQL->{col84}","=","Sqlite->f(x)->a7_prod                                                                                                    : SQL->{col101}",""
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col1}","=","Sqlite->a8.prodgroup3                                                                                                    : SQL->{col103}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col62}","=","Sqlite->a8.operation_1                                                                                                    : SQL->{col104}",""
"FILTERGRID:"
"AND","","a2.terminated","=","'N'","","","c","f_lot","a2->f0.terminated",""
"AND","","a2.quantity",">","0","","","n","f_lot","a2->f0.qty1",""
"AND","","a2.src_erase_date","Is Null","","","","d","f_lot","a2->f0.src_erase_date",""
"AND","","a2.onhold","=","'N'","","","c","f_lot","a2->f0.onhold",""
"AND","","a3.terminated","=","'N'","","","c","f_lot","a3->f0.terminated",""
"AND","","a3.quantity",">","0","","","n","f_lot","a3->f0.qty1",""
"AND","","a3.src_erase_date","Is Null","","","","d","f_lot","a3->f0.src_erase_date",""
"AND","","a3.onhold","=","'Y'","","","c","f_lot","a3->f0.onhold",""
"AND","","a2.owner","=","'PROD'","","","c","f_lot","a2->f0.owner",""
"AND","","a3.owner","=","'PROD'","","","c","f_lot","a3->f0.owner",""
"AND","","a6.prodname","!=","'AMLY22_7W'","","","c","csv","SQL->a6.[prodname]",""
"AND","","a7.operation","=","'7290'","","","c","csv","SQL->a7.[operation]",""
"AND","","a7.prodname","!=","'AMLY22_7W'","","","c","csv","SQL->a7.[prodname]",""
"AND","","a0.prodgroup3","In Group(!=)",".\Row_data_wip_byDLCP.tab:2. product_group_3","","","c","csv","SQL->a0.[prodgroup3]",""












































/END_EMBED
/EMBED=VG2;EQA QTG
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","LOTlevel_ppvm1.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","5"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","22"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","LOTPPVM_Qtg.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Write-File:Ymissqtg.tab<SOF><{><}>qtg<{><}>xx"
"UTILITIESDESC:","Write Text to a file. Optionally use <EOF> to mark end of file"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>sthiprod.tab<~> <~>missqtg.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>sthiprod.tab<~> <~>LOTlevel_ppvm1.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"f(x)->{prodgroup3}","prod_2","Y","None","None","Row","C","***","csv","SQL->{col18}","col22"
"a0.prodgroup31","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup31]","col18"
"f(x)->qtg","qtg","Y","None","Sum","Row","f","qtg","csv","SQL->CASE WHEN a0.[qtg] = '' THEN NULL ELSE CAST (a0.[qtg] AS REAL) END","col19"
"a0.operation_group","PPVType","Y","None","None","Row","c","","csv","SQL->a0.[operation_group]","col20"
"a0.module","operation","Y","None","None","Row","c","","csv","SQL->a0.[module]","col21"
"JOINGRID:"
"FILTERGRID:"



































































































































/END_EMBED
/EMBED=VG2;PrePostQuery_17
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","SF.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","16"
"JOINROWS:","2"
"FILTERROWS:","4"
"COL_ID_COUNTER:","33"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","cell_info.tab a0",""
"","QA_Mor.tab a2",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.product_group_3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[product_group_3]","col1"
"f(x)->CASE WHEN  {prodgroup3} like 'WHLU42%' THEN 'WHLU42'!!!!!WHEN  {prodgroup3} like 'AMLY22%' THEN 'AMLY22'!!!!!WHEN  {prodgroup3} like 'B21%' THEN 'B21'!!!!!ELSE  {prodgroup3} END","prod1","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col1} like 'WHLU42%' THEN 'WHLU42'!!!!!WHEN  {col1} like 'AMLY22%' THEN 'AMLY22'!!!!!WHEN  {col1} like 'B21%' THEN 'B21'!!!!!ELSE  {col1} END","col19"
"a0.sub_cell","sub_cell","Y","None","None","Row","c","","csv","SQL->a0.[sub_cell]","col2"
"f(x)->SUBSTR( {sub_cell} ,1,7)","maincell","P","None","None","Row","C","***","csv","SQL->SUBSTR( {col2} ,1,7)","col14"
"a0.cell","cell","P","None","None","Row","c","","csv","SQL->a0.[cell]","col11"
"a0.dlcp","dlcp","Y","None","None","Row","c","","csv","SQL->a0.[dlcp]","col17"
"f(x)->hb1","hb11","Y","None","None","Row","f","hb1","csv","SQL->CASE WHEN a0.[hb1] = '' THEN NULL ELSE CAST (a0.[hb1] AS REAL) END","col3"
"f(x)->CASE WHEN  {hb11} <0 THEN 0 ELSE  {hb11} END","hb1","Y","None","None","Row","F","***","@if@1","SQL->CASE WHEN  {col3} <0 THEN 0 ELSE  {col3} END","col33"
"a2.e","prod","Y","None","None","Row","c","","csv","SQL->a2.[e]","col18"
"a2.g","dlcp1","P","None","None","Row","c","","csv","SQL->a2.[g]","col20"
"f(x)->CASE WHEN  {dlcp1} is null THEN 'NULL'!!!!!WHEN  {dlcp1} like '%UX%' THEN 'UX'!!!!!WHEN  {dlcp1} like '%UV%' THEN 'UV'!!!!!WHEN  {dlcp1} like '%HP%' THEN 'HP'!!!!!ELSE  {dlcp1} END","dlcp2","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col20} is null THEN 'NULL'!!!!!WHEN  {col20} like '%UX%' THEN 'UX'!!!!!WHEN  {col20} like '%UV%' THEN 'UV'!!!!!WHEN  {col20} like '%HP%' THEN 'HP'!!!!!ELSE  {col20} END","col21"
"f(x)->mor","mor","Y","None","Avg","Row","f","mor","csv","SQL->CASE WHEN a2.[p] = '' THEN NULL ELSE CAST (a2.[p] AS REAL) END","col22"
"a2.b","b","N","None","None","Row","c","","csv","SQL->a2.[b]","col23"
"a2.a","a","Y","None","None","Row","c","","csv","SQL->a2.[a]","col24"
"f(x)->CASE WHEN  {a} in('PPV_SPM') THEN 'PPVM' !!!!!WHEN  {a} in('PPV_SPS') THEN 'PPVS' !!!!!WHEN  {a} in('PPV_SPS2') THEN 'PPVS2' !!!!!ELSE   {a} END","operationgroup","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col24} in('PPV_SPM') THEN 'PPVM' !!!!!WHEN  {col24} in('PPV_SPS') THEN 'PPVS' !!!!!WHEN  {col24} in('PPV_SPS2') THEN 'PPVS2' !!!!!ELSE   {col24} END","col25"
"f(x)->p","p","N","None","None","Row","f","p","csv","SQL->CASE WHEN a2.[p] = '' THEN NULL ELSE CAST (a2.[p] AS REAL) END","col30"
"JOINGRID:"
"","","Sqlite->f(x)->prod1                                                                                                    : SQL->{col19}","=","Sqlite->a2.e                                                                                                    : SQL->{col18}",""
"","","Sqlite->a0.dlcp                                                                                                    : SQL->{col17}","=","Sqlite->f(x)->dlcp2                                                                                                    : SQL->{col21}",""
"FILTERGRID:"
"AND","","a2.b","Like","'STH%'","","","c","csv","SQL->a2.[b]",""
"AND","","f(x)->mor","<=","100","","","f","csv","SQL->CASE WHEN a2.[p] = '' THEN NULL ELSE CAST (a2.[p] AS REAL) END",""
"AND","","f(x)->p",">","0","","","f","csv","SQL->CASE WHEN a2.[p] = '' THEN NULL ELSE CAST (a2.[p] AS REAL) END",""
"AND","","f(x)->{operationgroup}","!=","'PPV SPM2'","","","cx","@IF@1","SQL->{col25}",""





























































/END_EMBED
/EMBED=VG2;MOR Sort
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","mor_sort.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","13"
"JOINROWS:","0"
"FILTERROWS:","1"
"COL_ID_COUNTER:","21"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","SF.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"a0.prod1","prod1","Y","None","None","Row","c","","csv","SQL->a0.[prod1]","col2"
"f(x)->IFNULL(CASE WHEN a0.[hb1] = '' THEN NULL ELSE CAST (a0.[hb1] AS REAL) END,0)","hb1","N","None","None","Row","F","***hb1","csv","SQL->IFNULL(CASE WHEN a0.[hb1] = '' THEN NULL ELSE CAST (a0.[hb1] AS REAL) END,0)","col4"
"a0.dlcp","dlcp","N","None","None","Row","c","","csv","SQL->a0.[dlcp]","col9"
"a0.prod","prod","Y","None","None","Row","c","","csv","SQL->a0.[prod]","col10"
"a0.dlcp2","dlcp2","N","None","None","Row","c","","csv","SQL->a0.[dlcp2]","col11"
"f(x)->mor","mor","N","None","None","Row","f","mor","csv","SQL->CASE WHEN a0.[mor] = '' THEN NULL ELSE CAST (a0.[mor] AS REAL) END","col12"
"a0.operationgroup","operation_group","Y","None","None","Row","c","","csv","SQL->a0.[operationgroup]","col15"
"f(x)->SUM ( {hb1} ) OVER (PARTITION BY  {prodgroup3} ,  {operationgroup} )","sum_hb","N","None","None","Row","F","***","@if@1","SQL->SUM ( {col4} ) OVER (PARTITION BY  {col1} ,  {col15} )","col16"
"f(x)->{hb1} / {sum_hb}","rate","N","None","None","Row","F","***","@if@2","SQL->{col4} / {col16}","col17"
"f(x)->AVG ( {mor} ) OVER (PARTITION BY  {prodgroup3},   {operation_group} )","avg","Y","None","None","Row","F","***","@if@1","SQL->AVG ( {col12} ) OVER (PARTITION BY  {col1},   {col15} )","col20"
"f(x)->SUM ( {mor}* {rate}  ) OVER (PARTITION BY  {prodgroup3} , {operation_group} )","sum","Y","None","None","Row","F","***","@if@3","SQL->SUM ( {col12}* {col17}  ) OVER (PARTITION BY  {col1} , {col15} )","col21"
"f(x)->CASE WHEN   {sum_hb} =0  THEN   {avg}  ELSE  {sum}  END !!!!!","mor_sort","Y","None","None","Row","F","***","@if@4","SQL->CASE WHEN   {col16} =0  THEN   {col20}  ELSE  {col21}  END !!!!!","col18"
"JOINGRID:"
"FILTERGRID:"
"AND","","a0.prodgroup3","In Group(!=)",".\Row_data_wip_byDLCP.tab:2. product_group_3","","","c","csv","SQL->a0.[prodgroup3]",""



























































/END_EMBED
/EMBED=VG2;d
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","final_Report2.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","34"
"JOINROWS:","3"
"FILTERROWS:","1"
"COL_ID_COUNTER:","57"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","3"
"","freport_1.tab a0",""
"","prod_tr.csv a1",""
"","Summary by product_byDLCP.csv a2",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","Asc","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"a0.prod","prod_1","Y","None","None","Row","c","","csv","SQL->a0.[prod]","col27"
"a0.prod_2","prod_2","Y","None","None","Row","c","","csv","SQL->a0.[prod_2]","col38"
"a0.ppvtype","ppvtype","Y","None","None","Row","c","","csv","SQL->a0.[ppvtype]","col31"
"a0.dlcp_final","dlcp_final","Y","None","None","Row","c","","csv","SQL->a0.[dlcp_final]","col53"
"f(x)->qps","qps","Y:2","None","None","Row","f","qps","csv","SQL->CASE WHEN a0.[qps] = '' THEN NULL ELSE CAST (a0.[qps] AS REAL) END","col5"
"f(x)->IFNULL(CASE WHEN a0.[wip_clean] = '' THEN NULL ELSE CAST (a0.[wip_clean] AS REAL) END,0)","wip_avail","Y","None","None","Row","F","***wip_clean","csv","SQL->IFNULL(CASE WHEN a0.[wip_clean] = '' THEN NULL ELSE CAST (a0.[wip_clean] AS REAL) END,0)","col6"
"f(x)->IFNULL(CASE WHEN a0.[wip_hold] = '' THEN NULL ELSE CAST (a0.[wip_hold] AS REAL) END,0)","wip_hold","Y","None","None","Row","F","***wip_hold","csv","SQL->IFNULL(CASE WHEN a0.[wip_hold] = '' THEN NULL ELSE CAST (a0.[wip_hold] AS REAL) END,0)","col7"
"f(x)->IFNULL(CASE WHEN a0.[wip_sfgi] = '' THEN NULL ELSE CAST (a0.[wip_sfgi] /1000 AS REAL) END,0)","wip_sfgi","Y","None","None","Row","F","***wip_sfgi","csv","SQL->IFNULL(CASE WHEN a0.[wip_sfgi] = '' THEN NULL ELSE CAST (a0.[wip_sfgi] /1000 AS REAL) END,0)","col44"
"f(x)->IFNULL(CASE WHEN a0.[total_good] = '' THEN NULL ELSE CAST (a0.[total_good] AS REAL) END,0)","pure_test","Y","None","None","Row","F","***total_good","csv","SQL->IFNULL(CASE WHEN a0.[total_good] = '' THEN NULL ELSE CAST (a0.[total_good] AS REAL) END,0)","col8"
"f(x)->IFNULL(CASE WHEN a0.[mor] = '' THEN NULL ELSE CAST (a0.[mor] AS REAL) END,  {ppv_spm} )","mor","Y","None","None","Row","F","***mor_final","csv","SQL->IFNULL(CASE WHEN a0.[mor] = '' THEN NULL ELSE CAST (a0.[mor] AS REAL) END,  {col51} )","col9"
"f(x)->stg","stg","Y","None","Avg","Row","f","stg","csv","SQL->CASE WHEN a0.[stg] = '' THEN NULL ELSE CAST (a0.[stg] AS REAL) END","col12"
"a1.prod","prod","P","None","None","Row","c","","csv","SQL->a1.[prod]","col19"
"f(x)->IFNULL(CASE WHEN a1.[count] = '' THEN NULL ELSE CAST (a1.[count] AS REAL) END,0)","Link","Y","None","None","Row","F","***Link","csv","SQL->IFNULL(CASE WHEN a1.[count] = '' THEN NULL ELSE CAST (a1.[count] AS REAL) END,0)","col20"
"f(x)->CASE WHEN  {tr} is not null THEN  {tr} !!!!!ELSE!!!!!(!!!!!CASE WHEN {qps} /1000/ {mor}<0 THEN 0 ELSE {qps} /1000/ {mor}END) END","Tool_request","Y","None","None","Row","F","***","@if@1","SQL->CASE WHEN  {col47} is not null THEN  {col47} !!!!!ELSE!!!!!(!!!!!CASE WHEN {col5} /1000/ {col9}<0 THEN 0 ELSE {col5} /1000/ {col9}END) END","col21"
"f(x)->SUM ( {tool_request} ) OVER (PARTITION BY  {prodgroup3}, {dlcp_final}  )","Tool_request_total","Y:1","None","None","Row","F","***","s+2","SQL->SUM ( {col21} ) OVER (PARTITION BY  {col1}, {col53}  )","col22"
"f(x)->CASE WHEN  {tool_request_total}=0  THEN 0 ELSE {tool_request_total} /   {link} *100 END !!!!!","loading1","Y:1","None","None","Row","F","***","s+3","SQL->CASE WHEN  {col22}=0  THEN 0 ELSE {col22} /   {col20} *100 END !!!!!","col23"
"f(x)->CASE WHEN  {loading1} is null THEN 100 !!!!!ELSE   {loading1} END","loading","Y:1","None","None","Row","F","***","s+5","SQL->CASE WHEN  {col23} is null THEN 100 !!!!!ELSE   {col23} END","col25"
"f(x)->bp1","bp1_o","Y","None","None","Row","f","bp1","csv","SQL->CASE WHEN a0.[bp1] = '' THEN NULL ELSE CAST (a0.[bp1] AS REAL) END","col4"
"f(x)->bp2","bp2_o","Y","None","None","Row","f","bp2","csv","SQL->CASE WHEN a0.[bp2] = '' THEN NULL ELSE CAST (a0.[bp2] AS REAL) END","col26"
"f(x)->commit1","commit1","Y","None","None","Row","f","commit1","csv","SQL->CASE WHEN a0.[commit1] = '' THEN NULL ELSE CAST (a0.[commit1] AS REAL) END","col32"
"f(x)->commit2","commit2","Y","None","None","Row","f","commit2","csv","SQL->CASE WHEN a0.[commit2] = '' THEN NULL ELSE CAST (a0.[commit2] AS REAL) END","col33"
"f(x)->CASE WHEN  {bp1_o} is null  THEN  {commit1} !!!!!ELSE(!!!!! CASE WHEN  ({bp1_o}- {commit1}) >1000   THEN   {bp1_o} !!!!! WHEN  ({bp1_o}- {commit1})  < -1000   THEN   {bp1_o} !!!!!ELSE   {commit1} END!!!!!)END!!!!!","bp1","Y","None","None","Row","C","***","@if@1","SQL->CASE WHEN  {col4} is null  THEN  {col32} !!!!!ELSE(!!!!! CASE WHEN  ({col4}- {col32}) >1000   THEN   {col4} !!!!! WHEN  ({col4}- {col32})  < -1000   THEN   {col4} !!!!!ELSE   {col32} END!!!!!)END!!!!!","col34"
"f(x)->CASE WHEN   {bp2_o} is null  THEN   {commit2} !!!!!ELSE(!!!!! CASE WHEN   {bp2_o} -  {commit2} >1000   THEN    {bp2_o} !!!!! WHEN   {bp2_o} -  {commit2} < -1000   THEN    {bp2_o} !!!!!ELSE    {commit2} END!!!!!)END!!!!!","bp2","Y","None","None","Row","C","***","@if@1","SQL->CASE WHEN   {col26} is null  THEN   {col33} !!!!!ELSE(!!!!! CASE WHEN   {col26} -  {col33} >1000   THEN    {col26} !!!!! WHEN   {col26} -  {col33} < -1000   THEN    {col26} !!!!!ELSE    {col33} END!!!!!)END!!!!!","col35"
"f(x)->sum","sum","Y","None","None","Row","n","sum","csv","SQL->CASE WHEN a0.[sum] = '' THEN NULL ELSE CAST (a0.[sum] AS INTEGER) END","col36"
"f(x)->CASE WHEN {sum} =0  THEN  {bp2} ELSE  {bp1}  END","bp","Y","None","None","Row","F","***","@if@2","SQL->CASE WHEN {col36} =0  THEN  {col35} ELSE  {col34}  END","col37"
"f(x)->CASE WHEN   {bp} <=0 and  {qps} <=0 and  {wip_avail}=0 and  {wip_hold} =0  THEN 'N' ELSE 'Y'END","filter","Y","None","None","Row","C","***","@if@3","SQL->CASE WHEN   {col37} <=0 and  {col5} <=0 and  {col6}=0 and  {col7} =0  THEN 'N' ELSE 'Y'END","col43"
"a2.prod","product_group","Y","None","None","Row","c","","csv","SQL->a2.[prod]","col55"
"f(x)->tr","tr","Y","None","None","Row","f","tr","csv","SQL->CASE WHEN a2.[tr] = '' THEN NULL ELSE CAST (a2.[tr] AS REAL) END","col47"
"f(x)->CASE WHEN  {bp} >0 OR  {wip_avail} >0 THEN 'Y' ELSE 'N' END","filter_1","Y","None","None","Row","C","***","s+3","SQL->CASE WHEN  {col37} >0 OR  {col6} >0 THEN 'Y' ELSE 'N' END","col48"
"a0.friday_cutoff","friday_cutoff","Y","None","None","Row","c","","csv","SQL->a0.[friday_cutoff]","col50"
"a2.ppv_spm","ppv_spm","Y","None","None","Row","c","","csv","SQL->a2.[ppv_spm]","col51"
"a2.ppv_type","ppv_type","Y","None","None","Row","c","","csv","SQL->a2.[ppv_type]","col52"
"a0.total_good_1","total_good_1","Y","None","None","Row","c","","csv","SQL->a0.[total_good_1]","col54"
"JOINGRID:"
"","","Sqlite->a0.prod_2                                                                                                    : SQL->{col38}","=","Sqlite->a1.prod                                                                                                    : SQL->{col19}",""
"","","Sqlite->a0.prod_2                                                                                                    : SQL->{col38}","=","Sqlite->a2.prod                                                                                                    : SQL->{col55}",""
"","","Sqlite->a0.ppvtype                                                                                                    : SQL->{col31}","=","Sqlite->a2.ppv_type                                                                                                    : SQL->{col52}",""
"FILTERGRID:"
"-- AND","","f(x)->{filter_1}","=","'Y'","","","cx","s+4","SQL->{col48}",""
















/END_EMBED
/EMBED=VG2;PrePostQuery_20
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","final_report.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","22"
"JOINROWS:","1"
"FILTERROWS:","0"
"COL_ID_COUNTER:","41"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","final_Report2.tab a0",""
"","calendar.tab a1",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col19"
"a0.prod_2","prod_2","Y","None","None","Row","c","","csv","SQL->a0.[prod_2]","col37"
"a0.ppvtype","ppvtype","N","None","None","Row","c","","csv","SQL->a0.[ppvtype]","col31"
"f(x)->CASE WHEN  {ppvtype} like 'Lot%' THEN 'PPVM'!!!!! WHEN  {ppvtype} like 'Unit%' THEN 'PPVM&PPVS'!!!!!ELSE  {ppvtype} END","ppv","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col31} like 'Lot%' THEN 'PPVM'!!!!! WHEN  {col31} like 'Unit%' THEN 'PPVM&PPVS'!!!!!ELSE  {col31} END","col32"
"f(x)->CASE WHEN a0.[qps] = '' THEN NULL ELSE CAST (a0.[qps]/1000 AS REAL) END","qps","Y:2","None","None","Row","F","***qps","csv","SQL->CASE WHEN a0.[qps] = '' THEN NULL ELSE CAST (a0.[qps]/1000 AS REAL) END","col3"
"f(x)->CASE WHEN a0.[wip_avail] = '' THEN NULL ELSE CAST (a0.[wip_avail]/1000 AS REAL) END","wip_avail","Y:2","None","None","Row","F","***wip_avail","csv","SQL->CASE WHEN a0.[wip_avail] = '' THEN NULL ELSE CAST (a0.[wip_avail]/1000 AS REAL) END","col4"
"f(x)->CASE WHEN a0.[wip_hold] = '' THEN NULL ELSE CAST (a0.[wip_hold] /1000 AS REAL) END","wip_hold","Y:2","None","None","Row","F","***wip_hold","csv","SQL->CASE WHEN a0.[wip_hold] = '' THEN NULL ELSE CAST (a0.[wip_hold] /1000 AS REAL) END","col5"
"f(x)->wip_sfgi","wip_sfgi","Y:2","None","None","Row","f","wip_sfgi","csv","SQL->CASE WHEN a0.[wip_sfgi] = '' THEN NULL ELSE CAST (a0.[wip_sfgi] AS REAL) END","col38"
"f(x)->CASE WHEN a0.[pure_test] = '' THEN NULL ELSE CAST (a0.[pure_test] /1000 AS REAL) END","pure_test","Y:2","None","Sum","Row","F","***pure_test","csv","SQL->CASE WHEN a0.[pure_test] = '' THEN NULL ELSE CAST (a0.[pure_test] /1000 AS REAL) END","col6"
"f(x)->IFNULL(CASE WHEN a0.[mor] = '' THEN NULL ELSE CAST (a0.[mor] AS REAL) END,0)","mor","Y:2","None","None","Row","F","***mor","csv","SQL->IFNULL(CASE WHEN a0.[mor] = '' THEN NULL ELSE CAST (a0.[mor] AS REAL) END,0)","col7"
"f(x)->stg","stg","Y:1","None","None","Row","f","stg","csv","SQL->CASE WHEN a0.[stg] = '' THEN NULL ELSE CAST (a0.[stg] AS REAL) END","col10"
"a0.tool_request_total","total_request","Y","None","None","Row","c","","csv","SQL->a0.[tool_request_total]","col21"
"a0.link","link","Y","None","None","Row","c","","csv","SQL->a0.[link]","col22"
"f(x)->CASE WHEN  {prodgroup3} like 'ICLU42%' THEN   {min} || ' ' || 'VS.'  ||   {link} || '(' ||    {loading_1} || '%' || ')' ELSE  {total_request} || ' ' || 'VS.'  ||   {link} || '(' ||    {loading_1} || '%' || ')'  END !!!!!","loading","Y","None","None","Row","C","***","@if@2","SQL->CASE WHEN  {col19} like 'ICLU42%' THEN   {col36} || ' ' || 'VS.'  ||   {col22} || '(' ||    {col35} || '%' || ')' ELSE  {col21} || ' ' || 'VS.'  ||   {col22} || '(' ||    {col35} || '%' || ')'  END !!!!!","col14"
"a1.ww_shift","ww_shift","Y","None","None","Row","c","","csv","SQL->a1.[ww_shift]","col20"
"a0.loading","loading_1","Y","None","None","Row","c","","csv","SQL->a0.[loading]","col35"
"f(x)->CASE WHEN a0.[bp] = '' THEN NULL ELSE CAST (a0.[bp]/1000 AS REAL) END","bp","Y:2","None","None","Row","F","***bp","csv","SQL->CASE WHEN a0.[bp] = '' THEN NULL ELSE CAST (a0.[bp]/1000 AS REAL) END","col30"
"f(x)->CASE WHEN  {link} ='0' THEN 'B' ELSE 'A'END","sep","Y","None","None","Row","C","***","","SQL->CASE WHEN  {col22} ='0' THEN 'B' ELSE 'A'END","col33"
"f(x)->MIN ( {total_request} ) OVER (PARTITION BY  {prod_2} )","min","N","None","None","Row","F","***","@if@1","SQL->MIN ( {col21} ) OVER (PARTITION BY  {col37} )","col36"
"a0.friday_cutoff","friday_cutoff","Y","None","None","Row","c","","csv","SQL->a0.[friday_cutoff]","col39"
"a0.dlcp_final","dlcp_final","Y","None","None","Row","c","","csv","SQL->a0.[dlcp_final]","col40"
"f(x)->CASE WHEN a0.[total_good_1] = '' THEN NULL ELSE CAST (a0.[total_good_1] /1000 AS REAL) END","total_good_1","Y","None","None","Row","F","***total_good_1","csv","SQL->CASE WHEN a0.[total_good_1] = '' THEN NULL ELSE CAST (a0.[total_good_1] /1000 AS REAL) END","col41"
"JOINGRID:"
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col19}","<>","Sqlite->a1.ww_shift                                                                                                    : SQL->{col20}",""
"FILTERGRID:"























/END_EMBED
/EMBED=VG2;PrePostQuery_17_0
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","AOT pure test.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","27"
"JOINROWS:","2"
"FILTERROWS:","8"
"COL_ID_COUNTER:","107"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:0:a0"
"TABLEGRID:","1"
"","AOT_Snapshot",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","CR.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","CR.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.entity","entity","Y","Asc","None","Row","c","Station Controller Entity.","f_aot_testsnapshot","a0->a0.entity","col1"
"a0.lot","lot","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.  Fab lot format is: PYWWXXXX where P= Plant; Y= last digit of year; WW= Work Week X: Lot sequence. For Fab lots following are some of the sites identified by the first digit of the lot: 1=F15; 2=D2; 6=F6; 7=F7; 8=F8; 9=F9; A=F10; E=F11; F=F12; D=TPO lot in CA/T; C=FPO lot in CA/T","f_aot_testsnapshot","a0->a0.lot","col2"
"a0.operation","operation1","Y","None","None","Row","c","Operation classification column.","f_aot_testsnapshot","a0->a0.operation","col3"
"a0.collection_time","collection_time","Y","None","Max","Row","d","Time the data was collected at the station controller.","f_aot_testsnapshot","a0->a0.collection_time","col4"
"a0.total_processed","total_good","Y","None","Sum","Row","n","Total number of units processed.","f_aot_testsnapshot","a0->a0.total_processed","col5"
"a0.total_good","total_good1","Y","None","Sum","Row","n","Total number of units tested as good.","f_aot_testsnapshot","a0->a0.total_good","col6"
"a0.shift","shift","Y","None","None","Row","c","Factory shift which the collection time associates to","f_aot_testsnapshot","a0->a0.shift","col7"
"f(a0)->SPF_FN$Date_Diff( SYSDATE ,SPF_FN$Current_Shift(8)-1/24) *24/12","ShiftCount","Y","None","None","Row","F","***","@if@1","a0->SPF_FN$Date_Diff( SYSDATE ,SPF_FN$Current_Shift(8)-1/24) *24/12","col70"
"a0.process_type","process_type","Y","None","None","Row","c","","f_aot_testsnapshot","a0->a0.process_type","col71"
"f(a0)->SYSDATE","nowtime","Y","None","None","Row","D","***","@if@1","a0->SYSDATE","col76"
"a1.lot","lot_1","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a1->f0.lot","col84"
"a1.operation","operation_1","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a1->f0.operation","col85"
"a1.oldqty1","oldqty1","Y","None","None","Row","n","The quantity of original units in the lot after the last transaction was executed for the lot at the operation. ?Ultimately, it will equal the number of wafers (or units) in the lot to use when computing yield. Equals Out quantity + losses. ?In MES300, on the lot move out, this column should be set to equal newqty1 + lossqty1. That is because losses could be taken at any point while the lot is at the operation. Hence no losses may occur on the move out transaction but there were losses while the lot was at the operation.","f_lothist","a1->f0.oldqty1","col93"
"a1.newqty1","newqty1","Y","None","Min","Row","n","The number of wafers (or units) in the lot aftrer the last transaction was executed. Ultimately, it will equal the quantity of units in the lot when it is moved out of this operation.","f_lothist","a1->f0.newqty1","col86"
"a1.product","product","Y","None","None","Row","c","A name that completely describes the product. It comprises package, device, revision, stepping, ROM designator, engineering identifier, Fab identifier, ROM code, Assembly identifier and speed. FOR FSM:P Device R SRE FCodeA Where:P = Product type (blank for production, TW for test wafer, RE, ME, FE, and BE for engineering products RECL, MECL, FECL, and BECM)Device = Device name given from corporateR = Product RevisionS = StepR = Always blankE = Engineering codeF = Fab codeCode = A = Route name the product will run on plus any unique route extension number to make the product uniqueFOR ATM:PPDevice ?R ?SIEEFCCCCATTTTPWhere:P = Mfg PackageDevice = Device name R = RevisionS = StepI = Rom IDEE = Engineering IDF = FAB IDCCCC = Spec NumberA = Assembly IDTTTT = Test Type","f_lothist","a1->f0.product","col88"
"f(x)->{prodgroup31}","prodgroup3","Y","None","None","Row","C","***","f_product","All->{col87}","col102"
"a1.prodgroup3","prodgroup31","Y","None","None","Row","c","Product Classification column.","f_product","a1->p.prodgroup3","col87"
"a1.ceid","ceid","Y","None","None","Row","c","CEID in mixed case from equipment attribute 'SAP TGCEID' or 'SAP CEID'. E.g., STHbj","f_entityattributevalueceid","a1->Upper(SubStr( NVL(ea1.attribute_value,ea2.attribute_value),1,3)) ||  Lower(SubStr(NVL (ea1.attribute_value,ea2.attribute_value) ,4))","col90"
"f(a0)->COUNT (DISTINCT  {process_type} ) OVER (PARTITION BY  {lot}  )","process_type_count","Y","None","None","Row","F","***","f_aot_testsnapshot","a0->COUNT (DISTINCT  {col71} ) OVER (PARTITION BY  {col2}  )","col91"
"a1.out_date","out_date","Y","None","None","Row","d","The date the lot moved out of the operation. If the lot has not moved out, the value will be NULL. This column is used in date indices instead of Last_Action_Date as Last_Action_Date changes for every transaction for the lot at the operation.","f_lothist","a1->f0.out_date","col95"
"f(a0)->CASE WHEN  {operation1} in ('2050','7981','7741','7742') THEN '2050' ELSE  {operation1} END","operation","Y","None","None","Row","C","***","f_aot_testsnapshot","a0->CASE WHEN  {col3} in ('2050','7981','7741','7742') THEN '2050' ELSE  {col3} END","col98"
"a0.owner","owner1","Y","None","None","Row","c","Identifies the type of lot. E.g., PROD and MW","f_lothist","a0->f0.owner","col99"
"f(a0)->CASE WHEN  {process_type_count} >=2 and  {process_type} like '%HOT%' THEN 'N'ELSE 'Y'END","filter","Y","None","None","Row","C","***","@if@2","a0->CASE WHEN  {col91} >=2 and  {col71} like '%HOT%' THEN 'N'ELSE 'Y'END","col101"
"f(a0)->maincell","maincell","P","None","None","Row","x","***Lot attribute (1833)","f_aot_testsnapshot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= a0.lot AND la.attribute_number = 1833 AND la.src_erase_date IS NULL AND rownum <= 1)","col103"
"f(a0)->subcell","subcell","P","None","None","Row","x","***Lot attribute (1834)","f_aot_testsnapshot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= a0.lot AND la.attribute_number = 1834 AND la.src_erase_date IS NULL AND rownum <= 1)","col104"
"f(a0)->{maincell}  ||  SUBSTR( {subcell} ,-1,1)","subcell_final","Y","None","None","Row","C","***","@if@1","a0->{col103}  ||  SUBSTR( {col104} ,-1,1)","col105"
"a1.owner","owner","Y","None","None","Row","c","Identifies the type of lot. E.g., PROD and MW","f_lothist","a1->f0.owner","col107"
"JOINGRID:"
"AND","","View->a0.lot                                                                                                    : a0->{col2}","=","View->a1.lot                                                                                                    : a1->{col84}",""
"AND","","View->a0.operation                                                                                                    : a0->{col3}","=","View->a1.operation                                                                                                    : a1->{col85}",""
"FILTERGRID:"
"AND","","a0.entity","Like","'ST%'","",".","c","f_aot_testsnapshot","a0->a0.entity",""
"AND","","a0.collection_time","Between","(SYSDATE - 12/24)","","","d","f_aot_testsnapshot","a0->a0.collection_time","SYSDATE"
"AND","","a0.load_date",">=","(SYSDATE - 12/24)","",".","d","f_aot_testsnapshot","a0->a0.load_date",""
"AND","","a1.lot","In Temp"," {View (a0)} : View->a0.lot","",".","c","f_lothist","a1->f0.lot","a0->{col2}"
"AND","","a1.operation","In Temp"," {View (a0)} : View->a0.operation","","","c","f_lothist","a1->f0.operation","a0->{col3}"
"AND","","a1.ceid","Is Not Null","","","","c","f_entityattributevalueceid","a1->Upper(SubStr( NVL(ea1.attribute_value,ea2.attribute_value),1,3)) ||  Lower(SubStr(NVL (ea1.attribute_value,ea2.attribute_value) ,4))",""
"-- AND","","a0.owner","=","'PROD'","","","c","f_lothist","a0->f0.owner",""
"-- AND","","f(a0)->{filter}","=","'Y'","","","cx","@IF@3","a0->{col101}",""










































/END_EMBED
/EMBED=VG2;Pure Test
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","DMx efficiency.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","9"
"JOINROWS:","1"
"FILTERROWS:","3"
"COL_ID_COUNTER:","12"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","AOT pure test.tab a0",""
"","calendar.tab a1",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prod","Y","Asc","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"a0.operation","operation_1","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"f(x)->total_good","total_good","Y","None","Sum","Row","f","total_good","csv","SQL->CASE WHEN a0.[total_good] = '' THEN NULL ELSE CAST (a0.[total_good] AS REAL) END","col3"
"a0.entity","entity","N","None","None","Row","c","","csv","SQL->a0.[entity]","col4"
"f(x)->COUNT (DISTINCT  {entity} ) OVER (PARTITION BY  {prod}  )","count","Y","None","None","Row","C","***","csv","SQL->COUNT (DISTINCT  {col4} ) OVER (PARTITION BY  {col1}  )","col5"
"f(x)->start_date","start_date","N","None","None","Row","d","start_date","csv","SQL->CASE WHEN a1.[start_date] = '' THEN NULL ELSE CAST (a1.[start_date] AS TEXT) END","col7"
"f(x)->collection_time","collection_time","N","None","None","Row","d","collection_time","csv","SQL->CASE WHEN a0.[collection_time] = '' THEN NULL ELSE CAST (a0.[collection_time] AS TEXT) END","col9"
"f(x)->CASE WHEN  {collection_time} >=  {start_date}  THEN 'Y' ELSE 'N' END","filter","N","None","None","Row","C","***","@if@1","SQL->CASE WHEN  {col9} >=  {col7}  THEN 'Y' ELSE 'N' END","col10"
"f(x)->''","dlcp","Y","None","None","Row","C","***","","SQL->''","col11"
"JOINGRID:"
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col1}","<>","Sqlite->f(x)->start_date                                                                                                    : SQL->{col7}",""
"FILTERGRID:"
"AND","","f(x)->{filter}","=","'Y'","","","cx","@IF@2","SQL->{col10}",""
"AND","","a0.owner","=","'PROD'","","","c","csv","SQL->a0.[owner]",""
"AND","","a0.prodgroup3","In Group(!=)",".\Row_data_wip_byDLCP.tab:2. product_group_3","","","c","csv","SQL->a0.[prodgroup3]",""










































/END_EMBED
/EMBED=VG2;PrePostQuery_14
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","freport_1.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","38"
"JOINROWS:","2"
"FILTERROWS:","0"
"COL_ID_COUNTER:","57"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","Final_report1.tab a0",""
"","LOTlevel_ppvm1.tab a1",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"a0.prod","prod","Y","None","None","Row","c","","csv","SQL->a0.[prod]","col2"
"a0.prod_2","prod_2","Y","None","None","Row","c","","csv","SQL->a0.[prod_2]","col3"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col4"
"a0.www","www","Y","None","None","Row","c","","csv","SQL->a0.[www]","col6"
"a0.ppvtype","ppvtype","Y","None","None","Row","c","","csv","SQL->a0.[ppvtype]","col7"
"f(x)->wip_clean","wip_clean","Y","None","None","Row","f","wip_clean","csv","SQL->CASE WHEN a0.[wip_clean] = '' THEN NULL ELSE CAST (a0.[wip_clean] AS REAL) END","col8"
"f(x)->wip_hold","wip_hold","Y","None","None","Row","f","wip_hold","csv","SQL->CASE WHEN a0.[wip_hold] = '' THEN NULL ELSE CAST (a0.[wip_hold] AS REAL) END","col9"
"f(x)->usable","wip_SFGI","Y","None","None","Row","f","usable","csv","SQL->CASE WHEN a0.[usable] = '' THEN NULL ELSE CAST (a0.[usable] AS REAL) END","col54"
"f(x)->total_good","total_good","Y","None","Sum","Row","f","total_good","csv","SQL->CASE WHEN a0.[total_good] = '' THEN NULL ELSE CAST (a0.[total_good] AS REAL) END","col10"
"a0.mor","mor","Y","None","None","Row","c","","csv","SQL->a0.[mor]","col13"
"f(x)->qtg_2","qtg_2","N","None","None","Row","f","qtg_2","csv","SQL->CASE WHEN a0.[qtg] = '' THEN NULL ELSE CAST (a0.[qtg] AS REAL) END","col45"
"f(x)->qtg1","qtg1_o","N","None","None","Row","f","qtg1","csv","SQL->CASE WHEN a0.[qtg1] = '' THEN NULL ELSE CAST (a0.[qtg1] AS REAL) END","col18"
"f(x)->qtg2","qtg2_o","N","None","None","Row","f","qtg2","csv","SQL->CASE WHEN a0.[qtg2] = '' THEN NULL ELSE CAST (a0.[qtg2] AS REAL) END","col19"
"f(x)->CASE WHEN {ppvtype} ='Lot_PPVM' and  {prodgroup3} not in('TGLUP4' ) THEN  {qtg_2}  ELSE!!!!!(!!!!!CASE WHEN  {qtg_1} is not null   THEN  {qtg1_o}- {qtg_1}  ELSE  {qtg1_o}  END) END","qtg1","Y","None","None","Row","F","***","@if@1","SQL->CASE WHEN {col7} ='Lot_PPVM' and  {col1} not in('TGLUP4' ) THEN  {col45}  ELSE!!!!!(!!!!!CASE WHEN  {col33} is not null   THEN  {col18}- {col33}  ELSE  {col18}  END) END","col36"
"f(x)->CASE WHEN  {qtg_1} is not null   THEN   {qtg2_o} - {qtg_1}  ELSE   {qtg2_o} END","qtg2","Y","None","None","Row","F","***","@if@1","SQL->CASE WHEN  {col33} is not null   THEN   {col19} - {col33}  ELSE   {col19} END","col40"
"f(x)->qps1","qps1_o","N","None","None","Row","f","qps1","csv","SQL->CASE WHEN a0.[qps1] = '' THEN NULL ELSE CAST (a0.[qps1] AS REAL) END","col46"
"f(x)->qps2","qps2_o","N","None","None","Row","f","qps2","csv","SQL->CASE WHEN a0.[qps2] = '' THEN NULL ELSE CAST (a0.[qps2] AS REAL) END","col47"
"f(x)->CASE WHEN  {stg1} <=1 THEN  {qtg1} ELSE  {qtg1} / {stg1}  END","qps1","Y","None","None","Row","F","***","@if@2","SQL->CASE WHEN  {col24} <=1 THEN  {col36} ELSE  {col36} / {col24}  END","col48"
"f(x)->CASE WHEN   {stg2} <=1 THEN   {qtg2} ELSE   {qtg2} /  {stg2} END","qps2","Y","None","None","Row","C","***","@if@2","SQL->CASE WHEN   {col25} <=1 THEN   {col40} ELSE   {col40} /  {col25} END","col49"
"a0.commit1","commit1","Y","None","None","Row","c","","csv","SQL->a0.[commit1]","col20"
"a0.commit2","commit2","Y","None","None","Row","c","","csv","SQL->a0.[commit2]","col21"
"a0.bp1","bp1","Y","None","None","Row","c","","csv","SQL->a0.[bp1]","col22"
"a0.bp2","bp2","Y","None","None","Row","c","","csv","SQL->a0.[bp2]","col23"
"f(x)->stg1","stg1","Y","None","None","Row","f","stg1","csv","SQL->CASE WHEN a0.[stg1] = '' THEN NULL ELSE CAST (a0.[stg1] AS REAL) END","col24"
"f(x)->stg2","stg2","Y","None","None","Row","f","stg2","csv","SQL->CASE WHEN a0.[stg2] = '' THEN NULL ELSE CAST (a0.[stg2] AS REAL) END","col25"
"a1.prod_2","prod_2_1","N","None","None","Row","c","","csv","SQL->a1.[prod_2]","col31"
"a1.prodgroup3","prodgroup3_1","N","None","None","Row","c","","csv","SQL->a1.[prodgroup3]","col32"
"f(x)->qtg_1","qtg_1","Y","None","None","Row","f","qtg_1","csv","SQL->CASE WHEN a1.[qtg] = '' THEN NULL ELSE CAST (a1.[qtg] AS REAL) END","col33"
"f(x)->CASE WHEN  {ppvtype_2} like 'Lot%' THEN 'PPVS' ELSE  {ppvtype_2} END","ppvtype_1","N","None","None","Row","C","***","csv","SQL->CASE WHEN  {col35} like 'Lot%' THEN 'PPVS' ELSE  {col35} END","col34"
"a1.ppvtype","ppvtype_2","N","None","None","Row","c","","csv","SQL->a1.[ppvtype]","col35"
"f(x)->CASE WHEN  {ppvtype} like 'Lot%' and  {prodgroup3} not in ('TGLUP4') THEN  {stg1}!!!!! ELSE !!!!!(CASE WHEN {stg1} <= 0 and   {qps1} <=0 THEN  {stg2} ELSE  {stg1} END!!!!! ) END","stg","Y","None","None","Row","F","***","@if@3","SQL->CASE WHEN  {col7} like 'Lot%' and  {col1} not in ('TGLUP4') THEN  {col24}!!!!! ELSE !!!!!(CASE WHEN {col24} <= 0 and   {col48} <=0 THEN  {col25} ELSE  {col24} END!!!!! ) END","col50"
"f(x)->CASE WHEN  {ppvtype} like 'Lot%' and  {prodgroup3} not in ('TGLUP4') THEN   {qps1} !!!!! ELSE !!!!!(CASE WHEN {stg1} <= 0 and   {qps1} <=0 THEN   {qps2} ELSE   {qps1} END!!!!! ) END","qps","Y","None","None","Row","F","***","@if@3","SQL->CASE WHEN  {col7} like 'Lot%' and  {col1} not in ('TGLUP4') THEN   {col48} !!!!! ELSE !!!!!(CASE WHEN {col24} <= 0 and   {col48} <=0 THEN   {col49} ELSE   {col48} END!!!!! ) END","col51"
"f(x)->CASE WHEN  {ppvtype} like 'Lot%' and  {qps} =0 THEN 0 !!!!!ELSE(!!!!! CASE WHEN {qps} = {qps1}  THEN 1  ELSE 0 END) END","indicator","Y","None","None","Row","N","***","@if@4","SQL->CASE WHEN  {col7} like 'Lot%' and  {col51} =0 THEN 0 !!!!!ELSE(!!!!! CASE WHEN {col51} = {col48}  THEN 1  ELSE 0 END) END","col52"
"f(x)->SUM ( {indicator} ) OVER (PARTITION BY  {prod_2} )","sum","Y","None","None","Row","N","***","@if@5","SQL->SUM ( {col52} ) OVER (PARTITION BY  {col3} )","col53"
"a0.friday_cutoff","friday_cutoff","Y","None","None","Row","c","","csv","SQL->a0.[friday_cutoff]","col55"
"a0.dlcp_final","dlcp_final","Y","None","None","Row","c","","csv","SQL->a0.[dlcp_final]","col56"
"f(x)->IFNULL(CASE WHEN a0.[total_good_1] = '' THEN NULL ELSE CAST (a0.[total_good_1] AS REAL) END,0)","total_good_1","Y","None","None","Row","F","***total_good_1","csv","SQL->IFNULL(CASE WHEN a0.[total_good_1] = '' THEN NULL ELSE CAST (a0.[total_good_1] AS REAL) END,0)","col57"
"JOINGRID:"
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col1}","=","Sqlite->a1.prodgroup3                                                                                                    : SQL->{col32}",""
"","","Sqlite->a0.ppvtype                                                                                                    : SQL->{col7}","=","Sqlite->f(x)->ppvtype_1                                                                                                    : SQL->{col34}",""
"FILTERGRID:"












































/END_EMBED
/EMBED=VG2;QA MOR
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","QA_Mor.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","11"
"JOINROWS:","0"
"FILTERROWS:","3"
"COL_ID_COUNTER:","12"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","MOR.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.a","a","Y","None","None","Row","c","","csv","SQL->a0.[a]","col1"
"f(x)->p","p1","Y","None","None","Row","f","p","csv","SQL->CASE WHEN a0.[p] = '' THEN NULL ELSE CAST (a0.[p] AS REAL) END","col2"
"a0.e","e","Y","None","None","Row","c","","csv","SQL->a0.[e]","col3"
"a0.b","b","Y","None","None","Row","c","","csv","SQL->a0.[b]","col5"
"a0.g","g","Y","None","None","Row","c","","csv","SQL->a0.[g]","col6"
"a0.j","j","Y","None","None","Row","c","","csv","SQL->a0.[j]","col7"
"a0.d","d","Y","None","None","Row","c","","csv","SQL->a0.[d]","col9"
"a0.h","h","Y","None","None","Row","c","","csv","SQL->a0.[h]","col10"
"a0.w","w","P","None","None","Row","c","","csv","SQL->a0.[w]","col12"
"f(x)->CASE WHEN  {e} ='AMLY22' and  {h} ='F' and  {d} like 'AM%' THEN 'Y' !!!!!ELSE!!!!! (CASE WHEN {e} ='AMLY22' THEN 'N' !!!!!WHEN {e} ='CFD' and  {h} is not null  THEN 'N' !!!!!WHEN {e} ='CFLU43' and   {j}  is null  THEN 'N' !!!!!WHEN {e} ='RKLS81' and    {h} ='0' THEN 'N' !!!!!WHEN   {e} ='ADLP282' and     {w} is not null THEN 'N' !!!!!WHEN   {e} ='IVEG42' and     {h} is  null THEN 'N' !!!!!WHEN   {e} ='RPLP282' and      {b} = 'STHm' THEN 'N' !!!!!ELSE 'Y' END)END!!!!!","filter","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col3} ='AMLY22' and  {col10} ='F' and  {col9} like 'AM%' THEN 'Y' !!!!!ELSE!!!!! (CASE WHEN {col3} ='AMLY22' THEN 'N' !!!!!WHEN {col3} ='CFD' and  {col10} is not null  THEN 'N' !!!!!WHEN {col3} ='CFLU43' and   {col7}  is null  THEN 'N' !!!!!WHEN {col3} ='RKLS81' and    {col10} ='0' THEN 'N' !!!!!WHEN   {col3} ='ADLP282' and     {col12} is not null THEN 'N' !!!!!WHEN   {col3} ='IVEG42' and     {col10} is  null THEN 'N' !!!!!WHEN   {col3} ='RPLP282' and      {col5} = 'STHm' THEN 'N' !!!!!ELSE 'Y' END)END!!!!!","col8"
"f(x)->CASE WHEN  {e} ='TGP' THEN  6.0 !!!!! WHEN  {e} ='CMLS62' THEN  5.21!!!!!ELSE  {p1} END","p","Y","None","None","Row","F","***","@if@1","SQL->CASE WHEN  {col3} ='TGP' THEN  6.0 !!!!! WHEN  {col3} ='CMLS62' THEN  5.21!!!!!ELSE  {col2} END","col11"
"JOINGRID:"
"FILTERGRID:"
"AND","","a0.b","Like","'STH%'","","","c","csv","SQL->a0.[b]",""
"AND","","f(x)->{filter}","=","'Y'","","","cx","@IF@1","SQL->{col8}",""
"AND","","f(x)->{p}","<=","20","","","fx","@IF@2","SQL->{col11}",""

/END_EMBED
/EMBED=VG2;History
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","history_tr.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","4"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","7"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","final_report.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col7"
"a0.total_request","total_request","Y","None","None","Row","c","","csv","SQL->a0.[total_request]","col3"
"a0.ww_shift","ww_shift","Y","None","None","Row","c","","csv","SQL->a0.[ww_shift]","col4"
"f(x)->Datetime('now','localtime')","current_time","Y","None","None","Row","H","***","","SQL->Datetime('now','localtime')","col5"
"JOINGRID:"
"FILTERGRID:"













































































































































































/END_EMBED
/EMBED=VG2;TR Table
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","TRTable.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","3"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","3"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","Cellrequest_his.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"f(x)->total_request","total_request","Y","None","Sum","Value","f","total_request","csv","SQL->CASE WHEN a0.[total_request] = '' THEN NULL ELSE CAST (a0.[total_request] AS REAL) END","col2"
"a0.ww_shift","ww_shift","Y","None","None","Header","c","","csv","SQL->a0.[ww_shift]","col3"
"JOINGRID:"
"FILTERGRID:"








































































































































































































































/END_EMBED
/EMBED=VG2;Miss Product
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","excludeprod.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","6"
"JOINROWS:","0"
"FILTERROWS:","5"
"COL_ID_COUNTER:","7"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:9:a0"
"TABLEGRID:","1"
"","Antares_Area_Section_Operation",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.ANTARES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.area_section","product_group_3","Y","None","None","Row","c","Section name with Area Section Type","qps","a0->Qps.Area_Section","col1"
"a0.area_type","area_type","N","None","None","Row","c","Area type. Ex: L1 Goaling, L3 Goaling","qps","a0->Qps.Area_Type","col2"
"a0.commit1","commit1","N","None","None","Row","n","","section","a0->Section.Commit1","col3"
"a0.commit2","commit2","N","None","None","Row","n","","section","a0->Section.Commit2","col4"
"f(a0)->LEN( {area_section} )","lengh","N","None","None","Row","N","***","qps","a0->LEN( {col1} )","col6"
"f(a0)->'NULL'","dlcp","Y","None","None","Row","C","***","@if@1","a0->'NULL'","col7"
"JOINGRID:"
"FILTERGRID:"
"AND","","a0.area_type","Like","'L1%'","",".","c","qps","a0->Qps.Area_Type",""
"AND","","a0.area_section","In Group(!=)",".\cell_info.tab:1. product_group_3","",".","c","qps","a0->Qps.Area_Section",""
"AND","(","a0.commit1","!=","0","","","n","section","a0->Section.Commit1",""
"OR","","a0.commit2","!=","0",")","","n","section","a0->Section.Commit2",""
"AND","","f(a0)->{lengh}","!=","4","","","nx","@IF@1","a0->{col6}",""















































































































































































/END_EMBED
/EMBED=VG2;Unit PPVM map Mor
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","sthiprod.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","25"
"JOINROWS:","10"
"FILTERROWS:","0"
"COL_ID_COUNTER:","37"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","5"
"","6970Lastlot1.tab a0",""
"","PPVM_RR_Sort.tab a1",""
"","PPVM_RR_Sort.tab a2",""
"","calendar.tab a4",""
"","BP_ByDLCP.csv a5",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"f(x)->CASE WHEN  {prodgroup3} like 'ICLU42%'  THEN 'ICLU42' ELSE  {prodgroup3} END","prod_2","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col19} like 'ICLU42%'  THEN 'ICLU42' ELSE  {col19} END","col22"
"a0.prod","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prod]","col19"
"a0.dlcp","dlcp_2","P","None","None","Row","c","","csv","SQL->a0.[dlcp]","col25"
"f(x)->CASE WHEN  {dlcp_2} is null  THEN 'FF' ELSE  {dlcp_2} END","dlcp_final","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col25} is null  THEN 'FF' ELSE  {col25} END","col26"
"f(x)->IFNULL(CASE WHEN a0.[final_percent] = '' THEN NULL ELSE CAST (a0.[final_percent] AS REAL) END,0)","final_percent","Y","None","None","Row","F","***final_percent","csv","SQL->IFNULL(CASE WHEN a0.[final_percent] = '' THEN NULL ELSE CAST (a0.[final_percent] AS REAL) END,0)","col2"
"f(x)->floor( {final_percent} )","percent_low","P","None","None","Row","F","***","@if@1","SQL->floor( {col2} )","col6"
"f(x)->ceil( {final_percent} )","percent_up","P","None","None","Row","F","***","@if@1","SQL->ceil( {col2} )","col7"
"a1.prod","prod","P","None","None","Row","c","","csv","SQL->a1.[prod]","col8"
"f(x)->percent","percent","P","None","None","Row","f","percent","csv","SQL->CASE WHEN a1.[percent] = '' THEN NULL ELSE CAST (a1.[percent] AS REAL) END","col9"
"f(x)->mor_low","mor_low","P","None","None","Row","f","mor_low","csv","SQL->CASE WHEN a1.[mor] = '' THEN NULL ELSE CAST (a1.[mor] AS REAL) END","col10"
"a1.dlcp","dlcp","P","None","None","Row","c","","csv","SQL->a1.[dlcp]","col23"
"a2.prod","prod_1","P","None","None","Row","c","","csv","SQL->a2.[prod]","col11"
"f(x)->percent_1","percent_1","P","None","None","Row","f","percent_1","csv","SQL->CASE WHEN a2.[percent] = '' THEN NULL ELSE CAST (a2.[percent] AS REAL) END","col12"
"f(x)->mor","mor_up","P","None","None","Row","f","mor","csv","SQL->CASE WHEN a2.[mor] = '' THEN NULL ELSE CAST (a2.[mor] AS REAL) END","col13"
"a2.dlcp","dlcp_1","P","None","None","Row","c","","csv","SQL->a2.[dlcp]","col24"
"f(x)->({mor_low} -(({mor_low} - {mor_up} )*( {final_percent} - {percent_low} )))/1000","final_mor1","Y:2","None","Max","Row","F","***","@if@2","SQL->({col10} -(({col10} - {col13} )*( {col2} - {col6} )))/1000","col14"
"f(x)->{final_mor1} *(1+  {mor_delta_currentweek} /100)","final_mor","Y:2","None","Max","Row","F","***","@if@3","SQL->{col14} *(1+  {col36} /100)","col31"
"f(x)->'Unit_PPVM'","PPVType","Y","None","None","Row","C","***","","SQL->'Unit_PPVM'","col17"
"f(x)->'6970'","operation","Y","None","None","Row","C","***","","SQL->'6970'","col21"
"a4.ww_current","ww_current","Y","None","None","Row","c","","csv","SQL->a4.[ww_current]","col32"
"a5.prod","product_group_3","Y","None","None","Row","c","","csv","SQL->a5.[prod]","col33"
"a5.ww","ww","Y","None","None","Row","c","","csv","SQL->a5.[ww]","col34"
"a5.dlcp","dlcp_31","P","None","None","Row","c","","csv","SQL->a5.[dlcp]","col35"
"f(x)->CASE WHEN  {dlcp_3}  is null THEN 'FF' ELSE  {dlcp_3} END","dlcp_3","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col35}  is null THEN 'FF' ELSE  {col35} END","col37"
"f(x)->IFNULL(CASE WHEN a5.[mor_delta] = '' THEN NULL ELSE CAST (a5.[mor_delta] AS REAL) END,0)","mor_delta_currentweek","Y","None","None","Row","F","***mor_delta","csv","SQL->IFNULL(CASE WHEN a5.[mor_delta] = '' THEN NULL ELSE CAST (a5.[mor_delta] AS REAL) END,0)","col36"
"JOINGRID:"
"","","Sqlite->a0.prod                                                                                                    : SQL->{col19}","=","Sqlite->a1.prod                                                                                                    : SQL->{col8}",""
"","","Sqlite->f(x)->dlcp_final                                                                                                    : SQL->{col26}","=","Sqlite->a1.dlcp                                                                                                    : SQL->{col23}",""
"","","Sqlite->f(x)->percent_low                                                                                                    : SQL->{col6}","=","Sqlite->f(x)->percent                                                                                                    : SQL->{col9}",""
"","","Sqlite->a0.prod                                                                                                    : SQL->{col19}","=","Sqlite->a2.prod                                                                                                    : SQL->{col11}",""
"","","Sqlite->f(x)->dlcp_final                                                                                                    : SQL->{col26}","=","Sqlite->a2.dlcp                                                                                                    : SQL->{col24}",""
"","","Sqlite->f(x)->percent_up                                                                                                    : SQL->{col7}","=","Sqlite->f(x)->percent_1                                                                                                    : SQL->{col12}",""
"","","Sqlite->a0.prod                                                                                                    : SQL->{col19}","=","Sqlite->a5.prod                                                                                                    : SQL->{col33}",""
"","","Sqlite->f(x)->dlcp_final                                                                                                    : SQL->{col26}","=","Sqlite->f(x)->dlcp_3                                                                                                    : SQL->{col37}",""
"","","Sqlite->a0.prod                                                                                                    : SQL->{col19}","<>","Sqlite->a4.ww_current                                                                                                    : SQL->{col32}",""
"","","Sqlite->a4.ww_current                                                                                                    : SQL->{col32}","=","Sqlite->a5.ww                                                                                                    : SQL->{col34}",""
"FILTERGRID:"

/END_EMBED
/EMBED=VG2;TI
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","prod_tr.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","4"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","9"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","AOT pure test.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup31","prod","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup31]","col9"
"a0.operation","operation_1","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"a0.entity","entity","N","None","None","Row","c","","csv","SQL->a0.[entity]","col4"
"f(x)->COUNT (DISTINCT  {entity} ) OVER (PARTITION BY   {prodgroup31} )","count","Y","None","None","Row","C","***","csv","SQL->COUNT (DISTINCT  {col4} ) OVER (PARTITION BY   {col9} )","col5"
"JOINGRID:"
"FILTERGRID:"





























































/END_EMBED
/EMBED=VG2;PrePostQuery_21
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Summary by product_byDLCP.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","27"
"JOINROWS:","6"
"FILTERROWS:","5"
"COL_ID_COUNTER:","67"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","6"
"","6970Lastlot1.tab a1",""
"","ULPPVM_Target.tab a0",""
"","QTG_WIP.tab a2",""
"","STHI_Mor.tab a3",""
"","sthiprod.tab a5",""
"","freport_1.tab a6",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a1.prod","prod","Y","None","None","Row","c","","csv","SQL->a1.[prod]","col63"
"a0.product_group","product_group","Y","None","None","Row","c","","csv","SQL->a0.[product_group]","col3"
"f(x)->IFNULL(CASE WHEN a0.[spm] = '' THEN NULL ELSE CAST (a0.[spm] AS REAL) END,0)","spm","Y:0","None","Sum","Row","F","***spm","csv","SQL->IFNULL(CASE WHEN a0.[spm] = '' THEN NULL ELSE CAST (a0.[spm] AS REAL) END,0)","col4"
"f(x)->spm_target_1","spm_target","Y","None","Sum","Row","f","spm_target_1","csv","SQL->CASE WHEN a0.[spm_target] = '' THEN NULL ELSE CAST (a0.[spm_target] AS REAL) END","col62"
"a0.dlcp","dlcp","Y","None","None","Row","c","","csv","SQL->a0.[dlcp]","col65"
"f(x)->CASE WHEN  {spm_target_1} - {spm}>0 THEN  {spm_target_1} - {spm} ELSE 0 END","qtg_m","Y","None","None","Row","F","***","s+1","SQL->CASE WHEN  {col62} - {col4}>0 THEN  {col62} - {col4} ELSE 0 END","col12"
"a2.prodname","prodname","Y","None","None","Row","c","","csv","SQL->a2.[prodname]","col24"
"a2.operation","operation","Y","None","None","Row","c","","csv","SQL->a2.[operation]","col23"
"f(x)->stg1","stg1","Y","None","None","Row","f","stg1","csv","SQL->CASE WHEN a2.[stg1] = '' THEN NULL ELSE CAST (a2.[stg1] AS REAL) END","col25"
"f(x)->CASE WHEN  {stg1}<=1 THEN  {qtg_m} /1000 ELSE  {qtg_m} /1000/{stg1} END!!!!!","qps_m","Y","None","None","Row","F","***","s+2","SQL->CASE WHEN  {col25}<=1 THEN  {col12} /1000 ELSE  {col12} /1000/{col25} END!!!!!","col26"
"f(x)->qtg1","qtg_total","Y","None","None","Row","f","qtg1","csv","SQL->CASE WHEN a2.[qtg1] = '' THEN NULL ELSE CAST (a2.[qtg1] AS REAL) END","col27"
"f(x)->CASE WHEN {qtg_total} - {qtg_m}<0  THEN 0 ELSE {qtg_total} - {qtg_m} END","qtg_s","Y","None","None","Row","F","***","s+2","SQL->CASE WHEN {col27} - {col12}<0  THEN 0 ELSE {col27} - {col12} END","col28"
"f(x)->CASE WHEN  {stg1}<=1 THEN {qtg_s} /1000 ELSE {qtg_s}/1000/{stg1} END!!!!!","qps_s","Y","None","None","Row","F","***","s+3","SQL->CASE WHEN  {col25}<=1 THEN {col28} /1000 ELSE {col28}/1000/{col25} END!!!!!","col33"
"a3.e","e","Y","None","None","Row","c","","csv","SQL->a3.[e]","col34"
"f(x)->ppv_spm","ppv_spm","Y","None","None","Row","f","ppv_spm","csv","SQL->CASE WHEN a3.[ppv_spm] = '' THEN NULL ELSE CAST (a3.[ppv_spm] AS REAL) END","col50"
"f(x)->ppv_sps","ppv_sps1","Y","None","None","Row","f","ppv_sps","csv","SQL->CASE WHEN a3.[ppv_sps] = '' THEN NULL ELSE CAST (a3.[ppv_sps] AS REAL) END","col51"
"f(x)->CASE WHEN     {ulspm_rate} >0  THEN  {ppv_sps1} ELSE  {mor}  END","ppv_sps","Y","None","None","Row","F","***","@if@1","SQL->CASE WHEN     {col49} >0  THEN  {col51} ELSE  {col54}  END","col56"
"f(x)->(({qps_m} /  {ppv_spm} ) + ({qps_s} /   {ppv_sps} )) / (100 + {mor_delta_currentweek} )*100","tr","Y","None","None","Row","F","***","s+4","SQL->(({col26} /  {col50} ) + ({col33} /   {col56} )) / (100 + {col60} )*100","col37"
"f(x)->CASE WHEN  {qtg_s}= 0  THEN 100 ELSE  {qtg_m} / {qtg_s} *100 END","m_target","Y","None","None","Row","F","***","s+4","SQL->CASE WHEN  {col28}= 0  THEN 100 ELSE  {col12} / {col28} *100 END","col45"
"a5.prod_2","prod_2","Y","None","None","Row","c","","csv","SQL->a5.[prod_2]","col48"
"f(x)->ulspm_rate","ulspm_rate","Y:1","None","None","Row","f","ulspm_rate","csv","SQL->CASE WHEN a5.[final_percent] = '' THEN NULL ELSE CAST (a5.[final_percent] AS REAL) END","col49"
"f(x)->'Unit_PPVM'","ppv_type","Y","None","None","Row","C","***","","SQL->'Unit_PPVM'","col52"
"f(x)->mor_delta_currentweek","mor_delta_currentweek","Y","None","None","Row","f","mor_delta_currentweek","csv","SQL->CASE WHEN a5.[mor_delta_currentweek] = '' THEN NULL ELSE CAST (a5.[mor_delta_currentweek] AS REAL) END","col60"
"a6.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a6.[prodgroup3]","col53"
"f(x)->mor","mor","Y","None","None","Row","f","mor","csv","SQL->CASE WHEN a6.[mor] = '' THEN NULL ELSE CAST (a6.[mor] AS REAL) END","col54"
"a6.ppvtype","ppvtype","Y","None","None","Row","c","","csv","SQL->a6.[ppvtype]","col55"
"f(x)->CASE WHEN  {dlcp} ='DF'  THEN 'N' ELSE 'Y' END","filter","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col65} ='DF'  THEN 'N' ELSE 'Y' END","col67"
"JOINGRID:"
"","","Sqlite->a1.prod                                                                                                    : SQL->{col63}","=","Sqlite->a0.product_group                                                                                                    : SQL->{col3}",""
"","","Sqlite->a1.prod                                                                                                    : SQL->{col63}","=","Sqlite->a2.prodname                                                                                                    : SQL->{col24}",""
"","","Sqlite->a1.prod                                                                                                    : SQL->{col63}","=","Sqlite->a3.e                                                                                                    : SQL->{col34}",""
"","","Sqlite->a1.prod                                                                                                    : SQL->{col63}","=","Sqlite->a5.prod_2                                                                                                    : SQL->{col48}",""
"","","Sqlite->a1.prod                                                                                                    : SQL->{col63}","=","Sqlite->a6.prodgroup3                                                                                                    : SQL->{col53}",""
"","","Sqlite->f(x)->ppv_type                                                                                                    : SQL->{col52}","=","Sqlite->a6.ppvtype                                                                                                    : SQL->{col55}",""
"FILTERGRID:"
"AND","","a2.operation","=","'6970'","","","c","csv","SQL->a2.[operation]",""
"-- AND","","a0.product_group","!=","'DG1'","","","c","csv","SQL->a0.[product_group]",""
"AND","","f(x)->ulspm_rate","Is Not Null","","","","f","csv","SQL->CASE WHEN a5.[final_percent] = '' THEN NULL ELSE CAST (a5.[final_percent] AS REAL) END",""
"AND","","a1.prod","In Group(!=)",".\Row_data_wip_byDLCP.tab:2. product_group_3","","","c","csv","SQL->a1.[prod]",""
"AND","","f(x)->{filter}","=","'Y'","","","cx","@IF@1","SQL->{col67}",""
















/END_EMBED
/EMBED=VG2;PrePostQuery_21_0
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","ULPPVM_Target.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","15"
"JOINROWS:","2"
"FILTERROWS:","9"
"COL_ID_COUNTER:","35"
"CHART_COUNTER:","8"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:9:a1"
"TABLEGRID:","1"
"","SAMS_1",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","ALL.SAMS"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","ALL.SAMS"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","ULPPVm_lotlist_raw_sort.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a1.samplingplan_name","samplingplan_name","P","None","None","Row","c","Sampling Plan Name","sams_sampling_plan","a1->sams7.samplingplan_name","col12"
"a1.effective_ww","effective_ww","P","None","None","Row","n","Effective Work week in format ww","sams_sampling_plan","a1->sams7.effective_ww","col35"
"a1.sp_site_code","sp_site_code","Y","None","None","Row","c","Site Code","sams_sampling_plan","a1->sams7.site_code","col13"
"a1.fixed_monitor_target","spm_target","Y","None","None","Row","c","Currently only available in ATD.I.SAMS. Sample Size. E.g., 1000","sams_sampling_plan","a1->sams7.fixed_monitor_target","col20"
"a1.actual_spm","spm1","Y","None","None","Row","c","Currently only available in ATD.I.SAMS. Actual SPM. E.g., 2000","sams_sampling_plan","a1->sams7.actual_spm","col23"
"a1.sampling_operation","sampling_operation","Y","None","None","Row","n","Sampling Operation","sams_sampling_operation","a1->sams8.sampling_operation","col26"
"a1.sp_created_date","sp_created_date","Y","None","None","Row","d","Sampling Plan create date","sams_sampling_plan","a1->sams7.created_date","col16"
"a1.sp_activation_status","sp_activation_status","Y","None","None","Row","c","Activation Status. E.g., DISABLE, ACTIVE, INACTIVE, DRAFT","sams_sampling_plan","a1->sams7.activation_status","col17"
"f(a1)->MAX ( {sp_created_date} ) OVER (PARTITION BY  {samplingplan_name},  {effective_ww}   )","max_date","Y","None","None","Row","D","***","sams_sampling_plan","a1->MAX ( {col16} ) OVER (PARTITION BY  {col12},  {col35}   )","col28"
"f(a1)->CASE WHEN  {sp_created_date}= {max_date}   THEN 'Y'  ELSE 'N' END","filter","Y","None","None","Row","C","***","@if@1","a1->CASE WHEN  {col16}= {col28}   THEN 'Y'  ELSE 'N' END","col29"
"f(a1)->CASE WHEN  {samplingplan_name}  like '%ADLP282%' THEN 'ADLP282' !!!!!WHEN  {samplingplan_name}  like '%ADLP682%' THEN 'ADLP682' !!!!!WHEN  {samplingplan_name}  like '%ADLS881%' THEN 'ADLS881' !!!!!WHEN  {samplingplan_name}  like '%ADLS601%' THEN 'ADLS601' !!!!!WHEN  {samplingplan_name}  like '%TGLH81%' THEN 'TGLH81' !!!!!WHEN  {samplingplan_name}  like '%TGLUP3%' THEN 'TGLUP3' !!!!!WHEN  {samplingplan_name}  like '%TGRUP3%' THEN 'TGRUP3' !!!!!WHEN  {samplingplan_name}  like '%RPLP682%' THEN 'RPLP682' !!!!!WHEN  {samplingplan_name}  like '%RPLPX682%' THEN 'RPLPX682' !!!!!WHEN  {samplingplan_name}  like '%RPLP282%' THEN 'RPLP282' !!!!!WHEN  {samplingplan_name}  like '%RPL282%' THEN 'RPLP282' !!!!!ELSE  {samplingplan_name} END","product_group","Y","None","None","Row","C","***","sams_sampling_plan","a1->CASE WHEN  {col12}  like '%ADLP282%' THEN 'ADLP282' !!!!!WHEN  {col12}  like '%ADLP682%' THEN 'ADLP682' !!!!!WHEN  {col12}  like '%ADLS881%' THEN 'ADLS881' !!!!!WHEN  {col12}  like '%ADLS601%' THEN 'ADLS601' !!!!!WHEN  {col12}  like '%TGLH81%' THEN 'TGLH81' !!!!!WHEN  {col12}  like '%TGLUP3%' THEN 'TGLUP3' !!!!!WHEN  {col12}  like '%TGRUP3%' THEN 'TGRUP3' !!!!!WHEN  {col12}  like '%RPLP682%' THEN 'RPLP682' !!!!!WHEN  {col12}  like '%RPLPX682%' THEN 'RPLPX682' !!!!!WHEN  {col12}  like '%RPLP282%' THEN 'RPLP282' !!!!!WHEN  {col12}  like '%RPL282%' THEN 'RPLP282' !!!!!ELSE  {col12} END","col30"
"f(a1)->CASE WHEN  {samplingplan_name} like '%DF%' THEN 'DF' !!!!!WHEN  {samplingplan_name} like '%UX%' THEN 'DF'!!!!!WHEN  {samplingplan_name} like '%UV%' THEN 'DF'!!!!!WHEN  {samplingplan_name} like '%IOTG%' THEN 'N'!!!!!ELSE 'FF' END","dlcp","Y","None","None","Row","C","***","sams_sampling_plan","a1->CASE WHEN  {col12} like '%DF%' THEN 'DF' !!!!!WHEN  {col12} like '%UX%' THEN 'DF'!!!!!WHEN  {col12} like '%UV%' THEN 'DF'!!!!!WHEN  {col12} like '%IOTG%' THEN 'N'!!!!!ELSE 'FF' END","col31"
"a0.product_group","product_group_1","Y","None","None","Row","c","","csv","SQL->a0.[product_group]","col32"
"f(x)->IFNULL(CASE WHEN a0.[spm] = '' THEN NULL ELSE CAST (a0.[spm] AS REAL) END,0)","spm","Y","None","None","Row","F","***spm_1","csv","SQL->IFNULL(CASE WHEN a0.[spm] = '' THEN NULL ELSE CAST (a0.[spm] AS REAL) END,0)","col33"
"a0.dlcp_join","dlcp_join","Y","None","None","Row","c","","csv","SQL->a0.[dlcp_join]","col34"
"JOINGRID:"
"","","View->f(a1)->product_group                                                                                                    : a1->{col30}","=","Sqlite->a0.product_group                                                                                                    : SQL->{col32}",""
"","","View->f(a1)->dlcp                                                                                                    : a1->{col31}","=","Sqlite->a0.dlcp_join                                                                                                    : SQL->{col34}",""
"FILTERGRID:"
"AND","","a1.samplingplan_name","!=","'  '","",".","c","sams_sampling_plan","a1->sams7.samplingplan_name",""
"-- AND","","a1.is_new_ul_design","=","'Y'","","","c","sams_sampling_plan","a1->sams7.is_new_ul_design",""
"AND","","a1.sp_site_code","=","'CD6'","","","c","sams_sampling_plan","a1->sams7.site_code",""
"AND","","a1.sp_created_date",">=","TRUNC(SYSDATE) -14","",".","d","sams_sampling_plan","a1->sams7.created_date",""
"AND","","a1.sampling_operation","=","6970","","","n","sams_sampling_operation","a1->sams8.sampling_operation",""
"AND","","a1.sp_activation_status","=","'ACTIVE'","","","c","sams_sampling_plan","a1->sams7.activation_status",""
"AND","","f(a1)->{filter}","=","'Y'","","","cx","@IF@2","a1->{col29}",""
"AND","","a1.effective_ww","In Group(=N)",".\calendar.tab:36. week","","","n","sams_sampling_plan","a1->sams7.effective_ww",""
"AND","","f(a1)->{dlcp}","!=","'N'","","","cx","@IF@1","a1->{col31}",""


/END_EMBED
/EMBED=VG2;PrePostQuery_23_0
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","STHI_Mor.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","4"
"JOINROWS:","0"
"FILTERROWS:","2"
"COL_ID_COUNTER:","19"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","QA_Mor.tab a1",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a1.e","e","Y","None","None","Row","c","","csv","SQL->a1.[e]","col16"
"f(x)->p","p","Y","None","Avg","Value","f","p","csv","SQL->CASE WHEN a1.[p] = '' THEN NULL ELSE CAST (a1.[p] AS REAL) END","col17"
"a1.a","a","Y","None","None","Header","c","","csv","SQL->a1.[a]","col18"
"a1.g","g","Y","None","None","Row","c","","csv","SQL->a1.[g]","col19"
"JOINGRID:"
"FILTERGRID:"
"AND","","a1.g","Is Null","","","","c","csv","SQL->a1.[g]",""
"AND","","f(x)->p",">","0","","","f","csv","SQL->CASE WHEN a1.[p] = '' THEN NULL ELSE CAST (a1.[p] AS REAL) END",""























































































































/END_EMBED
/EMBED=VG2;PrePostQuery_24
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","UnitPPVM_Detail.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","22"
"JOINROWS:","4"
"FILTERROWS:","2"
"COL_ID_COUNTER:","47"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","3"
"","Summary by product_byDLCP.csv a0",""
"","6970Lastlot1.tab a1",""
"","mor_byDLCP.tab a2",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prod","product_group","Y","None","None","Row","c","","csv","SQL->a0.[prod]","col42"
"a0.dlcp","dlcp_2","Y","None","None","Row","c","","csv","SQL->a0.[dlcp]","col47"
"f(x)->CASE WHEN     {dlcp_2} ='FF' THEN 'FF' !!!!!WHEN     {dlcp_2} is null THEN 'FF' !!!!!ELSE 'DF' END","dlcp_join","Y","None","None","Row","C","***","csv","SQL->CASE WHEN     {col47} ='FF' THEN 'FF' !!!!!WHEN     {col47} is null THEN 'FF' !!!!!ELSE 'DF' END","col45"
"f(x)->qtg_m","qtg_m","Y","None","None","Row","n","qtg_m","csv","SQL->CASE WHEN a0.[qtg_m] = '' THEN NULL ELSE CAST (a0.[qtg_m] AS INTEGER) END","col4"
"f(x)->qtg_s","qtg_s","Y","None","None","Row","n","qtg_s","csv","SQL->CASE WHEN a0.[qtg_s] = '' THEN NULL ELSE CAST (a0.[qtg_s] AS INTEGER) END","col5"
"f(x)->Sampling_target","Sampling_target","Y:1","None","None","Row","f","Sampling_target","csv","SQL->CASE WHEN a0.[m_target] = '' THEN NULL ELSE CAST (a0.[m_target] AS REAL) END","col13"
"f(x)->CASE WHEN a0.[ppv_spm] = '' THEN NULL ELSE CAST (a0.[ppv_spm] AS REAL) END","ppvm_mor1","P","None","None","Row","F","***ppvm_mor","csv","SQL->CASE WHEN a0.[ppv_spm] = '' THEN NULL ELSE CAST (a0.[ppv_spm] AS REAL) END","col8"
"f(x)->CASE WHEN a0.[ppv_sps] = '' THEN NULL ELSE CAST (a0.[ppv_sps] AS REAL) END","ppvs_mor1","P","None","None","Row","F","***ppvs_mor","csv","SQL->CASE WHEN a0.[ppv_sps] = '' THEN NULL ELSE CAST (a0.[ppv_sps] AS REAL) END","col9"
"f(x)->Current_Samplingrate","Current_Samplingrate","Y","None","None","Row","f","Current_Samplingrate","csv","SQL->CASE WHEN a0.[ulspm_rate] = '' THEN NULL ELSE CAST (a0.[ulspm_rate] AS REAL) END","col26"
"f(x)->spm_target","spm_target","Y","None","None","Row","f","spm_target","csv","SQL->CASE WHEN a0.[spm_target] = '' THEN NULL ELSE CAST (a0.[spm_target] AS REAL) END","col25"
"a1.prod","prod","Y","None","None","Row","c","","csv","SQL->a1.[prod]","col29"
"a1.dlcp","dlcp","Y","None","None","Row","c","","csv","SQL->a1.[dlcp]","col30"
"f(x)->CASE WHEN  {dlcp} ='FF' THEN 'FF' !!!!!WHEN  {dlcp} is null THEN 'FF' !!!!!ELSE 'DF' END","dlcp1","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col30} ='FF' THEN 'FF' !!!!!WHEN  {col30} is null THEN 'FF' !!!!!ELSE 'DF' END","col44"
"f(x)->IFNULL(CASE WHEN a1.[final_percent] = '' THEN NULL ELSE CAST (a1.[final_percent] AS REAL) END,0)","Latest_lot","Y","None","None","Row","F","***final_percent","csv","SQL->IFNULL(CASE WHEN a1.[final_percent] = '' THEN NULL ELSE CAST (a1.[final_percent] AS REAL) END,0)","col28"
"f(x)->CASE WHEN   {current_samplingrate} = {latest_lot}   THEN 'Y'  ELSE 'N' END","filter","Y","None","None","Row","C","***","@if@1","SQL->CASE WHEN   {col26} = {col28}   THEN 'Y'  ELSE 'N' END","col31"
"a2.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a2.[prodgroup3]","col35"
"a2.dlcp","dlcp_1","Y","None","None","Row","c","","csv","SQL->a2.[dlcp]","col36"
"f(x)->ppv_spm","ppv_spm","Y","None","None","Row","f","ppv_spm","csv","SQL->CASE WHEN a2.[ppv_spm] = '' THEN NULL ELSE CAST (a2.[ppv_spm] AS REAL) END","col37"
"f(x)->ppv_sps","ppv_sps","Y","None","None","Row","f","ppv_sps","csv","SQL->CASE WHEN a2.[ppv_sps] = '' THEN NULL ELSE CAST (a2.[ppv_sps] AS REAL) END","col38"
"f(x)->IFNULL(  {ppv_spm},  {ppvm_mor1})","ppvm_mor","Y:2","None","None","Row","F","***","@if@1","SQL->IFNULL(  {col37},  {col8})","col39"
"f(x)->IFNULL({ppv_sps}, {ppvs_mor1}  )","ppvs_mor","Y:2","None","None","Row","F","***","@if@1","SQL->IFNULL({col38}, {col9}  )","col40"
"f(x)->mor_delta_currentweek","mor_delta_currentweek","Y","None","None","Row","f","mor_delta_currentweek","csv","SQL->CASE WHEN a1.[mor_delta_currentweek] = '' THEN NULL ELSE CAST (a1.[mor_delta_currentweek] AS REAL) END","col41"
"JOINGRID:"
"","","Sqlite->a0.prod                                                                                                    : SQL->{col42}","=","Sqlite->a1.prod                                                                                                    : SQL->{col29}",""
"","","Sqlite->f(x)->dlcp_join                                                                                                    : SQL->{col45}","=","Sqlite->f(x)->dlcp1                                                                                                    : SQL->{col44}",""
"","","Sqlite->a1.dlcp                                                                                                    : SQL->{col30}","=","Sqlite->a2.dlcp                                                                                                    : SQL->{col36}",""
"","","Sqlite->a1.prod                                                                                                    : SQL->{col29}","=","Sqlite->a2.prodgroup3                                                                                                    : SQL->{col35}",""
"FILTERGRID:"
"-- AND","","a0.product_group","Not In","'CMLS102'</comma\>'CMLU42'","","","c","csv","SQL->a0.[product_group]",""
"-- AND","","f(x)->{filter}","=","'Y'","","","cx","@IF@2","SQL->{col31}",""






/END_EMBED
/EMBED=VG2;CDAT_CDATx Wip Summary
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CDATX_summary.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","13"
"JOINROWS:","3"
"FILTERROWS:","9"
"COL_ID_COUNTER:","13"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CDATx Wip Limit file.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"f(x)->lowest_wip","lowest_wip","Y","None","None","Row","f","lowest_wip","csv","SQL->CASE WHEN a0.[lowest_wip] = '' THEN NULL ELSE CAST (a0.[lowest_wip] AS REAL) END","col3"
"f(x)->highest_wip","highest_wip","Y","None","None","Row","f","highest_wip","csv","SQL->CASE WHEN a0.[highest_wip] = '' THEN NULL ELSE CAST (a0.[highest_wip] AS REAL) END","col4"
"a1.lot","lot","N","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a1->f0.lot","col5"
"a1.operation","operation_1","Y","None","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a1->f0.operation","col6"
"a1.prodgroup3","prodgroup3_1","Y","None","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a1->p.prodgroup3","col7"
"f(a1)->Building","BuildingID","P","None","None","Row","x","***Lot attribute (540)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 540 AND la.src_erase_date IS NULL AND rownum <= 1)","col8"
"a1.quantity","quantity","Y","None","Sum","Row","n","The current number of units or wafers or panels in the lot","f_lot","a1->f0.qty1","col9"
"f(x)->CASE WHEN  {buildingid} ='CD1' THEN 'CDATx'ELSE 'CDAT'END","Building","Y","None","None","Row","C","***","@if@1","All->CASE WHEN  {col8} ='CD1' THEN 'CDATx'ELSE 'CDAT'END","col10"
"a0.module","module","Y","None","None","Row","c","","csv","SQL->a0.[module]","col11"
"f(x)->CASE WHEN  {buildingid}='CD6'  THEN 'N'ELSE 'Y'END","filter","Y","None","None","Row","C","***","@if@1","All->CASE WHEN  {col8}='CD6'  THEN 'N'ELSE 'Y'END","col12"
"a0.building","building_1","Y","None","None","Row","c","","csv","SQL->a0.[building]","col13"
"JOINGRID:"
"","","Sqlite->a0.operation                                                                                                    : SQL->{col2}","=","View->a1.operation                                                                                                    : a1->{col6}",""
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col1}","=","View->a1.prodgroup3                                                                                                    : a1->{col7}",""
"","","Sqlite->a0.building                                                                                                    : SQL->{col13}","=","All->f(x)->Building                                                                                                    : All->{col10}",""
"FILTERGRID:"
"AND","","a0.module","=","'STHI'","","","c","csv","SQL->a0.[module]",""
"AND","","a1.terminated","=","'N'","","","c","f_lot","a1->f0.terminated",""
"AND","","a1.quantity",">","0","","","n","f_lot","a1->f0.qty1",""
"AND","","a1.src_erase_date","Is Null","","","","d","f_lot","a1->f0.src_erase_date",""
"AND","","a1.onhold","=","'N'","","","c","f_lot","a1->f0.onhold",""
"AND","","a1.owner","=","'PROD'","","","c","f_lot","a1->f0.owner",""
"AND","","a1.operation","In Temp"," {Sqlite (all)} : Sqlite->a0.operation","","","c","f_lot","a1->f0.operation","SQL->{col2}"
"AND","","a1.prodgroup3","In Temp"," {Sqlite (all)} : Sqlite->a0.prodgroup3","","","c","f_product","a1->p.prodgroup3","SQL->{col1}"
"AND","","f(x)->{filter}","=","'Y'","","","cx","@IF@2","All->{col12}",""



















































































































































/END_EMBED
/EMBED=VG2;Final Summary Table
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CDAT_tranferwip_final.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","9"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","13"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CDATX_summary.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"a0.building","building","Y","None","None","Row","c","","csv","SQL->a0.[building]","col9"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"f(x)->lowest_wip","lowest_wip","Y","None","None","Row","f","lowest_wip","csv","SQL->CASE WHEN a0.[lowest_wip] = '' THEN NULL ELSE CAST (a0.[lowest_wip] AS REAL) END","col3"
"f(x)->highest_wip","highest_wip","Y","None","None","Row","f","highest_wip","csv","SQL->CASE WHEN a0.[highest_wip] = '' THEN NULL ELSE CAST (a0.[highest_wip] AS REAL) END","col4"
"f(x)->CASE WHEN  {quantity} is null  THEN 0 ELSE {quantity} /1000 END","current_wip","Y:1","None","None","Row","F","***quantity","@if@1","SQL->CASE WHEN  {col11} is null  THEN 0 ELSE {col11} /1000 END","col8"
"f(x)->CASE WHEN  {current_wip} < {lowest_wip}  THEN 'UnderBuild' !!!!!WHEN  {current_wip} >  {highest_wip} THEN 'OverBuild' !!!!!ELSE 'Healthy' END","status","Y","None","None","Row","C","***","@if@2","SQL->CASE WHEN  {col8} < {col3}  THEN 'UnderBuild' !!!!!WHEN  {col8} >  {col4} THEN 'OverBuild' !!!!!ELSE 'Healthy' END","col10"
"f(x)->quantity","quantity","N","None","None","Row","f","quantity","csv","SQL->CASE WHEN a0.[quantity] = '' THEN NULL ELSE CAST (a0.[quantity] AS REAL) END","col11"
"a0.module","module","Y","None","None","Row","c","","csv","SQL->a0.[module]","col13"
"JOINGRID:"
"FILTERGRID:"



















































































































































/END_EMBED
/EMBED=VG2;CDAT TO CDATx Lotlist
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CDAT_To_CDATx_lotlist_STHI.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","21"
"JOINROWS:","4"
"FILTERROWS:","12"
"COL_ID_COUNTER:","25"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","CDAT_tranferwip_final.tab a1",""
"","CDAT_tranferwip_final.tab a2",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:0:a0"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->SharePoint:Y@EXEDIR@\PublishToSP.va <~>CDAT_To_CDATx_lotlist_STHI.csv<~> <~>https://content.sp2019.intel.com/sites/CD/CDATwebshare/IonReport/TEST_Goaling_Reports/<~> <~><~> <~><~> "
"UTILITIESDESC:","Publish to SharePoint"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a1.prodgroup3","prodgroup3","Y","Asc","None","Row","c","","csv","SQL->a1.[prodgroup3]","col5"
"a0.operation","operation","Y","None","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a0->f0.operation","col2"
"a1.operation","operation_1","N","None","None","Row","c","","csv","SQL->a1.[operation]","col6"
"a1.building","building","N","None","None","Row","c","","csv","SQL->a1.[building]","col17"
"a0.lot","lot","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a0->f0.lot","col1"
"a0.quantity","quantity","Y","Desc","None","Row","n","The current number of units or wafers or panels in the lot","f_lot","a0->f0.qty1","col3"
"a0.prodgroup3","prodgroup31","N","None","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a0->p.prodgroup3","col4"
"f(a0)->BuildingID","BuildingID","N","None","None","Row","x","***Lot attribute (540)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 540 AND la.src_erase_date IS NULL AND rownum <= 1)","col7"
"f(x)->highest_wip","highest_wip","P","None","None","Row","f","highest_wip","csv","SQL->CASE WHEN a1.[highest_wip] = '' THEN NULL ELSE CAST (a1.[highest_wip] AS REAL) END","col8"
"f(x)->SUM ( {quantity} ) OVER (PARTITION BY  {prodgroup3_1} , {operation}  ORDER BY      {rank} ASC)","sum","N","None","None","Row","N","***","@if@2","All->SUM ( {col3} ) OVER (PARTITION BY  {col5} , {col2}  ORDER BY      {col10} ASC)","col9"
"f(x)->ROW_NUMBER () OVER (PARTITION BY   {prodgroup3_1} ,  {operation}  ORDER BY  {quantity}  DESC)","rank","N","None","None","Row","C","***","f_lot","All->ROW_NUMBER () OVER (PARTITION BY   {col5} ,  {col2}  ORDER BY  {col3}  DESC)","col10"
"f(x)->current_wip","current_wip","P","None","None","Row","f","current_wip","csv","SQL->CASE WHEN a1.[current_wip] = '' THEN NULL ELSE CAST (a1.[current_wip] AS REAL) END","col15"
"f(x)->CASE WHEN  {status} not like 'Ov%' THEN 0 !!!!!ELSE!!!!!( CASE WHEN {current_wip_1} - {highest_wip_1} >= {highest_wip} - {current_wip}  THEN {highest_wip} - {current_wip} ELSE {current_wip_1}- {highest_wip_1}END )END!!!!!!!!!!","delta","N","None","None","Row","F","***","@if@1","SQL->CASE WHEN  {col22} not like 'Ov%' THEN 0 !!!!!ELSE!!!!!( CASE WHEN {col24} - {col25} >= {col8} - {col15}  THEN {col8} - {col15} ELSE {col24}- {col25}END )END!!!!!!!!!!","col16"
"f(x)->{delta} *1000","delta_1","P","None","None","Row","F","***","@if@2","SQL->{col16} *1000","col18"
"f(x)->CASE WHEN  {delta_1} >= {sum}  THEN 'Y' ELSE 'N'END","filter","N","None","None","Row","C","***","@if@3","All->CASE WHEN  {col18} >= {col9}  THEN 'Y' ELSE 'N'END","col19"
"a2.prodgroup3","prodgroup3_1","P","None","None","Row","c","","csv","SQL->a2.[prodgroup3]","col20"
"a2.building","building_1","P","None","None","Row","c","","csv","SQL->a2.[building]","col21"
"a2.status","status","P","None","None","Row","c","","csv","SQL->a2.[status]","col22"
"a2.operation","operation_2","P","None","None","Row","c","","csv","SQL->a2.[operation]","col23"
"f(x)->current_wip_1","current_wip_1","P","None","None","Row","f","current_wip_1","csv","SQL->CASE WHEN a2.[current_wip] = '' THEN NULL ELSE CAST (a2.[current_wip] AS REAL) END","col24"
"f(x)->highest_wip_1","highest_wip_1","P","None","None","Row","f","highest_wip_1","csv","SQL->CASE WHEN a2.[highest_wip] = '' THEN NULL ELSE CAST (a2.[highest_wip] AS REAL) END","col25"
"JOINGRID:"
"","","Sqlite->a1.prodgroup3                                                                                                    : SQL->{col5}","=","View->a0.prodgroup3                                                                                                    : a0->{col4}",""
"","","Sqlite->a1.operation                                                                                                    : SQL->{col6}","=","View->a0.operation                                                                                                    : a0->{col2}",""
"","","Sqlite->a1.prodgroup3                                                                                                    : SQL->{col5}","=","Sqlite->a2.prodgroup3                                                                                                    : SQL->{col20}",""
"","","Sqlite->a1.operation                                                                                                    : SQL->{col6}","=","Sqlite->a2.operation                                                                                                    : SQL->{col23}",""
"FILTERGRID:"
"AND","","a0.terminated","=","'N'","","","c","f_lot","a0->f0.terminated",""
"AND","","a0.quantity",">","0","","","n","f_lot","a0->f0.qty1",""
"AND","","a0.src_erase_date","Is Null","","","","d","f_lot","a0->f0.src_erase_date",""
"AND","","a0.operation","In Temp"," {Sqlite (all)} : Sqlite->a1.operation","","","c","f_lot","a0->f0.operation","SQL->{col6}"
"AND","","a0.onhold","=","'N'","","","c","f_lot","a0->f0.onhold",""
"AND","","a0.owner","=","'PROD'","","","c","f_lot","a0->f0.owner",""
"AND","","a0.prodgroup3","In Temp"," {Sqlite (all)} : Sqlite->a1.prodgroup3","","","c","f_product","a0->p.prodgroup3","SQL->{col5}"
"AND","","f(a0)->{buildingid}","Is Null","","","","cx","@IF@1","a0->{col7}",""
"AND","","a1.building","=","'CDATx'","","","c","csv","SQL->a1.[building]",""
"AND","","f(x)->{filter}","=","'Y'","","","cx","@IF@4","All->{col19}",""
"AND","","a2.building","=","'CDAT'","","","c","csv","SQL->a2.[building]",""
"AND","","a0.movedin","=","'N'","","","c","f_lot","a0->f0.movedin",""































































































/END_EMBED
/EMBED=VG2;PrePostQuery_29
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CDAT_Tox.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","3"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","5"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CDAT_To_CDATx_lotlist_STHI.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.lot","lotcount_tox","Y","None","Count","Row","c","","csv","SQL->a0.[lot]","col1"
"f(x)->quantity","quantity","N","None","Sum","Row","f","quantity","csv","SQL->CASE WHEN a0.[quantity] = '' THEN NULL ELSE CAST (a0.[quantity] AS REAL) END","col4"
"f(x)->{quantity} /1000","quantity_tox","Y:1","None","None","Row","F","***","s+1","SQL->{col4} /1000","col5"
"JOINGRID:"
"FILTERGRID:"



















































































































































/END_EMBED
/EMBED=VG2;CDATx To CDAT Lotlist
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CDATx_To_CDAT_lotlist_STHI.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","5"
"JOINROWS:","0"
"FILTERROWS:","7"
"COL_ID_COUNTER:","19"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:0:a0"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->SharePoint:Y@EXEDIR@\PublishToSP.va <~>CDATx_To_CDAT_lotlist_STHI.csv<~> <~>https://content.sp2019.intel.com/sites/CD/CDATwebshare/IonReport/TEST_Goaling_Reports/<~> <~><~> <~><~>"
"UTILITIESDESC:","Publish to SharePoint"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a0->p.prodgroup3","col4"
"a0.lot","lot","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a0->f0.lot","col1"
"a0.operation","operation","Y","None","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a0->f0.operation","col2"
"a0.quantity","quantity","Y","Desc","None","Row","n","The current number of units or wafers or panels in the lot","f_lot","a0->f0.qty1","col3"
"f(a0)->BuildingID","BuildingID","N","None","None","Row","x","***Lot attribute (540)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 540 AND la.src_erase_date IS NULL AND rownum <= 1)","col7"
"JOINGRID:"
"FILTERGRID:"
"AND","","a0.terminated","=","'N'","","","c","f_lot","a0->f0.terminated",""
"AND","","a0.quantity",">","0","","","n","f_lot","a0->f0.qty1",""
"AND","","a0.src_erase_date","Is Null","","","","d","f_lot","a0->f0.src_erase_date",""
"AND","","a0.onhold","=","'N'","","","c","f_lot","a0->f0.onhold",""
"AND","","a0.owner","=","'PROD'","","","c","f_lot","a0->f0.owner",""
"AND","","f(a0)->{buildingid}","=","'CD1'","","","cx","@IF@1","a0->{col7}",""
"AND","","a0.operation","In","'7300'</comma\>'7906'","","","c","f_lot","a0->f0.operation",""






























































































/END_EMBED
/EMBED=VG2;CDATx To CDAT
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","CDATx_ Tocd.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","3"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","4"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","CDATx_To_CDAT_lotlist_STHI.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.lot","lotcount_tocd","Y","None","Count","Row","c","","csv","SQL->a0.[lot]","col1"
"f(x)->quantity","quantity","N","None","Sum","Row","f","quantity","csv","SQL->CASE WHEN a0.[quantity] = '' THEN NULL ELSE CAST (a0.[quantity] AS REAL) END","col3"
"f(x)->{quantity} /1000","quantity_tocd","Y:1","None","None","Row","F","***","s+1","SQL->{col3} /1000","col4"
"JOINGRID:"
"FILTERGRID:"



















































































































































/END_EMBED
/EMBED=VG2;PrePostQuery_32
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","PPVM_RR_Sort.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","7"
"JOINROWS:","0"
"FILTERROWS:","1"
"COL_ID_COUNTER:","12"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","ULSPM_EUPH Calculation.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prod","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col2"
"a0.dlcp_proc","dlcp_proc","P","None","None","Row","c","","csv","SQL->a0.[dlcp_proc]","col3"
"f(x)->CASE WHEN   {dlcp_proc} like '%UX%'  THEN 'UX' !!!!! WHEN   {dlcp_proc} like '%UV%'  THEN 'UV' !!!!!ELSE 'FF' END","dlcp","Y","None","None","Row","C","***","csv","SQL->CASE WHEN   {col3} like '%UX%'  THEN 'UX' !!!!! WHEN   {col3} like '%UV%'  THEN 'UV' !!!!!ELSE 'FF' END","col12"
"a0.ww","ww","P","None","None","Row","c","","csv","SQL->a0.[ww]","col6"
"f(x)->ulspm ratio","ulspm ratio","P","None","None","Row","f","ulspm ratio","csv","SQL->CASE WHEN a0.[ulspm ratio] = '' THEN NULL ELSE CAST (a0.[ulspm ratio] AS REAL) END","col8"
"f(x)->rr","mor","Y","None","None","Row","f","rr","csv","SQL->CASE WHEN a0.[rr] = '' THEN NULL ELSE CAST (a0.[rr] AS REAL) END","col10"
"f(x)->{ulspm ratio} *100","percent","Y:0","None","None","Row","F","***","@if@1","SQL->{col8} *100","col11"
"JOINGRID:"
"FILTERGRID:"
"AND","","a0.prodgroup3","Not In","'CMLS102'</comma\>'CMLU42'</comma\>'CMLS62'","","","c","csv","SQL->a0.[prodgroup3]",""








































/END_EMBED
/EMBED=VG2;Last Lot PPVM Rate
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","6970Lastlot.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","18"
"JOINROWS:","3"
"FILTERROWS:","8"
"COL_ID_COUNTER:","20"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:0:a0"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","calendar.tab a1",""
"","BP_ByDLCP.csv a2",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prod","Y","None","None","Row","c","Product Classification column.","f_product","a0->p.prodgroup3","col6"
"a0.lot","lot","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a0->f0.lot","col1"
"a0.operation","operation","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a0->f0.operation","col2"
"a0.owner","owner","Y","None","None","Row","c","Identifies the type of lot. E.g., PROD and MW","f_lothist","a0->f0.owner","col3"
"a0.newqty1","newqty1","Y","None","None","Row","n","The number of wafers (or units) in the lot aftrer the last transaction was executed. Ultimately, it will equal the quantity of units in the lot when it is moved out of this operation.","f_lothist","a0->f0.newqty1","col4"
"a0.in_date","in_date","Y","Asc","None","Row","d","The date and time the lot was moved into the operation using the MVIN transaction. Equals zero (0) if th elot was not moved in.","f_lothist","a0->f0.in_date","col10"
"f(a0)->MAX (  {in_date} ) OVER (PARTITION BY  {prod}, {cascading_indicator_1}   )","max_outdate","Y","None","None","Row","D","***","@if@2","a0->MAX (  {col10} ) OVER (PARTITION BY  {col6}, {col16}   )","col8"
"f(a0)->percentage","final_percent","Y","None","None","Row","x","***Lot attribute (6342)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 6342 AND la.src_erase_date IS NULL AND rownum <= 1)","col7"
"a1.ww_current","ww_current","Y","None","None","Row","c","","csv","SQL->a1.[ww_current]","col11"
"f(x)->SUM ( {indicator} ) OVER (PARTITION BY  {prod} )","sum_filter","Y","None","None","Row","F","***","@if@1","All->SUM ( {col17} ) OVER (PARTITION BY  {col6} )","col18"
"a2.prod","product_group_3_1","Y","None","None","Row","c","","csv","SQL->a2.[prod]","col12"
"a2.ww","ww","P","None","None","Row","c","","csv","SQL->a2.[ww]","col13"
"f(x)->mor_delta","mor_delta_currentweek","Y","None","None","Row","f","mor_delta","csv","SQL->CASE WHEN a2.[mor_delta] = '' THEN NULL ELSE CAST (a2.[mor_delta] AS REAL) END","col14"
"f(a0)->'FF'","dlcp","Y","None","None","Row","C","***","@if@1","a0->'FF'","col15"
"f(a0)->CASE WHEN  {final_percent} is null THEN 'CASCADING' ELSE 'NON-CASCADING' END","cascading_indicator_1","Y","None","None","Row","C","***","@if@1","a0->CASE WHEN  {col7} is null THEN 'CASCADING' ELSE 'NON-CASCADING' END","col16"
"f(a0)->CASE WHEN  {final_percent} is null THEN 0 ELSE 1 END","indicator","Y","None","None","Row","F","***","@if@1","a0->CASE WHEN  {col7} is null THEN 0 ELSE 1 END","col17"
"f(x)->CASE WHEN  {sum_filter} >0 and  {cascading_indicator_1} ='NON-CASCADING'  THEN 'Y'!!!!!WHEN  {sum_filter} =0 THEN 'Y'  ELSE  'N' END!!!!!","filter2","Y","None","None","Row","C","***","@if@2","All->CASE WHEN  {col18} >0 and  {col16} ='NON-CASCADING'  THEN 'Y'!!!!!WHEN  {col18} =0 THEN 'Y'  ELSE  'N' END!!!!!","col19"
"f(a0)->CASE WHEN  {max_outdate} =  {in_date} THEN 'Y'  ELSE 'N' END","filter","Y","None","None","Row","C","***","@if@3","a0->CASE WHEN  {col8} =  {col10} THEN 'Y'  ELSE 'N' END","col20"
"JOINGRID:"
"","","View->a0.prodgroup3                                                                                                    : a0->{col6}","<>","Sqlite->a1.ww_current                                                                                                    : SQL->{col11}",""
"","","Sqlite->a1.ww_current                                                                                                    : SQL->{col11}","=","Sqlite->a2.ww                                                                                                    : SQL->{col13}",""
"","","View->a0.prodgroup3                                                                                                    : a0->{col6}","=","Sqlite->a2.prod                                                                                                    : SQL->{col12}",""
"FILTERGRID:"
"AND","","a0.owner","=","'PROD'","","","c","f_lothist","a0->f0.owner",""
"AND","","a0.newqty1",">","700","","","n","f_lothist","a0->f0.newqty1",""
"AND","","a0.operation","In","'6970'</comma\>'6452'","","","c","f_lothist","a0->f0.operation",""
"AND","","a0.in_date",">=","SPF_FN$LWW(0,07:00)","","","d","f_lothist","a0->f0.in_date",""
"AND","","a0.prevout_date","Is Not Null","","",".","d","f_lothist","a0->f0.prevout_date",""
"AND","","a0.prodgroup3","In Group(!=)",".\Row_data_wip_byDLCP.tab:2. product_group_3","","","c","f_product","a0->p.prodgroup3",""
"AND","","f(a0)->{filter_1}","=","'Y'","","","cx","@IF@4","a0->{col20}",""
"AND","","f(x)->{filter}","=","'Y'","","","cx","@IF@3","All->{col19}",""







/END_EMBED
/EMBED=VG2;PrePostQuery_34
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Row_data_wip_byDLCP_sort.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","29"
"JOINROWS:","10"
"FILTERROWS:","8"
"COL_ID_COUNTER:","56"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","4"
"","calendar.tab a4",""
"","BP_ByDLCP.csv a1",""
"","BP_ByDLCP.csv a5",""
"","cell_info.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:9:a2"
"TABLEGRID:","1"
"","Antares_Cell_Operation_CutOff",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.ANTARES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","2:0:a3"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a4.ww_current","ww_current","Y","None","None","Row","c","","csv","SQL->a4.[ww_current]","col39"
"a0.product_group_3","product_group_3","Y","None","None","Row","c","","csv","SQL->a0.[product_group_3]","col1"
"a0.sub_cell","sub_cell","Y","None","None","Row","c","","csv","SQL->a0.[sub_cell]","col2"
"a0.sub_cell_desc","sub_cell_desc","Y","None","None","Row","c","","csv","SQL->a0.[sub_cell_desc]","col3"
"a0.dlcp1","dlcp_join","Y","None","None","Row","c","","csv","SQL->a0.[dlcp1]","col45"
"a1.prod","prod","Y","None","None","Row","c","","csv","SQL->a1.[prod]","col5"
"a1.ww","ww","Y","None","None","Row","c","","csv","SQL->a1.[ww]","col6"
"a1.dlcp","dlcp_1","Y","None","None","Row","c","","csv","SQL->a1.[dlcp]","col7"
"a1.bp","bp","Y","None","None","Row","c","","csv","SQL->a1.[bp]","col8"
"f(x)->mor_delta","mor_delta_currentweek","Y","None","None","Row","f","mor_delta","csv","SQL->CASE WHEN a1.[mor_delta] = '' THEN NULL ELSE CAST (a1.[mor_delta] AS REAL) END","col55"
"a2.cell","cell","Y","None","None","Row","c","","celloperationcutoff","a2->a0.[Cell]","col20"
"a2.operation","operation","Y","None","None","Row","c","Ex: 0009","celloperationcutoff","a2->a0.[Operation]","col21"
"a2.sdd_sequence","sdd_sequence","Y","None","None","Row","n","Ex: 10, 120","celloperationcutoff","a2->a0.[SddSeq]","col22"
"a2.yield","yield","Y","None","None","Row","f","Ex: 1.0000","celloperationcutoff","a2->a0.[Yield]","col34"
"a3.lot","lot","P","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a3->f0.lot","col26"
"a3.operation","operation_1","Y","None","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a3->f0.operation","col27"
"a3.owner","owner","Y","None","None","Row","c","Identifies the owner of the lot. Valid values include: ENG, PROD, TW. This maps to MES300 LotTypes","f_lot","a3->f0.owner","col28"
"a3.quantity","quantity","Y","None","None|Sum","Row","n","The current number of units or wafers or panels in the lot","f_lot","a3->f0.qty1","col29"
"f(a3)->Maincell","Maincell","P","None","None","Row","x","***Lot attribute (1833)","f_lot","a3->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1833 AND la.src_erase_date IS NULL AND rownum <= 1)","col30"
"f(a3)->Subcell","Subcell","P","None","None","Row","x","***Lot attribute (1834)","f_lot","a3->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1834 AND la.src_erase_date IS NULL AND rownum <= 1)","col31"
"f(a3)->{maincell}  ||  SUBSTR( {subcell} ,-1,1)","subcell_ion","Y","None","None","Row","C","***","@if@1","a3->{col30}  ||  SUBSTR( {col31} ,-1,1)","col32"
"a3.prodgroup3","prodgroup3","Y","None","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a3->p.prodgroup3","col33"
"a4.next_ww","next_ww","Y","None","None","Row","c","","csv","SQL->a4.[next_ww]","col40"
"a5.ww","ww_1","P","None","None","Row","c","","csv","SQL->a5.[ww]","col41"
"a5.bp","bp_next_week","Y","None","None","Row","c","","csv","SQL->a5.[bp]","col42"
"a5.prod","prod_1","Y","None","None","Row","c","","csv","SQL->a5.[prod]","col43"
"a5.dlcp","dlcp_2","Y","None","None","Row","c","","csv","SQL->a5.[dlcp]","col44"
"a5.mor_delta","mor_delta_nextweek","Y","None","None","Row","c","","csv","SQL->a5.[mor_delta]","col56"
"a0.hb1","hb1","Y","None","None","Row","c","","csv","SQL->a0.[hb1]","col54"
"JOINGRID:"
"","","Sqlite->a1.prod                                                                                                    : SQL->{col5}","=","Sqlite->a0.product_group_3                                                                                                    : SQL->{col1}",""
"","","Sqlite->a1.dlcp                                                                                                    : SQL->{col7}","=","Sqlite->a0.dlcp1                                                                                                    : SQL->{col45}",""
"","","Sqlite->a0.sub_cell                                                                                                    : SQL->{col2}","=","View->a2.cell                                                                                                    : a2->{col20}",""
"","","View->a2.cell                                                                                                    : a2->{col20}","=","View->f(a3)->subcell_ion                                                                                                    : a3->{col32}",""
"","","Sqlite->a0.product_group_3                                                                                                    : SQL->{col1}","=","View->a3.prodgroup3                                                                                                    : a3->{col33}",""
"","","View->a2.operation                                                                                                    : a2->{col21}","=","View->a3.operation                                                                                                    : a3->{col27}",""
"","","Sqlite->a4.ww_current                                                                                                    : SQL->{col39}","=","Sqlite->a1.ww                                                                                                    : SQL->{col6}",""
"","","Sqlite->a4.next_ww                                                                                                    : SQL->{col40}","=","Sqlite->a5.ww                                                                                                    : SQL->{col41}",""
"","","Sqlite->a1.prod                                                                                                    : SQL->{col5}","=","Sqlite->a5.prod                                                                                                    : SQL->{col43}",""
"","","Sqlite->a1.dlcp                                                                                                    : SQL->{col7}","=","Sqlite->a5.dlcp                                                                                                    : SQL->{col44}",""
"FILTERGRID:"
"AND","","a2.cell","In Temp"," {Sqlite (all)} : Sqlite->a0.sub_cell","",".","c","celloperationcutoff","a2->a0.[Cell]","SQL->{col2}"
"AND","","a3.terminated","=","'N'","","","c","f_lot","a3->f0.terminated",""
"AND","","a3.quantity",">","0","","","n","f_lot","a3->f0.qty1",""
"AND","","a3.src_erase_date","Is Null","","","","d","f_lot","a3->f0.src_erase_date",""
"AND","","a3.owner","=","'PROD'","","","c","f_lot","a3->f0.owner",""
"AND","","a3.at_phq","=","'N'","","","c","f_lot","a3->decode(f0.create_data1, NULL, 'N', 'Y')",""
"AND","","a3.at_shippable1","=","'Y'","","","c","f_lot","a3->CASE WHEN SUBSTR(f0.create_data1, 1, 1) IN (7,6,5,4) THEN 'N' ELSE 'Y' END",""
"AND","","a1.bp","Is Not Null","","","","c","csv","SQL->a1.[bp]",""











/END_EMBED
/EMBED=VG2;PrePostQuery_35
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Wip_ByDLCP_Sort.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","14"
"JOINROWS:","2"
"FILTERROWS:","0"
"COL_ID_COUNTER:","25"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","Row_data_wip_byDLCP.tab a0",""
"","Wip_ByDLCP_Sort1.tab a1",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.product_group_3","product_group_3","Y","Asc","None","Row","c","","csv","SQL->a0.[product_group_3]","col1"
"a0.sub_cell","sub_cell","Y","Asc","None","Row","c","","csv","SQL->a0.[sub_cell]","col2"
"a0.dlcp_1","dlcp","Y","Asc","None","Row","c","","csv","SQL->a0.[dlcp_1]","col3"
"f(x)->bp_current_week","bp_current_week","Y","None","None","Row","f","bp_current_week","csv","SQL->CASE WHEN a0.[bp] = '' THEN NULL ELSE CAST (a0.[bp] AS REAL) END","col4"
"f(x)->IFNULL(CASE WHEN a0.[bp_next_week] = '' THEN NULL ELSE CAST (a0.[bp_next_week] AS REAL) END,0)","bp_next_week","Y","None","None","Row","F","***bp_next_week","csv","SQL->IFNULL(CASE WHEN a0.[bp_next_week] = '' THEN NULL ELSE CAST (a0.[bp_next_week] AS REAL) END,0)","col17"
"f(x)->sdd_sequence","sdd_sequence","Y","Asc","None","Row","f","sdd_sequence","csv","SQL->CASE WHEN a0.[sdd_sequence] = '' THEN NULL ELSE CAST (a0.[sdd_sequence] AS REAL) END","col6"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col7"
"f(x)->IFNULL(CASE WHEN a0.[quantity] = '' THEN NULL ELSE CAST (a0.[quantity] AS REAL) END,0)","quantity","Y","None","None","Row","F","***quantity","csv","SQL->IFNULL(CASE WHEN a0.[quantity] = '' THEN NULL ELSE CAST (a0.[quantity] AS REAL) END,0)","col5"
"a1.product_group_3","product_group_3_1","Y","None","None","Row","c","","csv","SQL->a1.[product_group_3]","col18"
"a1.dlcp","dlcp_1","Y","None","None","Row","c","","csv","SQL->a1.[dlcp]","col19"
"f(x)->newqty1","newqty1","Y","None","Sum","Row","f","newqty1","csv","SQL->CASE WHEN a1.[newqty1] = '' THEN NULL ELSE CAST (a1.[newqty1] AS REAL) END","col20"
"a0.yield","yield","Y","None","None","Row","c","","csv","SQL->a0.[yield]","col22"
"a0.hb1","hb1","Y","None","None","Row","c","","csv","SQL->a0.[hb1]","col23"
"f(x)->mor_delta_currentweek","mor_delta_currentweek","Y","None","None","Row","f","mor_delta_currentweek","csv","SQL->CASE WHEN a0.[mor_delta_currentweek] = '' THEN NULL ELSE CAST (a0.[mor_delta_currentweek] AS REAL) END","col24"
"JOINGRID:"
"","","Sqlite->a0.product_group_3                                                                                                    : SQL->{col1}","=","Sqlite->a1.product_group_3                                                                                                    : SQL->{col18}",""
"","","Sqlite->a0.dlcp_1                                                                                                    : SQL->{col3}","=","Sqlite->a1.dlcp                                                                                                    : SQL->{col19}",""
"FILTERGRID:"
















































/END_EMBED
/EMBED=VG2;PrePostQuery_36
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","ByDLCP_QTG.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","19"
"JOINROWS:","2"
"FILTERROWS:","2"
"COL_ID_COUNTER:","23"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","ByDLCP_QTG1.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:9:a1"
"TABLEGRID:","1"
"","Antares_Area_Section_Operation",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.ANTARES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Copy:Y@EXEDIR@\SPFCopy.bat <~>ByDLCP_QTG.tab<~> <~>\\cdATSHFS.intel.com\CDATAnalysis$\MAOATM\WangQi4\<~> <~>N<~>"
"UTILITIESDESC:","Copy Files/Folders"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.product_group_3","product_group_3","Y","Asc","None","Row","c","","csv","SQL->a0.[product_group_3]","col1"
"a0.dlcp","dlcp","Y","Asc","None","Row","c","","csv","SQL->a0.[dlcp]","col2"
"f(x)->bp_current_week","bp_current_week","Y","None","None","Row","f","bp_current_week","csv","SQL->CASE WHEN a0.[bp_current_week] = '' THEN NULL ELSE CAST (a0.[bp_current_week] AS REAL) END","col3"
"f(x)->bp_next_week","bp_next_week","Y","None","None","Row","f","bp_next_week","csv","SQL->CASE WHEN a0.[bp_next_week] = '' THEN NULL ELSE CAST (a0.[bp_next_week] AS REAL) END","col4"
"f(x)->sdd_sequence","sdd_sequence","Y","Asc","None","Row","f","sdd_sequence","csv","SQL->CASE WHEN a0.[sdd_sequence] = '' THEN NULL ELSE CAST (a0.[sdd_sequence] AS REAL) END","col6"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col7"
"f(x)->quantity","quantity","Y","None","None","Row","f","quantity","csv","SQL->CASE WHEN a0.[quantity] = '' THEN NULL ELSE CAST (a0.[quantity] AS REAL) END","col10"
"f(x)->IFNULL(CASE WHEN a0.[newqty1] = '' THEN NULL ELSE CAST (a0.[newqty1] AS REAL) END,0)","Shipout","Y","None","None","Row","F","***newqty1","csv","SQL->IFNULL(CASE WHEN a0.[newqty1] = '' THEN NULL ELSE CAST (a0.[newqty1] AS REAL) END,0)","col8"
"f(x)->SUM ( {quantity}* {yield_final} ) OVER (PARTITION BY  {product_group_3} , {dlcp} ORDER BY  {sdd_sequence}  DESC)","usable_wip","Y","None","None","Row","F","***","@if@3","SQL->SUM ( {col10}* {col16} ) OVER (PARTITION BY  {col1} , {col2} ORDER BY  {col6}  DESC)","col11"
"f(x)->LEAD-SPF ( ({bp_current_week} *1000- {shipout} - {usable_wip})  ) OVER (PARTITION BY  {product_group_3}, {dlcp}  ORDER BY  {sdd_sequence}  ASC)","qtg1_o","Y","None","None","Row","F","***","@if@4","SQL->LEAD-SPF ( ({col3} *1000- {col8} - {col11})  ) OVER (PARTITION BY  {col1}, {col2}  ORDER BY  {col6}  ASC)","col12"
"f(x)->yield","yield","Y","None","None","Row","f","yield","csv","SQL->CASE WHEN a0.[yield] = '' THEN NULL ELSE CAST (a0.[yield] AS REAL) END","col13"
"f(x)->EXP( SUM ( LOG( {yield} )  ) OVER (PARTITION BY  {product_group_3} , {dlcp} ORDER BY  {sdd_sequence}  DESC) )","yield_final","Y","None","None","Row","F","***","@if@1","SQL->EXP( SUM ( LOG( {col13} )  ) OVER (PARTITION BY  {col1} , {col2} ORDER BY  {col6}  DESC) )","col16"
"f(x)->CASE WHEN  {qtg1_o} <0 THEN  {qtg1_o} ELSE  {qtg1_o} /   {yield_final} END !!!!!","qtg1","Y","None","None","Row","F","***","@if@5","SQL->CASE WHEN  {col12} <0 THEN  {col12} ELSE  {col12} /   {col16} END !!!!!","col14"
"f(x)->{qtg1} + ({bp_next_week}*1000)","qtg2","Y","None","None","Row","F","***","@if@6","SQL->{col14} + ({col4}*1000)","col15"
"f(x)->mor_delta_currentweek","mor_delta_currentweek","Y","None","None","Row","f","mor_delta_currentweek","csv","SQL->CASE WHEN a0.[mor_delta_currentweek] = '' THEN NULL ELSE CAST (a0.[mor_delta_currentweek] AS REAL) END","col19"
"a1.area_section","area_section","P","None","None","Row","c","Section name with Area Section Type","qps","a1->Qps.Area_Section","col20"
"a1.operation","operation_1","P","None","None","Row","c","Operation. Eg: 0010","qps","a1->Qps.Operation","col21"
"a1.stg1","stg1","Y","None","None","Row","f","","qps","a1->Qps.STG1","col22"
"a1.stg2","stg2","Y","None","None","Row","f","","qps","a1->Qps.STG2","col23"
"JOINGRID:"
"","","Sqlite->a0.product_group_3                                                                                                    : SQL->{col1}","=","View->a1.area_section                                                                                                    : a1->{col20}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col7}","=","View->a1.operation                                                                                                    : a1->{col21}",""
"FILTERGRID:"
"AND","","a1.area_type","Like","'L1%'","",".","c","qps","a1->Qps.Area_Type",""
"AND","","a1.area_section_type","=","'PG'","",".","c","qps","a1->Qps.Area_Section_Type",""























/END_EMBED
/EMBED=VG2;PrePostQuery_37
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Wip_ByDLCP_Sort1.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","12"
"JOINROWS:","2"
"FILTERROWS:","4"
"COL_ID_COUNTER:","19"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","Row_data_wip_byDLCP.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.product_group_3","product_group_31","Y","Asc","None","Row","c","","csv","SQL->a0.[product_group_3]","col1"
"a0.sub_cell","sub_cell","Y","Asc","None","Row","c","","csv","SQL->a0.[sub_cell]","col2"
"a0.dlcp_1","dlcp","Y","Asc","None","Row","c","","csv","SQL->a0.[dlcp_1]","col3"
"f(x)->bp_current_week","bp_current_week","Y","None","None","Row","f","bp_current_week","csv","SQL->CASE WHEN a0.[bp] = '' THEN NULL ELSE CAST (a0.[bp] AS REAL) END","col4"
"f(x)->IFNULL(CASE WHEN a0.[bp_next_week] = '' THEN NULL ELSE CAST (a0.[bp_next_week] AS REAL) END,0)","bp_next_week","Y","None","None","Row","F","***bp_next_week","csv","SQL->IFNULL(CASE WHEN a0.[bp_next_week] = '' THEN NULL ELSE CAST (a0.[bp_next_week] AS REAL) END,0)","col17"
"a1.lot","lot","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a1->f0.lot","col8"
"a1.operation","operation_1","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a1->f0.operation","col9"
"a1.newqty1","newqty1","Y","None","None","Row","n","The number of wafers (or units) in the lot aftrer the last transaction was executed. Ultimately, it will equal the quantity of units in the lot when it is moved out of this operation.","f_lothist","a1->f0.newqty1","col11"
"a1.prodgroup3","product_group_3","Y","None","None","Row","c","Product Classification column.","f_product","a1->p.prodgroup3","col12"
"f(a1)->maincell","maincell","P","None","None","Row","x","***Lot attribute (1833)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 1833 AND la.src_erase_date IS NULL AND rownum <= 1)","col13"
"f(a1)->subcell","subcell","P","None","None","Row","x","***Lot attribute (1834)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 1834 AND la.src_erase_date IS NULL AND rownum <= 1)","col14"
"f(a1)->{maincell}  ||  SUBSTR( {subcell} ,-1,1)","subcell_join","Y","None","None","Row","C","***","@if@1","a1->{col13}  ||  SUBSTR( {col14} ,-1,1)","col15"
"JOINGRID:"
"","","Sqlite->a0.product_group_3                                                                                                    : SQL->{col1}","=","View->a1.prodgroup3                                                                                                    : a1->{col12}",""
"","","Sqlite->a0.sub_cell                                                                                                    : SQL->{col2}","=","View->f(a1)->subcell_join                                                                                                    : a1->{col15}",""
"FILTERGRID:"
"AND","","a1.operation","=","'7399'","","","c","f_lothist","a1->f0.operation",""
"AND","","a1.owner","=","'PROD'","","","c","f_lothist","a1->f0.owner",""
"AND","","a1.out_date",">=","SPF_FN$LWW(0,19:00)","",".","d","f_lothist","a1->f0.out_date",""
"AND","","a1.prodgroup3","In Group",".\Row_data_wip_byDLCP.tab:2. product_group_3","","","c","f_product","a1->p.prodgroup3",""
























































/END_EMBED
/EMBED=VG2;PrePostQuery_38
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","mor_sort_byDLCP.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","9"
"JOINROWS:","0"
"FILTERROWS:","1"
"COL_ID_COUNTER:","23"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","SF.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>mor_sort.tab<~> <~>mor_sort_byDLCP.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"a0.prod1","prod1","Y","None","None","Row","c","","csv","SQL->a0.[prod1]","col2"
"f(x)->IFNULL(CASE WHEN a0.[hb1] = '' THEN NULL ELSE CAST (a0.[hb1] AS REAL) END,0)","hb1","N","None","None","Row","F","***hb1","csv","SQL->IFNULL(CASE WHEN a0.[hb1] = '' THEN NULL ELSE CAST (a0.[hb1] AS REAL) END,0)","col4"
"f(x)->CASE WHEN  {dlcp}='UX'  THEN 'UX' !!!!! WHEN  {dlcp}='UV'  THEN 'UV' !!!!!ELSE 'FF' END","dlcp","Y","None","None","Row","C","***","","SQL->CASE WHEN  {col9}='UX'  THEN 'UX' !!!!! WHEN  {col9}='UV'  THEN 'UV' !!!!!ELSE 'FF' END","col22"
"a0.dlcp","dlcp1","P","None","None","Row","c","","csv","SQL->a0.[dlcp]","col9"
"a0.prod","prod","Y","None","None","Row","c","","csv","SQL->a0.[prod]","col10"
"f(x)->mor","mor_sort","Y","None","None","Row","f","mor","csv","SQL->CASE WHEN a0.[mor] = '' THEN NULL ELSE CAST (a0.[mor] AS REAL) END","col12"
"a0.operationgroup","operation_group","Y","None","None","Row","c","","csv","SQL->a0.[operationgroup]","col15"
"a0.a","a","Y","None","None","Row","c","","csv","SQL->a0.[a]","col23"
"JOINGRID:"
"FILTERGRID:"
"AND","","a0.prodgroup3","In Group",".\Row_data_wip_byDLCP.tab:2","","","c","csv","SQL->a0.[prodgroup3]",""
























































/END_EMBED
/EMBED=VG2;PrePostQuery_39
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","DMx efficiency_bydlcp.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","12"
"JOINROWS:","3"
"FILTERROWS:","3"
"COL_ID_COUNTER:","17"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","3"
"","AOT pure test.tab a0",""
"","calendar.tab a1",""
"","cell_info.tab a2",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>DMx efficiency.csv<~> <~>DMx efficiency_bydlcp.csv<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prod","Y","Asc","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"a0.operation","operation_1","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col2"
"f(x)->total_good","total_good","Y","None","Sum","Row","f","total_good","csv","SQL->CASE WHEN a0.[total_good] = '' THEN NULL ELSE CAST (a0.[total_good] AS REAL) END","col3"
"a0.entity","entity","N","None","None","Row","c","","csv","SQL->a0.[entity]","col4"
"f(x)->COUNT (DISTINCT  {entity} ) OVER (PARTITION BY  {prod}  )","count","Y","None","None","Row","C","***","csv","SQL->COUNT (DISTINCT  {col4} ) OVER (PARTITION BY  {col1}  )","col5"
"f(x)->start_date","start_date","N","None","None","Row","d","start_date","csv","SQL->CASE WHEN a1.[start_date] = '' THEN NULL ELSE CAST (a1.[start_date] AS TEXT) END","col7"
"f(x)->collection_time","collection_time","N","None","None","Row","d","collection_time","csv","SQL->CASE WHEN a0.[collection_time] = '' THEN NULL ELSE CAST (a0.[collection_time] AS TEXT) END","col9"
"f(x)->CASE WHEN  {collection_time} >=  {start_date}  THEN 'Y' ELSE 'N' END","filter","N","None","None","Row","C","***","@if@1","SQL->CASE WHEN  {col9} >=  {col7}  THEN 'Y' ELSE 'N' END","col10"
"a0.subcell_final","subcell_final","P","None","None","Row","c","","csv","SQL->a0.[subcell_final]","col11"
"a2.product_group_3","product_group_3","P","None","None","Row","c","","csv","SQL->a2.[product_group_3]","col12"
"a2.sub_cell","sub_cell","P","None","None","Row","c","","csv","SQL->a2.[sub_cell]","col13"
"a2.dlcp1","dlcp","Y","None","None","Row","c","","csv","SQL->a2.[dlcp1]","col17"
"JOINGRID:"
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col1}","<>","Sqlite->f(x)->start_date                                                                                                    : SQL->{col7}",""
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col1}","=","Sqlite->a2.product_group_3                                                                                                    : SQL->{col12}",""
"","","Sqlite->a0.subcell_final                                                                                                    : SQL->{col11}","=","Sqlite->a2.sub_cell                                                                                                    : SQL->{col13}",""
"FILTERGRID:"
"AND","","f(x)->{filter}","=","'Y'","","","cx","@IF@2","SQL->{col10}",""
"AND","","a0.prodgroup3","In Group",".\Row_data_wip_byDLCP.tab:2","","","c","csv","SQL->a0.[prodgroup3]",""
"AND","","a0.owner","=","'PROD'","","","c","csv","SQL->a0.[owner]",""











































/END_EMBED
/EMBED=VG2;PrePostQuery_40
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","6970Lastlot_byDLCP.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","20"
"JOINROWS:","4"
"FILTERROWS:","8"
"COL_ID_COUNTER:","25"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","ByDLCP_QTG.tab a2",""
"","cell_info.tab a1",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:0:a0"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>6970Lastlot.tab<~> <~>6970Lastlot_byDLCP.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Write-File:YMyInput.tab<SOF><{><}>dlcp	ww_current	prod	dlcp_1<{><}>xx	xx	xx	xx"
"UTILITIESDESC:","Write Text to a file. Optionally use <EOF> to mark end of file"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>6970Lastlot.tab<~> <~>MyInput.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","product_group_3_1","Y","None","None","Row","c","Product Classification column.","f_product","a0->p.prodgroup3","col6"
"a0.lot","lot","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a0->f0.lot","col1"
"a0.operation","operation","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a0->f0.operation","col2"
"a0.owner","owner","Y","None","None","Row","c","Identifies the type of lot. E.g., PROD and MW","f_lothist","a0->f0.owner","col3"
"a0.newqty1","newqty1","Y","None","None","Row","n","The number of wafers (or units) in the lot aftrer the last transaction was executed. Ultimately, it will equal the quantity of units in the lot when it is moved out of this operation.","f_lothist","a0->f0.newqty1","col4"
"a0.in_date","in_date","Y","Asc","None","Row","d","The date and time the lot was moved into the operation using the MVIN transaction. Equals zero (0) if th elot was not moved in.","f_lothist","a0->f0.in_date","col10"
"f(x)->MAX (  {in_date} ) OVER (PARTITION BY  {product_group_3_1}, {dlcp},   {cascading_indicator_1} )","max_outdate","Y","None","None","Row","H","***","@if@2","All->MAX (  {col10} ) OVER (PARTITION BY  {col6}, {col16},   {col25} )","col17"
"f(a0)->percentage","final_percent","Y","None","None","Row","x","***Lot attribute (6342)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 6342 AND la.src_erase_date IS NULL AND rownum <= 1)","col7"
"f(a0)->CASE WHEN  {final_percent} is null THEN 'CASCADING' ELSE 'NON-CASCADING' END","cascading_indicator_1","Y","None","None","Row","C","***","@if@1","a0->CASE WHEN  {col7} is null THEN 'CASCADING' ELSE 'NON-CASCADING' END","col25"
"f(x)->CASE WHEN  {max_outdate} is null THEN 'Y'!!!!!WHEN  {max_outdate}  =  {in_date} THEN 'Y' ELSE 'N' END","filter","Y","None","None","Row","C","***","@if@4","All->CASE WHEN  {col17} is null THEN 'Y'!!!!!WHEN  {col17}  =  {col10} THEN 'Y' ELSE 'N' END","col18"
"f(a0)->maincell","maincell","P","None","None","Row","x","***Lot attribute (1833)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 1833 AND la.src_erase_date IS NULL AND rownum <= 1)","col11"
"f(a0)->subcell","subcell","P","None","None","Row","x","***Lot attribute (1834)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 1834 AND la.src_erase_date IS NULL AND rownum <= 1)","col12"
"f(a0)->{maincell}  ||  SUBSTR( {subcell} ,-1,1)","subcell_final","P","None","None","Row","C","***","@if@1","a0->{col11}  ||  SUBSTR( {col12} ,-1,1)","col13"
"a1.product_group_3","product_group_3","P","None","None","Row","c","","csv","SQL->a1.[product_group_3]","col14"
"a1.sub_cell","sub_cell","P","None","None","Row","c","","csv","SQL->a1.[sub_cell]","col15"
"a1.dlcp1","dlcp","Y","None","None","Row","c","","csv","SQL->a1.[dlcp1]","col16"
"a1.ww_current","ww_current","Y","None","None","Row","c","","csv","SQL->a1.[ww_current]","col22"
"a2.product_group_3","prod","Y","None","None","Row","c","","csv","SQL->a2.[product_group_3]","col19"
"f(x)->IFNULL(CASE WHEN a2.[mor_delta_currentweek] = '' THEN NULL ELSE CAST (a2.[mor_delta_currentweek] AS REAL) END,0)","mor_delta_currentweek","Y","None","None","Row","F","***mor_delta_currentweek","csv","SQL->IFNULL(CASE WHEN a2.[mor_delta_currentweek] = '' THEN NULL ELSE CAST (a2.[mor_delta_currentweek] AS REAL) END,0)","col20"
"a2.dlcp","dlcp_1","Y","None","None","Row","c","","csv","SQL->a2.[dlcp]","col21"
"JOINGRID:"
"","","Sqlite->a1.product_group_3                                                                                                    : SQL->{col14}","=","View->a0.prodgroup3                                                                                                    : a0->{col6}",""
"","","View->f(a0)->subcell_final                                                                                                    : a0->{col13}","=","Sqlite->a1.sub_cell                                                                                                    : SQL->{col15}",""
"","","Sqlite->a1.product_group_3                                                                                                    : SQL->{col14}","=","Sqlite->a2.product_group_3                                                                                                    : SQL->{col19}",""
"","","Sqlite->a1.dlcp1                                                                                                    : SQL->{col16}","=","Sqlite->a2.dlcp                                                                                                    : SQL->{col21}",""
"FILTERGRID:"
"AND","","a0.owner","=","'PROD'","","","c","f_lothist","a0->f0.owner",""
"AND","","a0.newqty1",">","700","","","n","f_lothist","a0->f0.newqty1",""
"AND","","a0.operation","In","'6970'</comma\>'6452'","","","c","f_lothist","a0->f0.operation",""
"AND","","a0.in_date",">=","SPF_FN$LWW(0,07:00)","","","d","f_lothist","a0->f0.in_date",""
"AND","","a0.prevout_date","Is Not Null","","",".","d","f_lothist","a0->f0.prevout_date",""
"AND","","a0.prodgroup3","In Group",".\Row_data_wip_byDLCP.tab:2","","","c","f_product","a0->p.prodgroup3",""
"AND","","f(x)->{filter}","=","'Y'","","","cx","@IF@5","All->{col18}",""
"AND","","f(a0)->{cascading_indicator_1}","!=","'CASCADING'","","","cx","@IF@2","a0->{col25}",""





































/END_EMBED
/EMBED=VG2;PrePostQuery_41
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Final_report1_ByDLCP.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","47"
"JOINROWS:","19"
"FILTERROWS:","1"
"COL_ID_COUNTER:","134"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","9"
"","sthiprod.tab a0",""
"","calendar.tab a4",""
"","DMx efficiency.csv a1",""
"","mor_sort.tab a5",""
"","Row_data_wip_byDLCP.tab a2",""
"","ByDLCP_QTG.tab a3",""
"","QTG_WIP.tab a6",""
"","SFGI_Wip_byDLCP.tab a7",""
"","STHI_Pure_1.tab a8",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>Final_report1.tab<~> <~>Final_report1_ByDLCP.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","Asc","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"f(x)->CASE WHEN  {prodgroup3} like 'WHLU42%' THEN 'WHLU42'!!!!!WHEN  {prodgroup3} like 'AMLY22%' THEN 'AMLY22'!!!!!ELSE  {prodgroup3} END","prod","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col1} like 'WHLU42%' THEN 'WHLU42'!!!!!WHEN  {col1} like 'AMLY22%' THEN 'AMLY22'!!!!!ELSE  {col1} END","col12"
"a0.prodgroup3","prod_2","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col108"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col62"
"a0.dlcp_final","dlcp_final","Y","None","None","Row","c","","csv","SQL->a0.[dlcp_final]","col103"
"f(x)->qtg","qtg","Y","None","None","Row","f","qtg","csv","SQL->CASE WHEN a0.[qtg] = '' THEN NULL ELSE CAST (a0.[qtg] AS REAL) END","col32"
"a4.www","www","Y","None","None","Row","c","","csv","SQL->a4.[www]","col22"
"a0.ppvtype","ppvtype","Y","None","None","Row","c","","csv","SQL->a0.[ppvtype]","col63"
"a1.prod","prod_1","N","None","None","Row","c","","csv","SQL->a1.[prod]","col68"
"a1.operation_1","operation_1_1","N","None","None","Row","c","","csv","SQL->a1.[operation_1]","col69"
"a1.dlcp","dlcp","P","None","None","Row","c","","csv","SQL->a1.[dlcp]","col109"
"f(x)->total_good","total_good","Y","None","None","Row","f","total_good","csv","SQL->CASE WHEN a1.[total_good] = '' THEN NULL ELSE CAST (a1.[total_good] AS REAL) END","col70"
"f(x)->CASE WHEN    {operation_1_1} in ('7980') THEN '7899' !!!!!WHEN    {operation_1_1} in ('6452') THEN '6970' !!!!!ELSE    {operation_1_1} END","a1_operation","N","None","None","Row","C","***","csv","SQL->CASE WHEN    {col69} in ('7980') THEN '7899' !!!!!WHEN    {col69} in ('6452') THEN '6970' !!!!!ELSE    {col69} END","col71"
"f(x)->final_mor","final_mor","Y","None","None","Row","f","final_mor","csv","SQL->CASE WHEN a0.[final_mor] = '' THEN NULL ELSE CAST (a0.[final_mor] AS REAL) END","col72"
"a5.prod1","prod1","N","None","None","Row","c","","csv","SQL->a5.[prod1]","col73"
"f(x)->mor_sort","mor_sort","Y","None","None","Row","f","mor_sort","csv","SQL->CASE WHEN a5.[mor_sort] = '' THEN NULL ELSE CAST (a5.[mor_sort] AS REAL) END","col74"
"a5.operation_group","operation_group","N","None","None","Row","c","","csv","SQL->a5.[operation_group]","col75"
"f(x)->CASE WHEN  {operation_group} ='PPVM' THEN 'Lot_PPVM' ELSE  {operation_group} END","a5_operationgroup","N","None","None","Row","C","***","csv","SQL->CASE WHEN  {col75} ='PPVM' THEN 'Lot_PPVM' ELSE  {col75} END","col76"
"f(x)->IFNULL( {final_mor} , {mor_sort} )","mor","Y","None","None","Row","F","***","@if@1","SQL->IFNULL( {col72} , {col74} )","col78"
"a2.product_group_3","product_group_3","Y","None","None","Row","c","","csv","SQL->a2.[product_group_3]","col104"
"a2.operation","operation_1","Y","None","None","Row","c","","csv","SQL->a2.[operation]","col105"
"f(x)->IFNULL(CASE WHEN a2.[quantity] = '' THEN NULL ELSE CAST (a2.[quantity] AS REAL) END,0)","wip_clean","Y","None","Sum","Row","F","***quantity","csv","SQL->IFNULL(CASE WHEN a2.[quantity] = '' THEN NULL ELSE CAST (a2.[quantity] AS REAL) END,0)","col106"
"a2.dlcp_join","dlcp_join","Y","None","None","Row","c","","csv","SQL->a2.[dlcp_join]","col107"
"f(x)->IFNULL(CASE WHEN a2.[quantity_1] = '' THEN NULL ELSE CAST (a2.[quantity_1] AS REAL) END,0)","wip_hold","Y","None","Sum","Row","F","***quantity_1","csv","SQL->IFNULL(CASE WHEN a2.[quantity_1] = '' THEN NULL ELSE CAST (a2.[quantity_1] AS REAL) END,0)","col111"
"a3.product_group_3","product_group_3_1","P","None","None","Row","c","","csv","SQL->a3.[product_group_3]","col112"
"a3.dlcp","dlcp_1","P","None","None","Row","c","","csv","SQL->a3.[dlcp]","col113"
"f(x)->qtg1","qtg1","Y","None","None","Row","f","qtg1","csv","SQL->CASE WHEN a3.[qtg1] = '' THEN NULL ELSE CAST (a3.[qtg1] AS REAL) END","col114"
"f(x)->qtg2","qtg2","Y","None","None","Row","f","qtg2","csv","SQL->CASE WHEN a3.[qtg2] = '' THEN NULL ELSE CAST (a3.[qtg2] AS REAL) END","col115"
"a3.operation","operation_2","P","None","None","Row","c","","csv","SQL->a3.[operation]","col116"
"f(x)->CASE WHEN a3.[bp_current_week] = '' THEN NULL ELSE CAST (a3.[bp_current_week] *1000 AS REAL) END","bp1","Y","None","None","Row","F","***bp_current_week","csv","SQL->CASE WHEN a3.[bp_current_week] = '' THEN NULL ELSE CAST (a3.[bp_current_week] *1000 AS REAL) END","col117"
"f(x)->CASE WHEN a2.[bp_next_week] = '' THEN NULL ELSE CAST (a2.[bp_next_week] *1000 AS REAL) END","bp2","Y","None","None","Row","F","***bp_next_week","csv","SQL->CASE WHEN a2.[bp_next_week] = '' THEN NULL ELSE CAST (a2.[bp_next_week] *1000 AS REAL) END","col122"
"a6.prodname","prodname","P","None","None","Row","c","","csv","SQL->a6.[prodname]","col118"
"a6.operation","operation_3","P","None","None","Row","c","","csv","SQL->a6.[operation]","col119"
"f(x)->stg1","stg1","Y","None","None","Row","f","stg1","csv","SQL->CASE WHEN a6.[stg1] = '' THEN NULL ELSE CAST (a6.[stg1] AS REAL) END","col120"
"f(x)->stg2","stg2","Y","None","None","Row","f","stg2","csv","SQL->CASE WHEN a6.[stg2] = '' THEN NULL ELSE CAST (a6.[stg2] AS REAL) END","col121"
"f(x)->CASE WHEN  {stg1}<=1  THEN  {qtg1} ELSE  {qtg1} / {stg1}  END","qps1","Y","None","None","Row","C","***","@if@1","SQL->CASE WHEN  {col120}<=1  THEN  {col114} ELSE  {col114} / {col120}  END","col123"
"f(x)->CASE WHEN  {stg2}<=1  THEN  {qtg2} ELSE  {qtg2} / {stg2}  END","qps2","Y","None","None","Row","F","***","@if@1","SQL->CASE WHEN  {col121}<=1  THEN  {col115} ELSE  {col115} / {col121}  END","col124"
"a6.friday_cutoff","friday_cutoff","Y","None","None","Row","c","","csv","SQL->a6.[friday_cutoff]","col125"
"f(x)->IFNULL(CASE WHEN a3.[bp_current_week] = '' THEN NULL ELSE CAST (a3.[bp_current_week] *1000 AS REAL) END,0)","commit1","Y","None","None","Row","F","***bp_current_week","csv","SQL->IFNULL(CASE WHEN a3.[bp_current_week] = '' THEN NULL ELSE CAST (a3.[bp_current_week] *1000 AS REAL) END,0)","col126"
"f(x)->IFNULL(CASE WHEN a3.[bp_next_week] = '' THEN NULL ELSE CAST (a3.[bp_next_week] *1000 AS REAL) END,0)","commit2","Y","None","None","Row","F","***bp_next_week","csv","SQL->IFNULL(CASE WHEN a3.[bp_next_week] = '' THEN NULL ELSE CAST (a3.[bp_next_week] *1000 AS REAL) END,0)","col127"
"a7.product_group_3","product_group_3_2","Y","None","None","Row","c","","csv","SQL->a7.[product_group_3]","col128"
"a7.dlcp_join","dlcp_join_1","Y","None","None","Row","c","","csv","SQL->a7.[dlcp_join]","col129"
"f(x)->quantity","usable","Y","None","None","Row","f","quantity","csv","SQL->CASE WHEN a7.[quantity] = '' THEN NULL ELSE CAST (a7.[quantity] AS REAL) END","col130"
"a8.prodgroup3","prodgroup3_1","P","None","None","Row","c","","csv","SQL->a8.[prodgroup3]","col131"
"a8.operation_1","operation_1_2","P","None","None","Row","c","","csv","SQL->a8.[operation_1]","col132"
"f(x)->total_good_1","total_good_1","Y","None","None","Row","f","total_good_1","csv","SQL->CASE WHEN a8.[total_good] = '' THEN NULL ELSE CAST (a8.[total_good] AS REAL) END","col133"
"a8.dlcp","dlcp_2","P","None","None","Row","c","","csv","SQL->a8.[dlcp]","col134"
"JOINGRID:"
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col1}","<>","Sqlite->a4.www                                                                                                    : SQL->{col22}",""
"","","Sqlite->f(x)->prod                                                                                                    : SQL->{col12}","=","Sqlite->a1.prod                                                                                                    : SQL->{col68}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col62}","=","Sqlite->f(x)->a1_operation                                                                                                    : SQL->{col71}",""
"","","Sqlite->a0.dlcp_final                                                                                                    : SQL->{col103}","=","Sqlite->a1.dlcp                                                                                                    : SQL->{col109}",""
"","","Sqlite->f(x)->prod                                                                                                    : SQL->{col12}","=","Sqlite->a5.prod1                                                                                                    : SQL->{col73}",""
"","","Sqlite->a0.ppvtype                                                                                                    : SQL->{col63}","=","Sqlite->f(x)->a5_operationgroup                                                                                                    : SQL->{col76}",""
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col1}","=","Sqlite->a2.product_group_3                                                                                                    : SQL->{col104}",""
"","","Sqlite->a0.dlcp_final                                                                                                    : SQL->{col103}","=","Sqlite->a2.dlcp_join                                                                                                    : SQL->{col107}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col62}","=","Sqlite->a2.operation                                                                                                    : SQL->{col105}",""
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col108}","=","Sqlite->a3.product_group_3                                                                                                    : SQL->{col112}",""
"","","Sqlite->a0.dlcp_final                                                                                                    : SQL->{col103}","=","Sqlite->a3.dlcp                                                                                                    : SQL->{col113}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col62}","=","Sqlite->a3.operation                                                                                                    : SQL->{col116}",""
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col108}","=","Sqlite->a6.prodname                                                                                                    : SQL->{col118}",""
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col108}","=","Sqlite->a7.product_group_3                                                                                                    : SQL->{col128}",""
"","","Sqlite->a0.dlcp_final                                                                                                    : SQL->{col103}","=","Sqlite->a7.dlcp_join                                                                                                    : SQL->{col129}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col62}","=","Sqlite->a6.operation                                                                                                    : SQL->{col119}",""
"","","Sqlite->a0.prodgroup3                                                                                                    : SQL->{col108}","=","Sqlite->a8.prodgroup3                                                                                                    : SQL->{col131}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col62}","=","Sqlite->a8.operation_1                                                                                                    : SQL->{col132}",""
"","","Sqlite->a0.dlcp_final                                                                                                    : SQL->{col103}","=","Sqlite->a8.dlcp                                                                                                    : SQL->{col134}",""
"FILTERGRID:"
"AND","","a0.prodgroup3","In Group",".\Row_data_wip_byDLCP.tab:2","","","c","csv","SQL->a0.[prodgroup3]",""












































/END_EMBED
/EMBED=VG2;SFGI Wip
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","SFGI_Wip_byDLCP.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","3"
"JOINROWS:","0"
"FILTERROWS:","1"
"COL_ID_COUNTER:","3"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","Row_data_wip_byDLCP.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.product_group_3","product_group_3","Y","None","None","Row","c","","csv","SQL->a0.[product_group_3]","col1"
"a0.dlcp_join","dlcp_join","Y","None","None","Row","c","","csv","SQL->a0.[dlcp_join]","col2"
"f(x)->quantity","quantity","Y","None","Sum","Row","f","quantity","csv","SQL->CASE WHEN a0.[quantity] = '' THEN NULL ELSE CAST (a0.[quantity] AS REAL) END","col3"
"JOINGRID:"
"FILTERGRID:"
"AND","","a0.operation","=","'7290'","","","c","csv","SQL->a0.[operation]",""





























































/END_EMBED
/EMBED=VG2;PrePostQuery_44
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","ByDLCP_QTG1.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","14"
"JOINROWS:","3"
"FILTERROWS:","0"
"COL_ID_COUNTER:","21"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","2"
"","Max_hb_cell_info.tab a1",""
"","Wip_ByDLCP_Sort.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.product_group_3","product_group_3","Y","Asc","None","Row","c","","csv","SQL->a0.[product_group_3]","col1"
"a0.dlcp","dlcp","Y","Asc","None","Row","c","","csv","SQL->a0.[dlcp]","col2"
"f(x)->bp_current_week","bp_current_week","Y","None","None","Row","f","bp_current_week","csv","SQL->CASE WHEN a0.[bp_current_week] = '' THEN NULL ELSE CAST (a0.[bp_current_week] AS REAL) END","col3"
"f(x)->bp_next_week","bp_next_week","Y","None","None","Row","f","bp_next_week","csv","SQL->CASE WHEN a0.[bp_next_week] = '' THEN NULL ELSE CAST (a0.[bp_next_week] AS REAL) END","col4"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col7"
"f(x)->quantity","quantity","Y","None","Sum","Row","f","quantity","csv","SQL->CASE WHEN a0.[quantity] = '' THEN NULL ELSE CAST (a0.[quantity] AS REAL) END","col10"
"f(x)->IFNULL(CASE WHEN a0.[newqty1] = '' THEN NULL ELSE CAST (a0.[newqty1] AS REAL) END,0)","newqty1","Y","None","None","Row","F","***newqty1","csv","SQL->IFNULL(CASE WHEN a0.[newqty1] = '' THEN NULL ELSE CAST (a0.[newqty1] AS REAL) END,0)","col8"
"f(x)->SUM ( {quantity} ) OVER (PARTITION BY  {product_group_3} , {dlcp} ORDER BY    {sdd_sequence} DESC)","usable_wip","Y","None","None","Row","F","***","s+1","SQL->SUM ( {col10} ) OVER (PARTITION BY  {col1} , {col2} ORDER BY    {col18} DESC)","col11"
"f(x)->yield","yield","Y","None","Min","Row","f","yield","csv","SQL->CASE WHEN a0.[yield] = '' THEN NULL ELSE CAST (a0.[yield] AS REAL) END","col13"
"a1.product_group_3","product_group_3_1","Y","None","None","Row","c","","csv","SQL->a1.[product_group_3]","col16"
"f(x)->sdd_sequence_1","sdd_sequence","Y","None","None","Row","f","sdd_sequence_1","csv","SQL->CASE WHEN a1.[sdd_sequence] = '' THEN NULL ELSE CAST (a1.[sdd_sequence] AS REAL) END","col18"
"a1.operation_1","operation_1","Y","None","None","Row","c","","csv","SQL->a1.[operation_1]","col19"
"a1.dlcp1","dlcp1","Y","None","None","Row","c","","csv","SQL->a1.[dlcp1]","col20"
"f(x)->mor_delta_currentweek","mor_delta_currentweek","Y","None","None","Row","f","mor_delta_currentweek","csv","SQL->CASE WHEN a0.[mor_delta_currentweek] = '' THEN NULL ELSE CAST (a0.[mor_delta_currentweek] AS REAL) END","col21"
"JOINGRID:"
"","","Sqlite->a1.product_group_3                                                                                                    : SQL->{col16}","=","Sqlite->a0.product_group_3                                                                                                    : SQL->{col1}",""
"","","Sqlite->a1.operation_1                                                                                                    : SQL->{col19}","=","Sqlite->a0.operation                                                                                                    : SQL->{col7}",""
"","","Sqlite->a1.dlcp1                                                                                                    : SQL->{col20}","=","Sqlite->a0.dlcp                                                                                                    : SQL->{col2}",""
"FILTERGRID:"



/END_EMBED
/EMBED=VG2;PrePostQuery_45
"VERSION:","1.0"
"OUTERJOIN:","No"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Max_hb_cell_info.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","13"
"JOINROWS:","2"
"FILTERROWS:","12"
"COL_ID_COUNTER:","34"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:9:a1"
"TABLEGRID:","1"
"","Antares_Cell",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.ANTARES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","2:9:a0"
"TABLEGRID:","1"
"","Antares_QTG_Current",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.ANTARES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","2:9:a2"
"TABLEGRID:","1"
"","Antares_Cell_Operation_CutOff",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","CD.ANTARES"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLServer"
"SINGLENODE:","CD.ANTARES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Other Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a1.product_group_3","product_group_3","Y","Asc","None","Row","c","","productgroup","a1->PG.product_group_3","col11"
"a1.sub_cell","sub_cell","P","None","None","Row","c","","subcell","a1->SC.[Sub_Cell]","col12"
"a1.sub_cell_desc","sub_cell_desc","P","None","None","Row","c","","subcell","a1->SC.[Sub_Cell_Desc]","col24"
"a0.factory","factory","Y","None","None","Row","c","","factorycelloperationqpshb","a0->a0.[Factory]","col1"
"a0.cell","cell","P","None","None","Row","c","MainCell, SubCell or SSPEC see column [Type]","factorycelloperationqpshb","a0->a0.[Cell]","col2"
"a0.operation","operation","Y","None","None","Row","c","","factorycelloperationqpshb","a0->a0.[Operation]","col3"
"f(a1)->CASE WHEN  {sub_cell_desc} like '%UV%'  THEN 'UV'!!!!!WHEN  {sub_cell_desc} like '%UX%'  THEN 'UX'!!!!!ELSE 'FF'END","dlcp1","Y","None","None","Row","C","***","@if@1","a1->CASE WHEN  {col24} like '%UV%'  THEN 'UV'!!!!!WHEN  {col24} like '%UX%'  THEN 'UX'!!!!!ELSE 'FF'END","col26"
"a2.cell","cell_1","P","None","None","Row","c","","celloperationcutoff","a2->a0.[Cell]","col29"
"a2.operation","operation_1","Y","None","None","Row","c","Ex: 0009","celloperationcutoff","a2->a0.[Operation]","col30"
"a2.sdd_sequence","sdd_sequence","Y","None","None","Row","n","Ex: 10, 120","celloperationcutoff","a2->a0.[SddSeq]","col31"
"f(x)->MAX ( {sdd_sequence} ) OVER (PARTITION BY  {product_group_3} , {dlcp1} ,  {operation_1} )","max","Y","None","None","Row","C","***","@if@1","All->MAX ( {col31} ) OVER (PARTITION BY  {col11} , {col26} ,  {col30} )","col32"
"f(x)->CASE WHEN  {max} = {sdd_sequence}  THEN 'Y' ELSE 'N' END","filter","Y","None","None","Row","C","***","@if@2","All->CASE WHEN  {col32} = {col31}  THEN 'Y' ELSE 'N' END","col33"
"a2.yield","yield","Y","None","Avg","Row","f","Ex: 1.0000","celloperationcutoff","a2->a0.[Yield]","col34"
"JOINGRID:"
"","","View->a1.sub_cell                                                                                                    : a1->{col12}","=","View->a0.cell                                                                                                    : a0->{col2}",""
"","","View->a0.cell                                                                                                    : a0->{col2}","=","View->a2.cell                                                                                                    : a2->{col29}",""
"FILTERGRID:"
"AND","","a0.factory","=","'CD6'","",".","c","factorycelloperationqpshb","a0->a0.[Factory]",""
"AND","","a0.operation","In","'1209'</comma\>'2209'","",".","c","factorycelloperationqpshb","a0->a0.[Operation]",""
"AND","","a1.building","=","'CD6'","","","c","productgroup","a1->PG.[Building]",""
"AND","","a0.cell","In Temp"," {View (a1)} : View->a1.sub_cell","",".","c","factorycelloperationqpshb","a0->a0.[Cell]","a1->{col12}"
"AND","(","a0.qps1","!=","0","","","f","factorycelloperationqpshb","a0->a0.[Qps1]",""
"OR","","a0.qps2","!=","0","","","f","factorycelloperationqpshb","a0->a0.[Qps2]",""
"OR","","a0.hb1","!=","0","","","f","factorycelloperationqpshb","a0->a0.[HB1]",""
"OR","","a0.hb2","!=","0",")","","f","factorycelloperationqpshb","a0->a0.[HB2]",""
"AND","","a1.sub_cell","Not Like","'CPU-%'","","","c","subcell","a1->SC.[Sub_Cell]",""
"AND","","a1.product_group_3","In Group",".\Row_data_wip_byDLCP.tab:2. product_group_3","","","c","productgroup","a1->PG.product_group_3",""
"AND","","a2.cell","In Temp"," {View (a0)} : View->a0.cell","",".","c","celloperationcutoff","a2->a0.[Cell]","a0->{col2}"
"AND","","f(x)->{filter}","=","'Y'","","","cx","@IF@3","All->{col33}",""



/END_EMBED
/EMBED=VG2;PrePostQuery_46
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","mor_byDLCP.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","4"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","5"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","mor_sort_byDLCP.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Write-File:Ymor_write_file.tab<SOF><{><}>prodgroup3	dlcp	ppv_spm	ppv_sps<{><}>xxx	xxx	xxx	xxx"
"UTILITIESDESC:","Write Text to a file. Optionally use <EOF> to mark end of file"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>mor_byDLCP.tab<~> <~>mor_write_file.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col1"
"a0.dlcp","dlcp","Y","None","None","Row","c","","csv","SQL->a0.[dlcp]","col2"
"f(x)->mor_sort","mor_sort","Y","None","Sum","Value","f","mor_sort","csv","SQL->CASE WHEN a0.[mor_sort] = '' THEN NULL ELSE CAST (a0.[mor_sort] AS REAL) END","col3"
"a0.a","a","Y","None","None","Header","c","","csv","SQL->a0.[a]","col5"
"JOINGRID:"
"FILTERGRID:"












































/END_EMBED
/EMBED=VG2;PrePostQuery_47
"VERSION:","1.0"
"OUTERJOIN:","No"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:","STHI_Pure.exe"
"EXCEL:","STHI_Pure_1.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","21"
"JOINROWS:","4"
"FILTERROWS:","7"
"COL_ID_COUNTER:","28"
"CHART_COUNTER:","6"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:0:a0"
"TABLEGRID:","1"
"","AOT_Snapshot",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","cell_info.tab a2",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a1.prodgroup3","prodgroup3","Y","Asc","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a1->p.prodgroup3","col13"
"a1.lot","lot","N","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a1->f0.lot","col7"
"a1.owner","owner","N","None","None","Row","c","Identifies the owner of the lot. Valid values include: ENG, PROD, TW. This maps to MES300 LotTypes","f_lot","a1->f0.owner","col9"
"a1.operation","operation_1","Y","None","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a1->f0.operation","col8"
"a0.operation","operation","N","Asc","None","Row","c","Operation classification column.","f_aot_testsnapshot","a0->a0.operation","col3"
"a0.entity","entity1","N","None","None","Row","c","Station Controller Entity.","f_aot_testsnapshot","a0->a0.entity","col1"
"a0.process_type","process_type","N","None","None","Row","c","","f_aot_testsnapshot","a0->a0.process_type","col4"
"a0.total_processed","total_processed","Y","None","None|Sum","Row","n","Total number of units processed.","f_aot_testsnapshot","a0->a0.total_processed","col5"
"a0.total_good","total_good","Y","None","None|Sum","Row","n","Total number of units tested as good.","f_aot_testsnapshot","a0->a0.total_good","col6"
"a0.lot","lot_1","N","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.  Fab lot format is: PYWWXXXX where P= Plant; Y= last digit of year; WW= Work Week X: Lot sequence. For Fab lots following are some of the sites identified by the first digit of the lot: 1=F15; 2=D2; 6=F6; 7=F7; 8=F8; 9=F9; A=F10; E=F11; F=F12; D=TPO lot in CA/T; C=FPO lot in CA/T","f_aot_testsnapshot","a0->a0.lot","col2"
"a1.movedin","movedin","N","None","None","Row","c","Indicates if a move in transaction has been performed at the current operation. Y means a moved in transaction has been performed.","f_lot","a1->f0.movedin","col10"
"a1.onhold","onhold","N","None","None","Row","c","Flag indicating if the lot is currently on hold. Y means the lot is on hold and N means the lot is not on hold.","f_lot","a1->f0.onhold","col11"
"a1.movein_date","movein_date","N","None","None","Row","d","The date and time the lot was moved into the current operation. Usually denotes when processing started on the lot","f_lot","a1->f0.movein_date","col12"
"a0.collection_time","collection_time","N","None","None","Row","d","Time the data was collected at the station controller.","f_aot_testsnapshot","a0->a0.collection_time","col19"
"f(a0)->MAX ( {collection_time} ) OVER (PARTITION BY  {lot_1} , {entity} )","Last_Test_Time","N","None","None","Row","C","***","f_aot_testsnapshot","a0->MAX ( {col19} ) OVER (PARTITION BY  {col2} , {col1} )","col20"
"f(a1)->maincell","maincell","P","None","None","Row","x","***Lot attribute (1833)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1833 AND la.src_erase_date IS NULL AND rownum <= 1)","col23"
"f(a1)->subcell","subcell2","P","None","None","Row","x","***Lot attribute (1834)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1834 AND la.src_erase_date IS NULL AND rownum <= 1)","col24"
"f(a1)->{maincell}  ||  SUBSTR( {subcell2} ,-1,1)","subcell","N","None","None","Row","C","***","@if@1","a1->{col23}  ||  SUBSTR( {col24} ,-1,1)","col25"
"a2.product_group_3","product_group_3","N","None","None","Row","c","","csv","SQL->a2.[product_group_3]","col26"
"a2.sub_cell","sub_cell","N","None","None","Row","c","","csv","SQL->a2.[sub_cell]","col27"
"a2.dlcp1","dlcp","Y","None","None","Row","c","","csv","SQL->a2.[dlcp1]","col28"
"JOINGRID:"
"AND","","View->a1.lot                                                                                                    : a1->{col7}","=","View->a0.lot                                                                                                    : a0->{col2}",""
"AND","","View->a1.operation                                                                                                    : a1->{col8}","=","View->a0.operation                                                                                                    : a0->{col3}",""
"","","View->a1.prodgroup3                                                                                                    : a1->{col13}","=","Sqlite->a2.product_group_3                                                                                                    : SQL->{col26}",""
"","","View->f(a1)->subcell                                                                                                    : a1->{col25}","=","Sqlite->a2.sub_cell                                                                                                    : SQL->{col27}",""
"FILTERGRID:"
"AND","","a1.terminated","=","'N'","","","c","f_lot","a1->f0.terminated",""
"AND","","a1.quantity",">","0","","","n","f_lot","a1->f0.qty1",""
"AND","","a1.src_erase_date","Is Null","","","","d","f_lot","a1->f0.src_erase_date",""
"AND","","a1.movedin","=","'Y'","","","c","f_lot","a1->f0.movedin",""
"AND","","a1.onhold","=","'N'","","","c","f_lot","a1->f0.onhold",""
"AND","","a0.load_date",">=","(SYSDATE - 5)","",".","d","f_aot_testsnapshot","a0->a0.load_date",""
"AND","","a1.operation","In Group",".\AOT pure test.tab:3. operation1","","","c","f_lot","a1->f0.operation",""











































/END_EMBED
/EMBED=VG2;PrePostQuery_48
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Row_data_wip_byDLCP.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","33"
"JOINROWS:","3"
"FILTERROWS:","7"
"COL_ID_COUNTER:","33"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","Row_data_wip_byDLCP_sort.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","2:0:a1"
"TABLEGRID:","1"
"","F_Lot_Status_22",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","Oracle"
"SINGLENODE:","Default"
"SINGLESCHEMA:","Default"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Write-File:Ywrite_file.tab<SOF><{><}>product_group_3<{><}>xxx"
"UTILITIESDESC:","Write Text to a file. Optionally use <EOF> to mark end of file"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>Row_data_wip_byDLCP.tab<~> <~>write_file.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.ww_current","ww_current","Y","None","None","Row","c","","csv","SQL->a0.[ww_current]","col1"
"a0.product_group_3","product_group_3","Y","None","None","Row","c","","csv","SQL->a0.[product_group_3]","col2"
"a0.sub_cell","sub_cell","Y","None","None","Row","c","","csv","SQL->a0.[sub_cell]","col3"
"a0.sub_cell_desc","sub_cell_desc","Y","None","None","Row","c","","csv","SQL->a0.[sub_cell_desc]","col4"
"a0.dlcp_join","dlcp_join","Y","None","None","Row","c","","csv","SQL->a0.[dlcp_join]","col5"
"a0.prod","prod","Y","None","None","Row","c","","csv","SQL->a0.[prod]","col6"
"a0.ww","ww","Y","None","None","Row","c","","csv","SQL->a0.[ww]","col7"
"a0.dlcp_1","dlcp_1","Y","None","None","Row","c","","csv","SQL->a0.[dlcp_1]","col8"
"a0.bp","bp","Y","None","None","Row","c","","csv","SQL->a0.[bp]","col9"
"a0.mor_delta_currentweek","mor_delta_currentweek","Y","None","None","Row","c","","csv","SQL->a0.[mor_delta_currentweek]","col10"
"a0.cell","cell","Y","None","None","Row","c","","csv","SQL->a0.[cell]","col11"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col12"
"a0.sdd_sequence","sdd_sequence","Y","None","None","Row","c","","csv","SQL->a0.[sdd_sequence]","col13"
"a0.yield","yield","Y","None","None","Row","c","","csv","SQL->a0.[yield]","col14"
"a0.operation_1","operation_1","Y","None","None","Row","c","","csv","SQL->a0.[operation_1]","col15"
"a0.owner","owner","Y","None","None","Row","c","","csv","SQL->a0.[owner]","col16"
"a0.quantity","quantity","Y","None","None","Row","c","","csv","SQL->a0.[quantity]","col17"
"a0.subcell_ion","subcell_ion","Y","None","None","Row","c","","csv","SQL->a0.[subcell_ion]","col18"
"a0.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a0.[prodgroup3]","col19"
"a0.next_ww","next_ww","Y","None","None","Row","c","","csv","SQL->a0.[next_ww]","col20"
"a0.bp_next_week","bp_next_week","Y","None","None","Row","c","","csv","SQL->a0.[bp_next_week]","col21"
"a0.prod_1","prod_1","Y","None","None","Row","c","","csv","SQL->a0.[prod_1]","col22"
"a0.dlcp_2","dlcp_2","Y","None","None","Row","c","","csv","SQL->a0.[dlcp_2]","col23"
"a0.mor_delta_nextweek","mor_delta_nextweek","Y","None","None","Row","c","","csv","SQL->a0.[mor_delta_nextweek]","col24"
"a0.hb1","hb1","Y","None","None","Row","c","","csv","SQL->a0.[hb1]","col25"
"a1.lot","lot","P","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory. The basic format of the Lot number is:  FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lot","a1->f0.lot","col26"
"a1.operation","operation_2","P","None","None","Row","c","The current operation (or processing step) the lot is at","f_lot","a1->f0.operation","col27"
"a1.quantity","quantity_1","Y","None","None|Sum","Row","n","The current number of units or wafers or panels in the lot","f_lot","a1->f0.qty1","col28"
"a1.owner","owner_1","Y","None","None","Row","c","Identifies the owner of the lot. Valid values include: ENG, PROD, TW. This maps to MES300 LotTypes","f_lot","a1->f0.owner","col29"
"a1.prodgroup3","prodgroup3_1","Y","None","None","Row","c","Product Classification column. May be a useful filter in Assembly/Test","f_product","a1->p.prodgroup3","col30"
"f(a1)->maincell","maincell","P","None","None","Row","x","***Lot attribute (1833)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1833 AND la.src_erase_date IS NULL AND rownum <= 1)","col31"
"f(a1)->subcell","subcell","P","None","None","Row","x","***Lot attribute (1834)","f_lot","a1->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f0.lot AND la.attribute_number = 1834 AND la.src_erase_date IS NULL AND rownum <= 1)","col32"
"f(a1)->{maincell}  ||  SUBSTR( {subcell} ,-1,1)","subcell_final","Y","None","None","Row","C","***","@if@1","a1->{col31}  ||  SUBSTR( {col32} ,-1,1)","col33"
"JOINGRID:"
"","","Sqlite->a0.product_group_3                                                                                                    : SQL->{col2}","=","View->a1.prodgroup3                                                                                                    : a1->{col30}",""
"","","Sqlite->a0.sub_cell                                                                                                    : SQL->{col3}","=","View->f(a1)->subcell_final                                                                                                    : a1->{col33}",""
"","","Sqlite->a0.operation                                                                                                    : SQL->{col12}","=","View->a1.operation                                                                                                    : a1->{col27}",""
"FILTERGRID:"
"AND","","a1.terminated","=","'N'","","","c","f_lot","a1->f0.terminated",""
"AND","","a1.quantity",">","0","","","n","f_lot","a1->f0.qty1",""
"AND","","a1.src_erase_date","Is Null","","","","d","f_lot","a1->f0.src_erase_date",""
"AND","","a1.owner","=","'PROD'","","","c","f_lot","a1->f0.owner",""
"AND","","a1.onhold","=","'Y'","","","c","f_lot","a1->f0.onhold",""
"AND","","a1.at_phq","=","'N'","","","c","f_lot","a1->decode(f0.create_data1, NULL, 'N', 'Y')",""
"AND","","a1.at_shippable1","=","'Y'","","","c","f_lot","a1->CASE WHEN SUBSTR(f0.create_data1, 1, 1) IN (7,6,5,4) THEN 'N' ELSE 'Y' END",""












































/END_EMBED
/EMBED=VG2;6970Lastlot Sort
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","6970Lastlot1.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","8"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","15"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","6970Lastlot.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.prod","prod","Y","None","None","Row","c","","csv","SQL->a0.[prod]","col1"
"a0.operation","operation1","P","None","None","Row","c","","csv","SQL->a0.[operation]","col3"
"f(x)->CASE WHEN  {operation1} is null  THEN '6970' ELSE  {operation1} END","operation","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col3} is null  THEN '6970' ELSE  {col3} END","col15"
"f(x)->IFNULL(CASE WHEN a0.[final_percent] = '' THEN NULL ELSE CAST (a0.[final_percent] AS REAL) END,0)","final_percent","Y","None","Sum","Row","F","***final_percent","csv","SQL->IFNULL(CASE WHEN a0.[final_percent] = '' THEN NULL ELSE CAST (a0.[final_percent] AS REAL) END,0)","col8"
"a0.mor_delta_currentweek","mor_delta_currentweek","Y","None","None","Row","c","","csv","SQL->a0.[mor_delta_currentweek]","col11"
"a0.dlcp","dlcp","Y","None","None","Row","c","","csv","SQL->a0.[dlcp]","col12"
"a0.ww_current","ww_current","Y","None","None","Row","c","","csv","SQL->a0.[ww_current]","col13"
"a0.dlcp_1","dlcp_1","Y","None","None","Row","c","","csv","SQL->a0.[dlcp_1]","col14"
"JOINGRID:"
"FILTERGRID:"























/END_EMBED
/EMBED=VG2;Actual Unit SPM
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","No"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:","ULPPVM Yingying.exe"
"EXCEL:","ULPPVm_lotlist_raw.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","32"
"JOINROWS:","2"
"FILTERROWS:","15"
"COL_ID_COUNTER:","76"
"CHART_COUNTER:","22"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","2:0:a2"
"TABLEGRID:","1"
"","Calendar_Data",""
"MARSNODE:","CD.[A48_PROD_21.].MARS"
"ARIESNODE:","CD.ARIES"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","@[]@"
"DATABASETYPE:","Oracle"
"SINGLENODE:","CD.[A48_PROD_21.].MARS"
"SINGLESCHEMA:","@[]@"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","Yes"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:0:a0"
"TABLEGRID:","1"
"","F_Lot_History_v3",""
"MARSNODE:","CD.[A48_PROD_21.].MARS"
"ARIESNODE:","CD.ARIES"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","@[]@"
"DATABASETYPE:","Oracle"
"SINGLENODE:","CD.[A48_PROD_21.].MARS"
"SINGLESCHEMA:","@[]@"
"PROMPT-TEXT:","Fetching MARS Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","2:2:a1"
"TABLEGRID:","1"
"","SortClass_Dice_Test_Bin_Counter",""
"MARSNODE:","CD.[A48_PROD_21.].MARS"
"ARIESNODE:","CD.ARIES"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","@[]@"
"DATABASETYPE:","Oracle"
"SINGLENODE:","CD.ARIES"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching ARIES Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"FIRST_ROWS:","No"
"ORDERED:","No"
"OTHER-HINT:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Write-File:Ytemp.tab<SOF><{><}>product_group	spm<{><}>xx	0"
"UTILITIESDESC:","Write Text to a file. Optionally use <EOF> to mark end of file"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>ULPPVm_lotlist_raw.csv<~> <~>temp.tab<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a2.ww","ww","N","None","None","Row","n","The facility work week for the given interval in the format yyyyww.  For example: 199745","f_calendar","a2->c0.ww","col60"
"a0.site_work_week","site_work_week","N","None","None","Row","n","The facility work week for the given interval in the format yyyyww.  For example: 199745.","f_calendar","a0->c0.ww","col36"
"f(a0)->SUBSTR( {site_work_week} ,-2,2)","work_week","Y","None","None","Row","C","***","@if@1","a0->SUBSTR( {col36} ,-2,2)","col64"
"a0.facility","facility","Y","None","None","Row","c","The Intel site identifier. E.g., F011, F12, F024, RA3","f_lothist","a0->f0.facility","col24"
"a0.prodgroup3","product_group","Y","None","None","Row","c","Product Classification column.","f_product","a0->p.prodgroup3","col13"
"a0.entity","entity","Y","None","None","Row","c","Typically identifies a piece of equipment though in some FACILITIES it might be a reticle ID. E.g., VDF027 might be the identifier for a diffusion tube at a GATE OXIDE operation.","f_entitylothist","a0->f4.entity","col10"
"a0.lot","lot","Y","None","None","Row","c","Identifies a batch of wafers or units being processed in the factory.The basic format of the Lot number is: ?FYWWNNNN where F=fab code, Y=year, WW=workweek, NNNN= sequence, with the 9th or 10th characters as alphanumeric. In Fab, Etest and Sort, a quantity that has a wafer as an unit of measure and the physical form that passes through the factory. A lot starting the Fab process contains up to 25 wafers and can be split into child lots of varying sizes, and wafer losses can also occur. New lots are also created to split lots due to varying characteristics, such as speed or rework, for a portion of the lot. In some 200mm fabs production lots, the lot number uses a silicon vendor ID in the 8th character","f_lothist","a0->f0.lot","col1"
"a0.operation","operation","Y","None","None","Row","c","Identifies a manufacturing process step or a holding point","f_lothist","a0->f0.operation","col2"
"a0.product","partname","Y","None","None","Row","c","A name that completely describes the product. It comprises package, device, revision, stepping, ROM designator, engineering identifier, Fab identifier, ROM code, Assembly identifier and speed. FOR FSM:P Device R SRE FCodeA Where:P = Product type (blank for production, TW for test wafer, RE, ME, FE, and BE for engineering products RECL, MECL, FECL, and BECM)Device = Device name given from corporateR = Product RevisionS = StepR = Always blankE = Engineering codeF = Fab codeCode = A = Route name the product will run on plus any unique route extension number to make the product uniqueFOR ATM:PPDevice ?R ?SIEEFCCCCATTTTPWhere:P = Mfg PackageDevice = Device name R = RevisionS = StepI = Rom IDEE = Engineering IDF = FAB IDCCCC = Spec NumberA = Assembly IDTTTT = Test Type","f_lothist","a0->f0.product","col3"
"f(a0)->AssySite","AssySite","Y","None","None","Row","X","***Lot attribute (108)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 108 AND la.src_erase_date IS NULL AND rownum <= 1)","col47"
"f(a0)->DLCP","DLCP","Y","None","None","Row","x","***Lot attribute (110)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 110 AND la.src_erase_date IS NULL AND rownum <= 1)","col46"
"f(a0)->SPM_SampleRate","ULSPM_rate","Y","None","None","Row","X","***Lot attribute (6342)","f_lot","a0->(SELECT la.attribute_value FROM @MARSSCHEMA@F_LotAttribute la where la.lot= f9.lot AND la.attribute_number = 6342 AND la.src_erase_date IS NULL AND rownum <= 1)","col48"
"a0.in_date","in_date","Y","Desc","None","Row","d","The date and time the lot was moved into the operation using the MVIN transaction. Equals zero (0) if th elot was not moved in.","f_lothist","a0->f0.in_date","col35"
"a0.out_date","out_date","Y","None","None","Row","d","The date the lot moved out of the operation. If the lot has not moved out, the value will be NULL. This column is used in date indices instead of Last_Action_Date as Last_Action_Date changes for every transaction for the lot at the operation.","f_lothist","a0->f0.out_date","col9"
"a1.lot","lot_1","N","None","None","Row","c","Workstream lot name. In case of Sort flow steps, it will be the SORT_LOT that is burned into device fuses. In Assembly/Test flow steps it is also known as TPO, APO or FPO","a_testing_session","a1->v0.lot","col37"
"a1.operation","operation_1","N","None","None","Row","c","String containing four digit identification number of an operation; identifies one operation within a FACILITY. In special cases of correlation data collection, it is prefixed with C","a_testing_session","a1->v0.operation","col38"
"a1.session_latest_flag","session_latest_flag","N","None","None","Row","c","Is this the latest testing session of a given lot-(wafer/summary)","a_testing_session","a1->v0.latest_flag","col39"
"a1.program_name","program_name","Y","None","None","Row","c","Name of the test program run on a component tester","a_testing_session","a1->v0.program_name","col40"
"a1.test_start_date","test_start_date","N","None","None","Row","d","Time test program (or BI recipe) is started. [This date includes a date and the time.]","a_testing_session","a1->v0.test_start_date_time","col41"
"a1.test_end_date","test_end_date","N","None","None","Row","d","This date includes a date and the time.","a_testing_session","a1->v0.test_end_date_time","col42"
"a1.sub_flow_step_test_only","sub_flow_step_test_only","Y","None","None","Header","c","Store the sub flow step name e.g CLASSHOT/CLASSCOLD","a_device_testing","a1->dt.sub_flow_step","col43"
"a1.fuse_id2","fuse_id2","--","None","Count","Value","c","Unit identifier made up of the Sort Lot, Sot wafer ID and the Sort X and Y coordinates. Also known as ULT (Unit-Lot Traceability). It is calculated with leading zeroes on the X and Y sub-fields, and is null if the die X location is null. Formula is: DECODE(DT.sort_x, NULL,NULL, DI.sort_lot || '_' || di.sort_wafer_id || '_' || DECODE(SIGN(dt.sort_x),1,'+',-1,'-','+') || LPAD(ABS(dt.sort_x),2,'0') || '_' || DECODE(SIGN(dt.sort_y),1,'+',-1,'-','+') || LPAD(ABS( dt.sort_y ),2,'0'))","a_device_item2","a1->DECODE(di2.sort_x,NULL,NULL,di2.sort_lot || '_' || di2.sort_wafer_id || '_' || DECODE(SIGN(di2.sort_x),1,'+',-1,'-','+') || LPAD(ABS(di2.sort_x),2,'0') || '_' || DECODE(SIGN(di2.sort_y),1,'+',-1,'-','+') || LPAD(ABS( di2.sort_y ),2,'0'))","col44"
"a0.inqty","inqty","Y","None","None","Row","n","The quantity of units or wafers in the lot when it arrived at the operation.","f_lothist","a0->f0.inqty","col53"
"a1.sdi_ss_id","sdi_ss_id","N","None","None","Row","c","SS_ID is a mneumonic that uniquely identifies a sub-structure within the DEVREVSTEP of MCP and multi-core products. A sub-structure is a subdevice e.g. a die within a MCP package or it is a subdie e.g. core or cache within multi-core product. The sub-structure can also be a subgroup of sub-structures like core0 and cach0 within multi-core die or a sub-group of flash dice within a SCSP of flash and SRAM MCP. SS_ID mneumonic follows a format of 2 letter acronym followed by three digit like CR0, CR1 etc.","a_sub_device_item","a1->sdi.sdi_ss_id","col45"
"f(a0)->CASE WHEN f2.code = 'PV01' AND f2.code_type='L' THEN f2.codeqty ELSE NULL END","PV01|||||.","Y","None","Sum","Row","C","***sort raw result: PV01","f_lotcodehist","a0->CASE WHEN f2.code = 'PV01' AND f2.code_type='L' THEN f2.codeqty ELSE NULL END","col56"
"f(a0)->CASE WHEN f2.code = 'PV02' AND f2.code_type='L' THEN f2.codeqty ELSE NULL END","PV02|||||.","Y","None","Sum","Row","C","***sort raw result: PV02","f_lotcodehist","a0->CASE WHEN f2.code = 'PV02' AND f2.code_type='L' THEN f2.codeqty ELSE NULL END","col57"
"a1.device_items_tested","total_tested","Y","None","None","Row","n","Number of distinct die or units tested  -- within a testing session or ATM summary (e.g., 1A)","a_testing_session","a1->v0.device_items_tested","col65"
"a1.device_items_tested","device_items_tested","Y","None","None","Row","n","Number of distinct die or units tested  -- within a testing session or ATM summary (e.g., 1A)","a_testing_session","a1->v0.device_items_tested","col66"
"f(a0)->DECODE( (SUBSTR( {dlcp} ,1,2)) ,'UH','Full Feature',!!!!!'UL','Full Feature',!!!!!'UM','Full Feature',!!!!!'UX','UX',!!!!!'UV','UV',null)","DLCP_Group","--","None","None","Row","C","***","@if@1","a0->DECODE( (SUBSTR( {col46} ,1,2)) ,'UH','Full Feature',!!!!!'UL','Full Feature',!!!!!'UM','Full Feature',!!!!!'UX','UX',!!!!!'UV','UV',null)","col70"
"a1.visual_id","visual_id","Y","None","Count Distinct","Value","c","A visual mark (laser read bar code) found on either unit (for PPV) or cartridge containing it (SYSTEST/OQA).","a_device_item","a1->di.visual_id","col72"
"f(a0)->MAX ( {in_date} ) OVER (PARTITION BY  {product_group}  )","max_indate","Y","None","None","Row","D","***","@if@1","a0->MAX ( {col35} ) OVER (PARTITION BY  {col13}  )","col75"
"f(x)->CASE WHEN  {in_date} = {max_indate}  THEN 'Y' ELSE 'N' END","filter","Y","None","None","Row","C","***","@if@1","All->CASE WHEN  {col35} = {col75}  THEN 'Y' ELSE 'N' END","col76"
"JOINGRID:"
"AND","","View->a0.lot                                                                                                    : a0->{col1}","=","View->a1.lot                                                                                                    : a1->{col37}",""
"AND","","View->a2.ww                                                                                                    : a2->{col60}","=","View->a0.site_work_week                                                                                                    : a0->{col36}",""
"FILTERGRID:"
"AND","","a0.operation","In","'6970'</comma\>'6452'","","","c","f_lothist","a0->f0.operation",""
"-- AND","","a0.out_date","=","{View (a2)}","",".","d","f_lothist","a0->f0.out_date",""
"AND","","a0.facility","=","'A48'","","","c","f_lothist","a0->f0.facility",""
"AND","","a0.owner","In","'PROD'","","","c","f_lothist","a0->f0.owner",""
"AND","","a1.valid_flag","=","'Y'","","","c","a_testing_session","a1->v0.valid_flag",""
"AND","","a1.within_lao_latest_flag","=","'Y'","","","c","a_device_testing","a1->dt.within_lao_latest_flag",""
"AND","","a1.session_latest_flag","=","'Y'","","","c","a_testing_session","a1->v0.latest_flag",""
"AND","","a1.operation","In","'6970'</comma\>'6452'","","","c","a_testing_session","a1->v0.operation",""
"AND","","a1.lot","In Temp"," {View (a0)} : View->a0.lot","",".","c","a_testing_session","a1->v0.lot","a0->{col1}"
"-- AND","","a1.sdi_ss_id","=","'U1'","","","c","a_sub_device_item","a1->sdi.sdi_ss_id",""
"AND","","a0.in_date","Is Not Null","","","","d","f_lothist","a0->f0.in_date",""
"AND","","a0.site_work_week","In Temp","{View (a2)} : View->a2.ww","","","n","f_calendar","a0->c0.ww","a2->{col60}"
"AND","","a0.lot","Is Not Null","","",".","c","f_lothist","a0->f0.lot",""
"AND","","a2.ww","=","a_pg$intel_ww.calculate_ww(sysdate)","",".","n","f_calendar","a2->c0.ww",""
"AND","","a0.owner","In","'PROD'","","","c","f_lothist","a0->f0.owner",""






















/END_EMBED
/EMBED=VG2;PrePostQuery_49
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","Yes"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","Yes"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Summary by product_0.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","35"
"JOINROWS:","10"
"FILTERROWS:","4"
"COL_ID_COUNTER:","74"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","6"
"","6970Lastlot1.tab a1",""
"","ULPPVM_Target.tab a0",""
"","ByDLCP_QTG_ForULPPVM.tab a2",""
"","STHI_Mor.tab a3",""
"","sthiprod.tab a5",""
"","freport_1.tab a6",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","5:3:UTILITIES"
"UTILITIES:","U->Smart-Append:Y@EXEDIR@\SmartAppend.va <~>Summary by product_byDLCP.csv<~> <~>Summary by product_0.csv<~> <~><~> <~><~> <~><~> <~>N<~> <~>N<~> <~><~> <~>Version 3<~> <~><<<spf-hadoop-server>>><~> <~><~>"
"UTILITIESDESC:","Smart-Append Data"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a1.prod","prod","Y","None","None","Row","c","","csv","SQL->a1.[prod]","col63"
"f(x)->CASE WHEN  {dlcp_1}='FF'  THEN 'FF' ELSE 'DF' END","dlcp_join","P","None","None","Row","C","***","csv","SQL->CASE WHEN  {col65}='FF'  THEN 'FF' ELSE 'DF' END","col66"
"a1.dlcp","dlcp_1","P","None","None","Row","c","","csv","SQL->a1.[dlcp]","col65"
"a0.product_group","product_group","Y","None","None","Row","c","","csv","SQL->a0.[product_group]","col3"
"f(x)->IFNULL(CASE WHEN a0.[spm] = '' THEN NULL ELSE CAST (a0.[spm] AS REAL) END,0)","spm","Y:0","None","Avg","Row","F","***spm","csv","SQL->IFNULL(CASE WHEN a0.[spm] = '' THEN NULL ELSE CAST (a0.[spm] AS REAL) END,0)","col4"
"a0.dlcp","dlcp","Y","None","None","Row","c","","csv","SQL->a0.[dlcp]","col61"
"f(x)->spm_target_1","spm_target","Y","None","Avg","Row","f","spm_target_1","csv","SQL->CASE WHEN a0.[spm_target] = '' THEN NULL ELSE CAST (a0.[spm_target] AS REAL) END","col62"
"f(x)->CASE WHEN  {spm_target_1} - {spm}>0 THEN  {spm_target_1} - {spm} ELSE 0 END","qtg_m","Y","None","None","Row","F","***","s+1","SQL->CASE WHEN  {col62} - {col4}>0 THEN  {col62} - {col4} ELSE 0 END","col12"
"a2.product_group_3","prodname","Y","None","None","Row","c","","csv","SQL->a2.[product_group_3]","col69"
"a2.operation","operation","Y","None","None","Row","c","","csv","SQL->a2.[operation]","col23"
"a2.dlcp","dlcp_2","P","None","None","Row","c","","csv","SQL->a2.[dlcp]","col70"
"f(x)->CASE WHEN   {dlcp_2} ='FF'  THEN 'FF' ELSE 'DF' END","dlcp_join_2","Y","None","None","Row","C","***","csv","SQL->CASE WHEN   {col70} ='FF'  THEN 'FF' ELSE 'DF' END","col71"
"f(x)->stg1","stg1","Y","None","None","Row","f","stg1","csv","SQL->CASE WHEN a2.[stg1] = '' THEN NULL ELSE CAST (a2.[stg1] AS REAL) END","col25"
"f(x)->CASE WHEN  {stg1}<=1 THEN  {qtg_m} /1000 ELSE  {qtg_m} /1000/{stg1} END!!!!!","qps_m","Y","None","None","Row","F","***","s+2","SQL->CASE WHEN  {col25}<=1 THEN  {col12} /1000 ELSE  {col12} /1000/{col25} END!!!!!","col26"
"f(x)->qtg1","qtg_total","Y","None","None","Row","f","qtg1","csv","SQL->CASE WHEN a2.[qtg1] = '' THEN NULL ELSE CAST (a2.[qtg1] AS REAL) END","col27"
"f(x)->CASE WHEN {qtg_total} - {qtg_m}<0  THEN 0 ELSE {qtg_total} - {qtg_m} END","qtg_s","Y","None","None","Row","F","***","s+2","SQL->CASE WHEN {col27} - {col12}<0  THEN 0 ELSE {col27} - {col12} END","col28"
"f(x)->CASE WHEN  {stg1}<=1 THEN {qtg_s} /1000 ELSE {qtg_s}/1000/{stg1} END!!!!!","qps_s","Y","None","None","Row","F","***","s+3","SQL->CASE WHEN  {col25}<=1 THEN {col28} /1000 ELSE {col28}/1000/{col25} END!!!!!","col33"
"a3.e","e","Y","None","None","Row","c","","csv","SQL->a3.[e]","col34"
"f(x)->ppv_sps","ppv_sps1","Y","None","None","Row","f","ppv_sps","csv","SQL->CASE WHEN a3.[ppv_sps] = '' THEN NULL ELSE CAST (a3.[ppv_sps] AS REAL) END","col51"
"f(x)->ppv_spm","ppv_spm","Y","None","None","Row","f","ppv_spm","csv","SQL->CASE WHEN a3.[ppv_spm] = '' THEN NULL ELSE CAST (a3.[ppv_spm] AS REAL) END","col50"
"f(x)->{ppv_sps1}","ppv_sps","Y","None","None","Row","F","***","s+1","SQL->{col51}","col56"
"f(x)->(({qps_m} /  {ppv_spm} ) + ({qps_s} /   {ppv_sps} )) / (100 + {mor_delta_currentweek} )*100","tr1","P","None","None","Row","F","***","s+4","SQL->(({col26} /  {col50} ) + ({col33} /   {col56} )) / (100 + {col60} )*100","col37"
"f(x)->SUM ( {tr1} ) OVER (PARTITION BY   {prod} )","tr","Y","None","None","Row","F","***","s+5","SQL->SUM ( {col37} ) OVER (PARTITION BY   {col63} )","col74"
"f(x)->CASE WHEN  {qtg_s}= 0  THEN 100 ELSE  {qtg_m} / {qtg_s} *100 END","m_target","Y","None","None","Row","F","***","s+4","SQL->CASE WHEN  {col28}= 0  THEN 100 ELSE  {col12} / {col28} *100 END","col45"
"a5.prod_2","prod_2","Y","None","None","Row","c","","csv","SQL->a5.[prod_2]","col48"
"a5.dlcp_final","dlcp_final","P","None","None","Row","c","","csv","SQL->a5.[dlcp_final]","col67"
"f(x)->CASE WHEN  {dlcp_final} ='FF'  THEN 'FF' ELSE 'DF' END","dlcp_join_1","Y","None","None","Row","C","***","csv","SQL->CASE WHEN  {col67} ='FF'  THEN 'FF' ELSE 'DF' END","col68"
"f(x)->ulspm_rate","ulspm_rate","Y:1","None","Sum","Row","f","ulspm_rate","csv","SQL->CASE WHEN a5.[final_percent] = '' THEN NULL ELSE CAST (a5.[final_percent] AS REAL) END","col49"
"f(x)->'Unit_PPVM'","ppv_type","Y","None","None","Row","C","***","","SQL->'Unit_PPVM'","col52"
"f(x)->mor_delta_currentweek","mor_delta_currentweek","Y","None","None","Row","f","mor_delta_currentweek","csv","SQL->CASE WHEN a5.[mor_delta_currentweek] = '' THEN NULL ELSE CAST (a5.[mor_delta_currentweek] AS REAL) END","col60"
"a6.prodgroup3","prodgroup3","Y","None","None","Row","c","","csv","SQL->a6.[prodgroup3]","col53"
"f(x)->mor","mor","Y","None","None","Row","f","mor","csv","SQL->CASE WHEN a6.[mor] = '' THEN NULL ELSE CAST (a6.[mor] AS REAL) END","col54"
"a6.ppvtype","ppvtype","Y","None","None","Row","c","","csv","SQL->a6.[ppvtype]","col55"
"a6.dlcp_final","dlcp_final_1","P","None","None","Row","c","","csv","SQL->a6.[dlcp_final]","col72"
"f(x)->CASE WHEN   {dlcp_final_1} ='FF'  THEN 'FF' ELSE 'DF' END","dlcp_join_3","Y","None","None","Row","C","***","csv","SQL->CASE WHEN   {col72} ='FF'  THEN 'FF' ELSE 'DF' END","col73"
"JOINGRID:"
"","","Sqlite->a1.prod                                                                                                    : SQL->{col63}","=","Sqlite->a0.product_group                                                                                                    : SQL->{col3}",""
"","","Sqlite->f(x)->dlcp_join                                                                                                    : SQL->{col66}","=","Sqlite->a0.dlcp                                                                                                    : SQL->{col61}",""
"","","Sqlite->a1.prod                                                                                                    : SQL->{col63}","=","Sqlite->a2.product_group_3                                                                                                    : SQL->{col69}",""
"","","Sqlite->a1.prod                                                                                                    : SQL->{col63}","=","Sqlite->a3.e                                                                                                    : SQL->{col34}",""
"","","Sqlite->a1.prod                                                                                                    : SQL->{col63}","=","Sqlite->a5.prod_2                                                                                                    : SQL->{col48}",""
"","","Sqlite->a1.prod                                                                                                    : SQL->{col63}","=","Sqlite->a6.prodgroup3                                                                                                    : SQL->{col53}",""
"","","Sqlite->f(x)->ppv_type                                                                                                    : SQL->{col52}","=","Sqlite->a6.ppvtype                                                                                                    : SQL->{col55}",""
"","","Sqlite->f(x)->dlcp_join                                                                                                    : SQL->{col66}","=","Sqlite->f(x)->dlcp_join_1                                                                                                    : SQL->{col68}",""
"","","Sqlite->f(x)->dlcp_join                                                                                                    : SQL->{col66}","=","Sqlite->f(x)->dlcp_join_2                                                                                                    : SQL->{col71}",""
"","","Sqlite->f(x)->dlcp_join                                                                                                    : SQL->{col66}","=","Sqlite->f(x)->dlcp_join_3                                                                                                    : SQL->{col73}",""
"FILTERGRID:"
"-- AND","","a0.product_group","!=","'DG1'","","","c","csv","SQL->a0.[product_group]",""
"AND","","f(x)->ulspm_rate","Is Not Null","","","","f","csv","SQL->CASE WHEN a5.[final_percent] = '' THEN NULL ELSE CAST (a5.[final_percent] AS REAL) END",""
"AND","","a1.prod","In Group",".\Row_data_wip_byDLCP.tab:2","","","c","csv","SQL->a1.[prod]",""
"AND","","a2.operation","=","'6970'","","","c","csv","SQL->a2.[operation]",""











/END_EMBED
/EMBED=VG2;SPM data Sort
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","ULPPVm_lotlist_raw_sort.csv"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","6"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","6"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","ULPPVm_lotlist_raw.csv a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.facility","facility","Y","None","None","Row","c","","csv","SQL->a0.[facility]","col1"
"a0.product_group","product_group","Y","None","None","Row","c","","csv","SQL->a0.[product_group]","col2"
"a0.work_week","work_week","Y","None","None","Row","c","","csv","SQL->a0.[work_week]","col3"
"a0.dlcp","dlcp","P","None","None","Row","c","","csv","SQL->a0.[dlcp]","col4"
"f(x)->IFNULL(CASE WHEN a0.[spm] = '' THEN NULL ELSE CAST (a0.[spm] AS REAL) END,0)","spm","Y","None","Sum","Row","F","***spm","csv","SQL->IFNULL(CASE WHEN a0.[spm] = '' THEN NULL ELSE CAST (a0.[spm] AS REAL) END,0)","col5"
"f(x)->CASE WHEN  {dlcp} like '%UV%'  THEN 'DF'!!!!!WHEN  {dlcp} like '%UX%'  THEN 'DF'!!!!! ELSE 'FF' END","dlcp_join","Y","None","None","Row","C","***","","SQL->CASE WHEN  {col4} like '%UV%'  THEN 'DF'!!!!!WHEN  {col4} like '%UX%'  THEN 'DF'!!!!! ELSE 'FF' END","col6"
"JOINGRID:"
"FILTERGRID:"























/END_EMBED
/EMBED=VG2;PrePostQuery_51
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","Non_dlcp_split_prod.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","9"
"JOINROWS:","0"
"FILTERROWS:","2"
"COL_ID_COUNTER:","13"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","ULPPVM_Target.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.sp_site_code","sp_site_code","Y","None","None","Row","c","","csv","SQL->a0.[sp_site_code]","col1"
"f(x)->spm_target","spm_target","Y","None","Sum","Row","f","spm_target","csv","SQL->CASE WHEN a0.[spm_target] = '' THEN NULL ELSE CAST (a0.[spm_target] AS REAL) END","col2"
"f(x)->spm1","spm1","Y","None","Sum","Row","f","spm1","csv","SQL->CASE WHEN a0.[spm1] = '' THEN NULL ELSE CAST (a0.[spm1] AS REAL) END","col3"
"a0.sampling_operation","sampling_operation","Y","None","None","Row","c","","csv","SQL->a0.[sampling_operation]","col4"
"a0.sp_activation_status","sp_activation_status","Y","None","None","Row","c","","csv","SQL->a0.[sp_activation_status]","col6"
"a0.filter","filter","Y","None","None","Row","c","","csv","SQL->a0.[filter]","col8"
"a0.product_group","product_group","Y","None","None","Row","c","","csv","SQL->a0.[product_group]","col9"
"a0.product_group_1","product_group_1","Y","None","None","Row","c","","csv","SQL->a0.[product_group_1]","col11"
"f(x)->spm","spm","Y","None","Sum","Row","f","spm","csv","SQL->CASE WHEN a0.[spm] = '' THEN NULL ELSE CAST (a0.[spm] AS REAL) END","col12"
"JOINGRID:"
"FILTERGRID:"
"AND","","a0.product_group","In Group(!=)",".\Row_data_wip_byDLCP.tab:2. product_group_3","","","c","csv","SQL->a0.[product_group]",""
"AND","","a0.spm_target","=","","","","c","csv","SQL->a0.[spm_target]",""



















/END_EMBED
/EMBED=VG2;PrePostQuery_52
"VERSION:","1.0"
"OUTERJOIN:","Yes"
"UNIONSORT:","No"
"DISTINCT:","No"
"QUOTECSV:","No"
"CTMISSJOIN:","No"
"EMPTYNULL:","No"
"TERMINAL:","Yes"
"OUTENABLED:","Yes"
"INLINE_VIEW:",""
"LASTPACKEDEXE:",""
"EXCEL:","ByDLCP_QTG_ForULPPVM.tab"
"ROW:","No"
"EMBED:","Y"
"INCNESTUTIL:","N"
"QUERYROWS:","9"
"JOINROWS:","0"
"FILTERROWS:","0"
"COL_ID_COUNTER:","18"
"CHART_COUNTER:","0"
"PIVOTMODE:","0"
"SQLITESPECIALHDRS:","1"
"LEGACYPIVOTHDRS:","0"
"USEPYENGINE:","Y"
"GLOBALS_FILE:",""
"GLOBAL_VARS:","-1"
"<---- New Query ---->","1:5:SQL"
"TABLEGRID:","1"
"","ByDLCP_QTG.tab a0",""
"MARSNODE:","Default"
"ARIESNODE:","Default"
"OASYSNODE:","Default"
"ARIESCLASSNODE:","ATD.ARIES"
"OTHERNODE:","TEXT (SQLite)"
"MARSSCHEMA:","Default"
"DATABASETYPE:","SQLite"
"SINGLENODE:","TEXT (SQLite)"
"SINGLESCHEMA:","N/A"
"PROMPT-TEXT:","Fetching Text (SQLite) Data"
"DISTINCT:","No"
"ROW:","No"
"EXCEL:","No"
"CT_MISS_VAL:","No"
"PREPROCESS_CSV:","No"
"NOHDRS:","No"
"CARTESIAN:","No"
"<---- New Query ---->","-99"
"QUERYGRID:"
"a0.product_group_3","product_group_3","Y","None","None","Row","c","","csv","SQL->a0.[product_group_3]","col1"
"a0.dlcp","dlcp1","N","None","None","Row","c","","csv","SQL->a0.[dlcp]","col2"
"a0.operation","operation","Y","None","None","Row","c","","csv","SQL->a0.[operation]","col6"
"f(x)->qtg1","qtg1","Y","None","Sum","Row","f","qtg1","csv","SQL->CASE WHEN a0.[qtg1] = '' THEN NULL ELSE CAST (a0.[qtg1] AS REAL) END","col13"
"f(x)->qtg2","qtg2","Y","None","Sum","Row","f","qtg2","csv","SQL->CASE WHEN a0.[qtg2] = '' THEN NULL ELSE CAST (a0.[qtg2] AS REAL) END","col14"
"a0.mor_delta_currentweek","mor_delta_currentweek","Y","None","None","Row","c","","csv","SQL->a0.[mor_delta_currentweek]","col15"
"a0.stg1","stg1","Y","None","None","Row","c","","csv","SQL->a0.[stg1]","col16"
"a0.stg2","stg2","Y","None","None","Row","c","","csv","SQL->a0.[stg2]","col17"
"f(x)->CASE WHEN  {dlcp1} ='FF' THEN 'FF' ELSE 'DF' END","dlcp","Y","None","None","Row","F","***","csv","SQL->CASE WHEN  {col2} ='FF' THEN 'FF' ELSE 'DF' END","col18"
"JOINGRID:"
"FILTERGRID:"
















/END_EMBED
/END_EMBED_ALL
